{"version":3,"sources":["components/header/Styles.tsx","components/header/Header.tsx","components/boardcolumn/Styles.tsx","components/columncard/Styles.tsx","components/columncard/ColumnCard.tsx","components/boardcolumn/BoardColumn.tsx","components/board/Styles.tsx","components/board/Board.tsx","components/mainblock/Styles.tsx","components/mainblock/MainComponent.tsx","components/loginpopup/Styles.tsx","components/loginpopup/LoginPopup.tsx","index.tsx"],"names":["Topbar","styled","div","TopbarName","Header","className","ColumnsContainer","ColumnNameInput","input","ColumnBorder","ColCard","ColumnCard","props","onClick","name","BoardColumn","column","JSON","parse","localStorage","getItem","cards","Array","length","forEach","value","i","newCardContent","useState","colCards","setCards","setName","type","placeholder","onBlur","event","target","onChange","setItem","stringify","saveName","push","author","comments","desc","prevState","concat","Board","MainComp","MainComponent","Background","LoginPopup","inputValue","initState","display","changeDisplayProperty","changeDisplayState","onKeyDown","key","style","left","top","clear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4a889a3c.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Topbar = styled.div`\n    text-align: center;\n`\n\nexport const TopbarName = styled.div`\n    font-size: 2rem;\n    color: white;\n    line-height: 40px;\n`","import React from 'react';\nimport {Topbar, TopbarName} from \"./Styles\";\n\nexport const Header: React.FC = () => {\n  return (\n    <Topbar className='topbar'>\n      <TopbarName>\n        <h6>\n          Trello\n        </h6>\n      </TopbarName>\n    </Topbar>\n  );\n}","import styled from \"styled-components\";\n\nexport const ColumnsContainer = styled.div`\n        height: 1000px;\n        padding: 10px 0 10px 0;\n        display: flex;\n        width: 100%;\n        justify-content: space-evenly;\n        background-color: #adadbd;\n    `\nexport const ColumnNameInput = styled.input`\n        width: 210px;\n        margin: 0 0 5px 0;\n    `\n\nexport const ColumnBorder = styled.div`\n        padding: 10px;\n        text-align: center;\n        border-radius: 10px;\n        width: 230px;\n        height: fit-content;\n        background-color: #e6e6e6;\n        margin: 10px;    \n    `","import styled from \"styled-components\";\n\nexport const ColCard = styled.div`\n    border-radius: 5px;\n    background: white;\n    text-align: start;\n    width: 100%;\n    height: 25px;\n    margin: 10px 0 10px 0;\n    text-indent: 10px;\n  `","import React from \"react\";\nimport {ColCard} from \"./Styles\";\n\ninterface Props {\n  name: string;\n  //Cant pass function\n  onClick?: any;\n}\n\nexport const ColumnCard: React.FC<Props> = (props) => ((\n  <ColCard onClick={props.onClick}>\n    {props.name}\n  </ColCard>\n));","import React, {useState} from \"react\";\nimport {ColumnsContainer, ColumnNameInput, ColumnBorder} from \"./Styles\";\nimport {Cards, ColumnsContent} from \"../columnsContent\";\nimport {ColumnCard} from \"../columncard\";\n\ninterface Props {\n  name: string;\n}\n\nexport const BoardColumn: React.FC<Props> = (props) => {\n\n  //This is bad\n  const column: ColumnsContent = JSON.parse(localStorage.getItem(props.name) as string);\n\n  const cards = Array(column.cards.length);\n  column.cards.forEach((value, i) => {\n    cards[i] = <ColumnCard key={i} name={value.name}/>\n  });\n\n  let newCardContent = \"\";\n\n  const [colCards, setCards] = useState(cards);\n  const [name, setName] = useState(column.name);\n\n  function saveName(name: string): void {\n    column.name = name;\n    setName(column.name);\n    localStorage.setItem(props.name, JSON.stringify(column));\n  }\n\n  function saveNewCard(): void {\n    column.cards.push({name: newCardContent, author: localStorage.getItem(\"user\"), comments: [], desc: \"\"} as Cards);\n    setCards(prevState => {\n      return prevState.concat(<ColumnCard name={newCardContent} key={colCards.length}/>);\n    });\n    localStorage.setItem(props.name, JSON.stringify(column));\n  }\n\n  return (<ColumnsContainer>\n      <ColumnBorder>\n        <ColumnNameInput type=\"text\" placeholder={name} onBlur={event => {\n          event.target.value = '';\n        }} onChange={event => {\n          saveName(event.target.value);\n        }}/>\n        {colCards}\n        <ColumnNameInput onBlur={event => {\n          event.target.value = '';\n        }} onChange={event => newCardContent = event.target.value} placeholder=\"Add new card\"/>\n        <button className=\"btn primary\" onClick={event => {\n          saveNewCard()\n        }}>\n          Add card\n        </button>\n      </ColumnBorder>\n    </ColumnsContainer>\n  )\n}","import styled from \"styled-components\";\n\nexport const ColumnsContainer = styled.div`\n        height: 1000px;\n        padding: 10px 0 10px 0;\n        display: flex;\n        width: 100%;\n        justify-content: space-evenly;\n        background-color: #adadbd;\n    `\n","import React from 'react';\nimport {BoardColumn} from \"../boardcolumn\";\nimport {ColumnsContainer} from \"./Styles\";\n\nexport const Board: React.FC = () => {\n\n  return (<ColumnsContainer>\n    <BoardColumn name={\"Column0\"}/>\n    <BoardColumn name={\"Column1\"}/>\n    <BoardColumn name={\"Column2\"}/>\n    <BoardColumn name={\"Column3\"}/>\n  </ColumnsContainer>)\n}","import styled from \"styled-components\";\n\nexport const MainComp = styled.div`\n  margin: 40px 0 0 0;\n`","import React from 'react';\nimport '../board/Board'\nimport {Board} from \"../board\";\nimport {MainComp} from \"./Styles\";\n\nexport const MainComponent: React.FC = () => {\n  return (\n    <MainComp>\n      <Board/>\n    </MainComp>\n  )\n}","import styled from \"styled-components\";\n\nexport const Background = styled.div`\n        left: 0;\n        text-align: center;\n        top: 0;\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        background: rgba(0, 0, 0, 0.3)\n    `","import React, {useState} from \"react\";\nimport {Background} from \"./Styles\";\n\ninterface Props {\n  initState?: boolean;\n}\n\nexport const LoginPopup: React.FC<Props> = (props) => {\n\n  const [display, changeDisplayProperty] = useState(props.initState ? props.initState : localStorage.getItem(\"user\") === null);\n  let inputValue: string;\n\n  function changeDisplayState(): void {\n    localStorage.setItem(\"user\", inputValue);\n    changeDisplayProperty(prevState => !prevState);\n  }\n\n  //Not sure about using useEffect\n  function onEnterPress(event: React.KeyboardEvent<HTMLDivElement>): void {\n    if (event.key === 'Enter') {\n      changeDisplayState()\n    }\n  }\n\n  return (\n    <Background\n      onKeyDown={onEnterPress}\n      style={{display: (display ? 'block' : 'none')}}>\n      {/*Ugly position*/}\n      <div className=\"modal\" style={{left: \"48%\", top: 400}}>\n        <div className=\"modal-header\">\n          <h3>Hi!</h3>\n          <p>Enter your name</p>\n          <div className=\"modal-body\">\n            <input type=\"text\" placeholder=\"Name\" onChange={event => {\n              inputValue = event.target.value\n            }}/>\n          </div>\n          <div className=\"modal-footer\">\n            <button onClick={changeDisplayState} className=\"btn primary\">\n              Done\n            </button>\n          </div>\n        </div>\n      </div>\n    </Background>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n//This is bad. Link not working from index.html\nimport './css /bootstrap.css'\n\nimport {Header} from \"./components/header/\";\nimport {MainComponent} from \"./components/mainblock\";\nimport {LoginPopup} from \"./components/loginpopup\";\n\n//For testing purposes\nlocalStorage.clear()\n\nlocalStorage.setItem(\"user\", \"Test user\")\nlocalStorage.setItem(\"Column0\", \"{\\\"name\\\":\\\"TODO\\\",\\\"cards\\\":[{\\\"name\\\":\\\"test\\\",\\\"author\\\":\\\"test\\\",\\\"comments\\\":[{\\\"author\\\":\\\"test\\\",\\\"content\\\":\\\"ok\\\"}]}]}\")\nlocalStorage.setItem(\"Column1\", \"{\\\"name\\\":\\\"TODO\\\",\\\"cards\\\":[{\\\"name\\\":\\\"test\\\",\\\"author\\\":\\\"test\\\",\\\"comments\\\":[{\\\"author\\\":\\\"test\\\",\\\"content\\\":\\\"ok\\\"}]}]}\")\nlocalStorage.setItem(\"Column2\", \"{\\\"name\\\":\\\"TODO\\\",\\\"cards\\\":[{\\\"name\\\":\\\"test\\\",\\\"author\\\":\\\"test\\\",\\\"comments\\\":[{\\\"author\\\":\\\"test\\\",\\\"content\\\":\\\"ok\\\"}]}]}\")\nlocalStorage.setItem(\"Column3\", \"{\\\"name\\\":\\\"TODO\\\",\\\"cards\\\":[{\\\"name\\\":\\\"test\\\",\\\"author\\\":\\\"test\\\",\\\"comments\\\":[{\\\"author\\\":\\\"test\\\",\\\"content\\\":\\\"ok\\\"}]}]}\")\n\nReactDOM.render(\n  <React.StrictMode>\n    <Header/>\n    <MainComponent/>\n    {/*Not sure about popup position in code */}\n    <LoginPopup/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}