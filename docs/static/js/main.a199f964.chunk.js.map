{"version":3,"sources":["components/header/styles.ts","components/header/Header.tsx","components/boardcolumn/styles.ts","components/columncard/styles.ts","components/cardpopup/styles.ts","components/popup/styles.ts","components/popup/Popup.tsx","components/cardpopup/CardPopup.tsx","components/columncard/ColumnCard.tsx","components/boardcolumn/BoardColumn.tsx","components/board/styles.ts","components/board/Board.tsx","components/mainblock/styles.ts","components/mainblock/MainComponent.tsx","components/loginpopup/styles.ts","components/loginpopup/LoginPopup.tsx","index.tsx"],"names":["Topbar","styled","div","TopbarName","Header","className","ColumnsContainer","ColumnNameInput","input","ColumnNameDiv","ColumnBorder","ColumnAddCardDiv","ButtonDiv","CardContainer","ColCard","CardComments","CardContent","styledComponentsTS","props","empty","EditCardButton","NameInput","PopupContent","PopupTitle","PopupDesc","Comments","CommentsInput","UserComment","CardPopupBack","CardPopup","height","width","ClosePopup","button","Popup","style","display","popupState","undefined","setPopupState","onClick","prevState","popupContent","useState","changeNamePopup","setChangeNamePopup","newCommentValue","setCommentValue","cardComments","Array","cardInfo","comments","length","forEach","value","i","author","content","color","name","onChange","changeCardName","onBlur","placeholder","desc","setCardInfo","event","target","ColumnCard","card","changeNameState","setChangeNameState","pS","useEffect","saveCardState","index","icon","faEdit","faComment","BoardColumn","column","JSON","parse","localStorage","getItem","cards","saveCardChanges","colCards","setCards","setName","nameInputState","setNameInputState","newCardState","setNewCardState","nameInput","setNameInput","cardInput","setCardInput","setItem","stringify","type","onMouseOver","currentTarget","focus","saveName","push","concat","saveNewCard","Board","MainComp","MainComponent","LoginPopup","initState","changeDisplayProperty","inputState","changeInputState","changeDisplayState","onKeyDown","key","clear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a199f964.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Topbar = styled.div`\n    text-align: center;\n`\n\nexport const TopbarName = styled.div`\n    font-size: 2rem;\n    color: white;\n    line-height: 40px;\n`","import React from 'react';\nimport {Topbar, TopbarName} from \"./styles\";\n\nexport const Header: React.FC = () => {\n  return (\n    <Topbar className='topbar'>\n      <TopbarName>\n        <h6>\n          Trello\n        </h6>\n      </TopbarName>\n    </Topbar>\n  );\n}","import styled from \"styled-components\";\n\nexport const ColumnsContainer = styled.div`\n        height: 1000px;\n        padding: 10px 0 10px 0;\n        display: flex;\n        width: 100%;\n        justify-content: space-evenly;\n        background-color: #adadbd;\n`\n\nexport const ColumnNameInput = styled.input`\n        width: 220px;\n        margin: 0 0 5px 0;\n`\n\nexport const ColumnNameDiv = styled.div`\n        margin: 0 0 5px 0;\n        text-align: start;\n        text-indent: 10px;\n        width: 230px;\n        height: 25px;\n        line-height: 25px;\n        background: #8d8d8d;\n        color: white;\n        border-radius: 2px;\n`\n\nexport const ColumnBorder = styled.div`\n        padding: 10px;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        border-radius: 5px;\n        width: 230px;\n        height: fit-content;\n        background-color: #e6e6e6;\n        margin: 10px;    \n`\n\nexport const ColumnAddCardDiv = styled.div`\n        text-align: start;\n        text-indent: 10px;\n        width: 230px;\n        height: 18px;\n        font-size: 10px;\n        line-height: 20px;\n        background: white;\n        border-radius: 2px;\n        margin: 3px 0 0 0;\n        &:hover {\n           background: #dedede;\n        }\n`\n\nexport const ButtonDiv = styled.div`\n        display: flex;\n        width: 200px;\n        justify-content: space-around;\n`","import styledComponentsTS from 'styled-components-ts'\nimport styled from \"styled-components\";\n\nexport const CardContainer = styled.div`\n    width: 100%;\n    height: 100%;\n`\n\nexport const ColCard = styled.div`\n    border-radius: 5px;\n    background: white;\n    text-align: start;\n    width: 100%;\n    margin: 5px 0 5px 0;\n    text-indent: 10px;\n    line-height: 25px;\n`\n\nexport const CardComments = styled.div`\n    margin: 0 0 0 2px;\n    font-size: 7px;\n`\n\ninterface CardContentProps {\n  empty: boolean;\n}\n\nexport const CardContent = styledComponentsTS<CardContentProps>(styled.div)`\n    text-indent: 10px;\n    padding: ${props => props.empty ? '7px 0 7px 0' : '7px 0 0 0'};\n    font-size: 15px;\n    line-height: 15px;\n`\n\nexport const EditCardButton = styledComponentsTS<CardContentProps>(styled.div)`\n    margin: ${props => props.empty ? '-28px  0 0 200px' : '-20px  0 0 200px'};\n`\n\nexport const NameInput = styled.input`\n    width: 190px;\n    margin: -25px 0 5px 0;\n`\n\nexport const Comments = styled.div`\n    margin: 10px 0 0 0;\n    font-weight: bold;\n    line-height: 30px;\n`\n\nexport const CommentsInput = styled.input`\n    width: 220px;\n`\n\nexport const UserComment = styled.div`\n    width: 220px;\n    border: grey 1px solid;\n`","import styled from \"styled-components\";\nimport styledComponentsTS from \"styled-components-ts\";\n\nexport const PopupContent = styled.div`\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    text-align: center;\n`\n\nexport const PopupTitle = styled.div`\n    margin: 5px 0 0 0;\n    font-weight: bold;\n    line-height: 20px;\n`\n\nexport const PopupDesc = styled.input`\n    height: 50px;\n    width: 200px;\n    margin: 10px 0 10px 0;\n`\n\nexport const ColCard = styled.div`\n    border-radius: 5px;\n    background: white;\n    text-align: start;\n    width: 100%;\n    margin: 5px 0 5px 0;\n    text-indent: 10px;\n    line-height: 25px;\n`\n\ninterface CardContentProps {\n  empty: boolean;\n}\n\nexport const CardContent = styledComponentsTS<CardContentProps>(styled.div)`\n    text-indent: 10px;\n    padding: ${props => props.empty ? '7px 0 7px 0' : '7px 0 0 0'};\n    font-size: 15px;\n    line-height: 15px;\n`\n\nexport const NameInput = styled.input`\n    width: 190px;\n    margin: -25px 0 5px 0;\n`\n\nexport const Comments = styled.div`\n    margin: 10px 0 0 0;\n    font-weight: bold;\n    line-height: 30px;\n`\n\nexport const CommentsInput = styled.input`\n    width: 220px;\n`\n\nexport const UserComment = styled.div`\n    width: 220px;\n    border: grey 1px solid;\n`","import styled from \"styled-components\";\nimport styledComponentsTS from \"styled-components-ts\";\n\nexport const CardPopupBack = styled.div`\n    position: fixed;\n    left: 0;\n    top: 0;\n    height: 100%;\n    width: 100%;\n    background: rgba(0, 0, 0, 0.3);\n`\n\ninterface PopupProps {\n  width: number;\n  height: number;\n}\n\nexport const CardPopup = styledComponentsTS<PopupProps>(styled.div)`\n    position: fixed;\n    left: 0; \n    right: 0; \n    margin-left: auto; \n    margin-right: auto;\n    top: 65px;\n    height: ${props => props.height}px;\n    width: ${props => props.width}px;\n    background: white;\n    border-radius: 3px;\n`\n\ninterface ButtonProps {\n  width: number;\n}\n\nexport const ClosePopup = styledComponentsTS<ButtonProps>(styled.button)`\n    position: fixed;\n    margin: -10px 0 0 ${props => props.width - 10}px;\n    border-radius: 50%;\n    background: #ffffff;\n    border: #767676 1px solid;\n    height: 20px;\n    width: 20px;\n    color: #999999;\n`\n","import React from \"react\";\nimport {CardPopupBack} from \"./styles\";\nimport {CardPopup, ClosePopup} from \"./styles\";\n\ninterface Props {\n  width: number;\n  height: number;\n  popupState: boolean;\n  setPopupState?: (prevState: any) => void;\n  popupContent: object;\n}\n\nexport const Popup: React.FC<Props> = (props) => {\n  return (\n    <CardPopupBack style={{display: props.popupState ? \"block\" : \"none\"}}>\n      <CardPopup height={props.height} width={props.width}\n                 display={props.popupState}>{props.setPopupState !== undefined ?\n        <ClosePopup width={props.width} style={{display: props.popupState ? \"block\" : \"none\"}}\n                    onClick={() => props.setPopupState?.((prevState: any) => !prevState)}>x</ClosePopup> : null}{props.popupContent}\n      </CardPopup>\n    </CardPopupBack>\n  )\n}","import React, {useState} from \"react\";\nimport {\n  CardContent,\n  Comments,\n  CommentsInput,\n  NameInput,\n  PopupContent,\n  PopupDesc,\n  PopupTitle, UserComment\n} from \"./styles\";\nimport {Popup} from \"../popup\";\nimport {Card} from \"../columnsContent\";\n\ninterface Props {\n  cardInfo: Card;\n  popupState: boolean;\n  // TODO : Figure out types\n  setPopupState: (prevState: any) => void;\n  changeCardName: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  setCardInfo: (event: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nexport const CardPopup: React.FC<Props> = (props) => {\n\n  const [changeNamePopup, setChangeNamePopup] = useState(false);\n  const [newCommentValue, setCommentValue] = useState(\"\");\n\n  const cardComments: object[] = Array(props.cardInfo.comments.length);\n\n  props.cardInfo.comments.forEach((value, i) => {\n    //TODO: Make prettier\n    cardComments[i] = <UserComment>{value.author} : {value.content}</UserComment>;\n  });\n\n  return (\n    <Popup height={300} width={350} popupState={props.popupState} setPopupState={props.setPopupState} popupContent={\n      <PopupContent>\n        <CardContent onClick={() => {\n          setChangeNamePopup(prevState => !prevState);\n        }} empty={props.cardInfo.comments.length <= 0} style={{color: changeNamePopup ? \"white\" : \"grey\"}}>\n          {props.cardInfo.name}\n        </CardContent>\n        {changeNamePopup ? <NameInput value={props.cardInfo.name} onChange={props.changeCardName} onBlur={() => {\n          setChangeNamePopup(prevState => !prevState);\n        }} placeholder={\"Enter new name\"} style={{display: changeNamePopup ? \"block\" : \"none\"}}/> : null}\n        <PopupTitle>\n          Description\n        </PopupTitle>\n        <PopupDesc value={props.cardInfo.desc} onChange={props.setCardInfo}/>\n        <PopupTitle>\n          Comments\n        </PopupTitle>\n        <CommentsInput value={newCommentValue} onChange={event => setCommentValue(event.target.value)}/>\n        <Comments>\n          {cardComments}\n        </Comments>\n      </PopupContent>\n    }/>\n  )\n}","import React, {useEffect, useState} from \"react\";\nimport {\n  CardComments,\n  CardContainer,\n  CardContent,\n  ColCard,\n  NameInput,\n  EditCardButton\n} from \"./styles\";\nimport {Card} from \"../columnsContent\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faComment} from \"@fortawesome/free-solid-svg-icons/faComment\";\nimport {faEdit} from \"@fortawesome/free-solid-svg-icons/faEdit\";\nimport {CardPopup} from \"../cardpopup\";\n\ninterface Props {\n  card: Card;\n  index: number;\n  saveCardState: (card: Card, index: number) => void;\n}\n\nexport const ColumnCard: React.FC<Props> = (props) => {\n\n  const [cardInfo, setCardInfo] = useState(props.card);\n  const [popupState, setPopupState] = useState(false);\n  const [changeNameState, setChangeNameState] = useState(false);\n\n  //TODO: Use another hook\n  useEffect(() => {\n    props.saveCardState(cardInfo, props.index);\n  });\n\n  function changeCardName(event: React.ChangeEvent<HTMLInputElement>) {\n    setCardInfo(pS => ({...pS, name: event.target.value}));\n  }\n\n  function changeCardDecs(event: React.ChangeEvent<HTMLInputElement>) {\n    setCardInfo(pS => ({...pS, desc: event.target.value}));\n  }\n\n  return (\n    <CardContainer>\n      <ColCard>\n        <CardContent style={{color: changeNameState ? \"white\" : \"grey\"}} onClick={() => {\n          setPopupState(prevState => !prevState);\n        }} empty={cardInfo.comments.length <= 0}>\n          {cardInfo.name}\n        </CardContent>\n        <EditCardButton onClick={() => {\n          setChangeNameState(prevState => !prevState);\n        }} empty={cardInfo.comments.length <= 0}>\n          <FontAwesomeIcon icon={faEdit}/>\n        </EditCardButton>\n        {changeNameState ? <NameInput value={cardInfo.name} onChange={changeCardName} onBlur={() => {\n          setChangeNameState(prevState => !prevState);\n        }} placeholder={\"Enter new name\"} style={{display: changeNameState ? \"block\" : \"none\"}}/> : null}\n        <CardComments style={{display: cardInfo.comments.length > 0 ? \"block\" : \"none\"}}>\n          <FontAwesomeIcon icon={faComment}/> : {cardInfo.comments.length}\n        </CardComments>\n      </ColCard>\n      <CardPopup popupState={popupState} setPopupState={setPopupState} cardInfo={cardInfo}\n                 changeCardName={changeCardName} setCardInfo={changeCardDecs}/>\n    </CardContainer>\n  )\n}","import React, {useState} from \"react\";\nimport {ColumnsContainer, ColumnNameInput, ColumnBorder, ColumnNameDiv, ColumnAddCardDiv, ButtonDiv} from \"./styles\";\nimport {Card, ColumnsContent} from \"../columnsContent\";\nimport {ColumnCard} from \"../columncard\";\n\ninterface Props {\n  name: string;\n}\n\nexport const BoardColumn: React.FC<Props> = (props) => {\n\n  const column: ColumnsContent = JSON.parse(localStorage.getItem(props.name) as string);\n\n  const cards = Array(column.cards.length);\n  column.cards.forEach((value, i) => {\n    cards[i] = <ColumnCard key={i} index={i} saveCardState={saveCardChanges} card={value}/>\n  });\n\n  const [colCards, setCards] = useState(cards);\n  const [name, setName] = useState(column.name);\n  const [nameInputState, setNameInputState] = useState(false);\n  const [newCardState, setNewCardState] = useState(false);\n  const [nameInput, setNameInput] = useState(\"\");\n  const [cardInput, setCardInput] = useState(\"\");\n\n  function saveName(name: string): void {\n    column.name = name;\n    setName(column.name);\n    localStorage.setItem(props.name, JSON.stringify(column));\n  }\n\n  function saveNewCard(): void {\n    const card = {name: cardInput, author: localStorage.getItem(\"user\"), comments: [], desc: \"\"} as Card;\n    column.cards.push(card);\n    setCards(prevState => {\n      return prevState.concat(<ColumnCard index={colCards.length} saveCardState={saveCardChanges} card={card} key={colCards.length}/>);\n    });\n    localStorage.setItem(props.name, JSON.stringify(column));\n  }\n\n  function saveCardChanges(card: Card, index: number): void {\n    column.cards[index] = card;\n    setCards(prevState => {\n      prevState[index] = <ColumnCard index={index} saveCardState={saveCardChanges} card={card} key={index}/>\n      return prevState;\n    });\n    localStorage.setItem(props.name, JSON.stringify(column));\n  }\n\n  return (<ColumnsContainer>\n      <ColumnBorder>\n        {nameInputState ? null : <ColumnNameDiv\n          onClick={() => {\n            setNameInputState(prevState => !prevState);\n          }}>{name}</ColumnNameDiv>}\n        {nameInputState ? <ColumnNameInput value={nameInput} type=\"text\" onMouseOver={event => {\n          event.currentTarget.focus();\n        }} onChange={event => {\n          setNameInput(event.target.value);\n          saveName(event.target.value);\n        }} onBlur={() => {\n          setNameInputState(prevState => !prevState);\n          setNameInput(\"\");\n        }}/> : null}\n        {colCards}\n        {newCardState ? null : <ColumnAddCardDiv\n          onClick={() => {\n            setNewCardState(prevState => !prevState);\n          }}>\n          Add new card </ColumnAddCardDiv>}\n        {newCardState ? <ColumnNameInput onMouseOver={event => {\n          event.currentTarget.focus();\n        }} value={cardInput} onChange={event => {\n          setCardInput(event.target.value);\n        }} placeholder=\"Add new card\"/> : null}\n        {newCardState ? <ButtonDiv>\n          <button className=\"btn primary\" onClick={() => {\n            if (cardInput === \"\") return;\n            saveNewCard();\n            setCardInput(\"\");\n            setNewCardState(prevState => !prevState);\n          }}>\n            Add card\n          </button>\n          <button className=\"btn\" onClick={() => {\n            setNewCardState(prevState => !prevState);\n          }}>\n            Cancel\n          </button>\n        </ButtonDiv> : null}\n      </ColumnBorder>\n    </ColumnsContainer>\n  )\n}","import styled from \"styled-components\";\n\nexport const ColumnsContainer = styled.div`\n        height: 1000px;\n        padding: 10px 0 10px 0;\n        display: flex;\n        width: 100%;\n        justify-content: space-evenly;\n        background-color: #adadbd;\n    `\n","import React from 'react';\nimport {BoardColumn} from \"../boardcolumn\";\nimport {ColumnsContainer} from \"./styles\";\n\nexport const Board: React.FC = () => {\n  return (<ColumnsContainer>\n    <BoardColumn name={\"Column0\"}/>\n    <BoardColumn name={\"Column1\"}/>\n    <BoardColumn name={\"Column2\"}/>\n    <BoardColumn name={\"Column3\"}/>\n  </ColumnsContainer>)\n}","import styled from \"styled-components\";\n\nexport const MainComp = styled.div`\n  margin: 40px 0 0 0;\n`","import React from 'react';\nimport '../board/Board'\nimport {Board} from \"../board\";\nimport {MainComp} from \"./styles\";\n\nexport const MainComponent: React.FC = () => {\n  return (\n    <MainComp>\n      <Board/>\n    </MainComp>\n  )\n}","import styled from \"styled-components\";\n\nexport const PopupContent = styled.div`\n        width: 100%;\n        height: 100%;\n        text-align: center;\n        display: flex;\n        flex-direction: column;\n        justify-content: space-around;\n    `\n\n","import React, {useState} from \"react\";\nimport {Popup} from \"../popup\";\nimport {PopupContent} from \"./styles\";\n\ninterface Props {\n  initState?: boolean;\n}\n\nexport const LoginPopup: React.FC<Props> = (props) => {\n\n  const [display, changeDisplayProperty] = useState(props.initState ? props.initState : localStorage.getItem(\"user\") === null);\n  const [inputState, changeInputState] = useState(\"\");\n\n  function changeDisplayState(): void {\n    if (inputState === \"\") return;\n    localStorage.setItem(\"user\", inputState);\n    changeDisplayProperty(prevState => !prevState);\n  }\n\n  return (\n    <Popup height={300} width={850} popupState={display} popupContent={\n      <PopupContent onKeyDown={event => {\n        if (event.key === 'Enter') changeDisplayState()\n      }}>\n        <div>\n          <h3>Hi!</h3>\n          <p>Enter your name</p>\n        </div>\n        <div className=\"modal-body\">\n          <input type=\"text\" placeholder=\"Name\" value={inputState} onChange={event => {\n            changeInputState(event.target.value);\n          }}/>\n        </div>\n        <div className=\"modal-footer\">\n          <button onClick={changeDisplayState} className=\"btn primary\">\n            Done\n          </button>\n        </div>\n      </PopupContent>\n    }>\n    </Popup>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n//This is bad. Link not working from index.html\nimport './css /bootstrap.css'\n\nimport {Header} from \"./components/header/\";\nimport {MainComponent} from \"./components/mainblock\";\nimport {LoginPopup} from \"./components/loginpopup\";\n\n//For testing purposes\nlocalStorage.clear()\n\n// localStorage.setItem(\"user\", \"Test user\");\nlocalStorage.setItem(\"Column0\", \"{\\\"name\\\":\\\"TODO\\\",\\\"cards\\\":[]}\");\nlocalStorage.setItem(\"Column1\", \"{\\\"name\\\":\\\"In Progress\\\",\\\"cards\\\":[]}\");\nlocalStorage.setItem(\"Column2\", \"{\\\"name\\\":\\\"Testing\\\",\\\"cards\\\":[]}\");\nlocalStorage.setItem(\"Column3\", \"{\\\"name\\\":\\\"Done\\\",\\\"cards\\\":[]}\");\n\nReactDOM.render(\n  <React.StrictMode>\n    <Header/>\n    <MainComponent/>\n    <LoginPopup/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}