{"version":3,"sources":["components/header/styles.tsx","components/header/Header.tsx","components/boardcolumn/styles.tsx","components/columncard/styles.tsx","components/columncard/ColumnCard.tsx","components/boardcolumn/BoardColumn.tsx","components/board/styles.tsx","components/board/Board.tsx","components/mainblock/styles.tsx","components/mainblock/MainComponent.tsx","components/loginpopup/styles.tsx","components/loginpopup/LoginPopup.tsx","index.tsx"],"names":["Topbar","styled","div","TopbarName","Header","className","ColumnsContainer","ColumnNameInput","input","ColumnNameDiv","ColumnBorder","ColumnAddCardDiv","ButtonDiv","CardContainer","ColCard","CardPopupBack","CardPopup","ClosePopup","button","ColumnCard","props","useState","popupState","setPopupState","onClick","event","prevState","card","name","style","display","BoardColumn","column","JSON","parse","localStorage","getItem","cards","Array","length","forEach","value","i","index","saveCardState","saveCardChanges","colCards","setCards","setName","nameInputState","setNameInputState","newCardState","setNewCardState","nameInput","setNameInput","cardInput","setCardInput","setItem","stringify","type","onMouseOver","currentTarget","focus","onChange","target","saveName","onBlur","placeholder","author","comments","desc","push","concat","saveNewCard","Board","MainComp","MainComponent","Background","LoginPopup","inputValue","initState","changeDisplayProperty","changeDisplayState","onKeyDown","key","left","top","clear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5d8ad0cf.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Topbar = styled.div`\n    text-align: center;\n`\n\nexport const TopbarName = styled.div`\n    font-size: 2rem;\n    color: white;\n    line-height: 40px;\n`","import React from 'react';\nimport {Topbar, TopbarName} from \"./styles\";\n\nexport const Header: React.FC = () => {\n  return (\n    <Topbar className='topbar'>\n      <TopbarName>\n        <h6>\n          Trello\n        </h6>\n      </TopbarName>\n    </Topbar>\n  );\n}","import styled from \"styled-components\";\n\nexport const ColumnsContainer = styled.div`\n        height: 1000px;\n        padding: 10px 0 10px 0;\n        display: flex;\n        width: 100%;\n        justify-content: space-evenly;\n        background-color: #adadbd;\n`\n\nexport const ColumnNameInput = styled.input`\n        width: 220px;\n        margin: 0 0 5px 0;\n`\n\nexport const ColumnNameDiv = styled.div`\n        margin: 0 0 5px 0;\n        text-align: start;\n        text-indent: 10px;\n        width: 230px;\n        height: 20px;\n        line-height: 20px;\n        background: white;\n        border-radius: 2px;\n`\n\nexport const ColumnBorder = styled.div`\n        padding: 10px;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        border-radius: 5px;\n        width: 230px;\n        height: fit-content;\n        background-color: #e6e6e6;\n        margin: 10px;    \n`\n\nexport const ColumnAddCardDiv = styled.div`\n        text-align: start;\n        text-indent: 10px;\n        width: 230px;\n        height: 18px;\n        font-size: 10px;\n        line-height: 20px;\n        background: white;\n        border-radius: 2px;\n        margin: 3px 0 0 0;\n        &:hover {\n           background: #dedede;\n        }\n`\n\nexport const ButtonDiv = styled.div`\n        display: flex;\n        width: 200px;\n        justify-content: space-around;\n`","import styled from \"styled-components\";\n\nexport const CardContainer = styled.div`\n    width: 100%;\n    height: 100%;\n`\n\nexport const ColCard = styled.div`\n    border-radius: 5px;\n    background: white;\n    text-align: start;\n    width: 100%;\n    height: 25px;\n    margin: 5px 0 5px 0;\n    text-indent: 10px;\n    line-height: 25px;\n`\n\nexport const CardPopupBack = styled.div`\n    position: fixed;\n    left: 0;\n    top: 0;\n    height: 100%;\n    width: 100%;\n    background: rgba(0, 0, 0, 0.3);\n`\nexport const CardPopup = styled.div`\n    position: fixed;\n    left: 0; \n    right: 0; \n    margin-left: auto; \n    margin-right: auto;\n    top: 65px;\n    height: 300px;\n    width: 850px;\n    background: white;\n    border-radius: 3px;\n`\n\nexport const ClosePopup = styled.button`\n    position: fixed;\n    margin: -10px 0 0 840px;\n    border-radius: 50%;\n    background: #ffffff;\n    border: #767676 1px solid;\n    height: 20px;\n    width: 20px;\n    color: #999999;\n`","import React, {useState} from \"react\";\nimport {CardContainer, CardPopup, CardPopupBack, ClosePopup, ColCard} from \"./styles\";\nimport {Card} from \"../columnsContent\";\n\ninterface Props {\n  card: Card;\n  index: number;\n  saveCardState: any;\n}\n\nexport const ColumnCard: React.FC<Props> = (props) => {\n\n  const [popupState, setPopupState] = useState(false)\n\n  return (\n    <CardContainer>\n      <ColCard onClick={event => {\n        setPopupState(prevState => !prevState);\n      }}>\n        {props.card.name}\n      </ColCard>\n      <CardPopupBack style={{display: popupState ? \"block\" : \"none\"}}>\n        <CardPopup style={{display: popupState ? \"block\" : \"none\"}}>\n          <ClosePopup>\n            x\n          </ClosePopup>\n        </CardPopup>\n      </CardPopupBack>\n    </CardContainer>\n  )\n};","import React, {useState} from \"react\";\nimport {ColumnsContainer, ColumnNameInput, ColumnBorder, ColumnNameDiv, ColumnAddCardDiv, ButtonDiv} from \"./styles\";\nimport {Card, ColumnsContent} from \"../columnsContent\";\nimport {ColumnCard} from \"../columncard\";\n\ninterface Props {\n  name: string;\n}\n\nexport const BoardColumn: React.FC<Props> = (props) => {\n\n  const column: ColumnsContent = JSON.parse(localStorage.getItem(props.name) as string);\n\n  const cards = Array(column.cards.length);\n  column.cards.forEach((value, i) => {\n    cards[i] = <ColumnCard key={i} index={i} saveCardState={saveCardChanges} card={value}/>\n  });\n\n  const [colCards, setCards] = useState(cards);\n  const [name, setName] = useState(column.name);\n  const [nameInputState, setNameInputState] = useState(false);\n  const [newCardState, setNewCardState] = useState(false);\n  const [nameInput, setNameInput] = useState(\"\");\n  const [cardInput, setCardInput] = useState(\"\");\n\n  function saveName(name: string): void {\n    column.name = name;\n    setName(column.name);\n    localStorage.setItem(props.name, JSON.stringify(column));\n  }\n\n  function saveNewCard(): void {\n    const card = {name: cardInput, author: localStorage.getItem(\"user\"), comments: [], desc: \"\"} as Card;\n    column.cards.push(card);\n    setCards(prevState => {\n      return prevState.concat(<ColumnCard index={colCards.length} saveCardState={saveCardChanges} card={card} key={colCards.length}/>);\n    });\n    localStorage.setItem(props.name, JSON.stringify(column));\n  }\n\n  function saveCardChanges(card: Card, index: number): void {\n    column.cards[index] = card;\n    setCards(prevState => {\n      prevState[index] = <ColumnCard index={index} saveCardState={saveCardChanges} card={card} key={index}/>\n      return prevState;\n    });\n    localStorage.setItem(props.name, JSON.stringify(column));\n  }\n\n  return (<ColumnsContainer>\n      <ColumnBorder>\n        <ColumnNameDiv style={{display: nameInputState ? 'none' : 'block'}}\n                       onClick={event => {\n                         setNameInputState(prevState => !prevState);\n                       }}>{name}</ColumnNameDiv>\n        <ColumnNameInput style={{display: nameInputState ? 'block' : 'none'}} value={nameInput} type=\"text\"\n                         onMouseOver={event => {\n                           event.currentTarget.focus();\n                         }}\n                         onChange={event => {\n                           setNameInput(event.target.value);\n                           saveName(event.target.value);\n                         }}\n                         onBlur={event => {\n                           setNameInputState(prevState => !prevState);\n                           setNameInput(\"\");\n                         }}\n        />\n        {colCards}\n        <ColumnAddCardDiv style={{display: newCardState ? 'none' : 'block'}}\n                          onClick={event => {\n                            setNewCardState(prevState => !prevState);\n                          }}>\n          Add new card\n        </ColumnAddCardDiv>\n        <ColumnNameInput style={{display: newCardState ? 'block' : 'none'}} value={cardInput} onChange={event => {\n          setCardInput(event.target.value);\n        }} placeholder=\"Add new card\"/>\n        <ButtonDiv>\n          <button style={{display: newCardState ? 'block' : 'none'}} className=\"btn primary\" onClick={event => {\n            if (cardInput === \"\") return;\n            saveNewCard();\n            setCardInput(\"\");\n            setNewCardState(prevState => !prevState);\n          }}>\n            Add card\n          </button>\n          <button style={{display: newCardState ? 'block' : 'none'}} className=\"btn\" onClick={event => {\n            setNewCardState(prevState => !prevState);\n          }}>\n            Cancel\n          </button>\n        </ButtonDiv>\n      </ColumnBorder>\n    </ColumnsContainer>\n  )\n}","import styled from \"styled-components\";\n\nexport const ColumnsContainer = styled.div`\n        height: 1000px;\n        padding: 10px 0 10px 0;\n        display: flex;\n        width: 100%;\n        justify-content: space-evenly;\n        background-color: #adadbd;\n    `\n","import React from 'react';\nimport {BoardColumn} from \"../boardcolumn\";\nimport {ColumnsContainer} from \"./styles\";\n\nexport const Board: React.FC = () => {\n\n  return (<ColumnsContainer>\n    <BoardColumn name={\"Column0\"}/>\n    <BoardColumn name={\"Column1\"}/>\n    <BoardColumn name={\"Column2\"}/>\n    <BoardColumn name={\"Column3\"}/>\n  </ColumnsContainer>)\n}","import styled from \"styled-components\";\n\nexport const MainComp = styled.div`\n  margin: 40px 0 0 0;\n`","import React from 'react';\nimport '../board/Board'\nimport {Board} from \"../board\";\nimport {MainComp} from \"./styles\";\n\nexport const MainComponent: React.FC = () => {\n  return (\n    <MainComp>\n      <Board/>\n    </MainComp>\n  )\n}","import styled from \"styled-components\";\n\nexport const Background = styled.div`\n        left: 0;\n        text-align: center;\n        top: 0;\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        background: rgba(0, 0, 0, 0.3)\n    `","import React, {useState} from \"react\";\nimport {Background} from \"./styles\";\n\ninterface Props {\n  initState?: boolean;\n}\n\nexport const LoginPopup: React.FC<Props> = (props) => {\n\n  const [display, changeDisplayProperty] = useState(props.initState ? props.initState : localStorage.getItem(\"user\") === null);\n  let inputValue: string;\n\n  function changeDisplayState(): void {\n    localStorage.setItem(\"user\", inputValue);\n    changeDisplayProperty(prevState => !prevState);\n  }\n\n  function onEnterPress(event: React.KeyboardEvent<HTMLDivElement>): void {\n    if (event.key === 'Enter') {\n      changeDisplayState()\n    }\n  }\n\n  return (\n    <Background\n      onKeyDown={onEnterPress}\n      style={{display: (display ? 'block' : 'none')}}>\n      {/*Ugly position*/}\n      <div className=\"modal\" style={{left: \"48%\", top: 400}}>\n        <div className=\"modal-header\">\n          <h3>Hi!</h3>\n          <p>Enter your name</p>\n          <div className=\"modal-body\">\n            <input type=\"text\" placeholder=\"Name\" onChange={event => {\n              inputValue = event.target.value\n            }}/>\n          </div>\n          <div className=\"modal-footer\">\n            <button onClick={changeDisplayState} className=\"btn primary\">\n              Done\n            </button>\n          </div>\n        </div>\n      </div>\n    </Background>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n//This is bad. Link not working from index.html\nimport './css /bootstrap.css'\n\nimport {Header} from \"./components/header/\";\nimport {MainComponent} from \"./components/mainblock\";\nimport {LoginPopup} from \"./components/loginpopup\";\n\n//For testing purposes\nlocalStorage.clear()\n\nlocalStorage.setItem(\"user\", \"Test user\");\nlocalStorage.setItem(\"Column0\", \"{\\\"name\\\":\\\"TODO\\\",\\\"cards\\\":[{\\\"name\\\":\\\"test\\\",\\\"author\\\":\\\"test\\\",\\\"comments\\\":[{\\\"author\\\":\\\"test\\\",\\\"content\\\":\\\"ok\\\"}]}]}\");\nlocalStorage.setItem(\"Column1\", \"{\\\"name\\\":\\\"TODO\\\",\\\"cards\\\":[{\\\"name\\\":\\\"test\\\",\\\"author\\\":\\\"test\\\",\\\"comments\\\":[{\\\"author\\\":\\\"test\\\",\\\"content\\\":\\\"ok\\\"}]}]}\");\nlocalStorage.setItem(\"Column2\", \"{\\\"name\\\":\\\"TODO\\\",\\\"cards\\\":[{\\\"name\\\":\\\"test\\\",\\\"author\\\":\\\"test\\\",\\\"comments\\\":[{\\\"author\\\":\\\"test\\\",\\\"content\\\":\\\"ok\\\"}]}]}\");\nlocalStorage.setItem(\"Column3\", \"{\\\"name\\\":\\\"TODO\\\",\\\"cards\\\":[{\\\"name\\\":\\\"test\\\",\\\"author\\\":\\\"test\\\",\\\"comments\\\":[{\\\"author\\\":\\\"test\\\",\\\"content\\\":\\\"ok\\\"}]}]}\");\n\nReactDOM.render(\n  <React.StrictMode>\n    <Header/>\n    <MainComponent/>\n    {/*Not sure about popup position in code */}\n    <LoginPopup/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}