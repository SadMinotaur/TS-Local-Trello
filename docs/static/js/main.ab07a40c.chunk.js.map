{"version":3,"sources":["components/Header/styles.ts","components/Header/Header.tsx","components/Board/styles.ts","components/Boardcolumn/styles.ts","components/Columncard/styles.ts","components/Cardpopup/styles.ts","components/Popup/styles.ts","components/Popup/Popup.tsx","components/Comment/styles.ts","components/Comment/CardComment.tsx","utils/popup-context.ts","components/Cardpopup/CardPopup.tsx","components/Columncard/ColumnCard.tsx","components/Boardcolumn/BoardColumn.tsx","components/Board/Board.tsx","components/Mainblock/styles.ts","components/Loginpopup/styles.ts","components/Loginpopup/LoginPopup.tsx","components/Mainblock/MainComponent.tsx","index.tsx"],"names":["TopbarName","styled","div","Header","ColumnsContainer","ColumnNameInput","input","ColumnNameDiv","ColumnBorder","ColumnAddCardDiv","ButtonDiv","CardContainer","ColCard","CardComments","CardContent","styledComponentsTS","props","empty","EditCardButton","NameInput","PopupContent","PopupText","PopupDesc","textarea","PopupDescDiv","CardName","CommentsBorder","CommentsInput","CommentsInputButton","button","CommentsArray","CardPopupBack","CardPopup","height","width","ClosePopup","Popup","setPopupState","children","buttonPos","Number","slice","length","undefined","onClick","UserComment","CommentEdit","CommentInput","UserCommentDelete","CardComment","index","author","content","deleteCardComment","changeCardComment","useState","nameState","setNameState","ps","value","onChange","event","onBlur","icon","faTimes","PopupCardContext","React","createContext","column","changeCardName","changeCardDesc","setCardsComments","newCommentValue","setCommentValue","context","useContext","name","desc","comments","changeNamePopup","setChangeNamePopup","addCommentState","setAddCommentState","descState","setDescState","handleEsc","keyCode","useEffect","window","addEventListener","removeEventListener","useCallback","i","map","comment","id","target","filter","v","saveComment","trim","concat","onMouseOver","e","currentTarget","focus","ev","placeholder","ColumnCard","card","saveCardState","deleteCard","cardName","setCardName","cardDesc","setCardDesc","cardComments","setComments","popupState","changeNameState","setChangeNameState","rightClickState","setRightClickState","onContextMenu","preventDefault","prevState","type","faEdit","faComment","Provider","localStorage","getItem","BoardColumn","columnName","JSON","parse","setName","cards","colCards","setCardsArray","cardInput","setCardInput","nameInputState","setNameInputState","newCardState","setNewCardState","isFirstRun","useRef","current","setItem","stringify","saveNewCard","saveCardChanges","cardArray","className","Board","MainComp","LoginPopup","togglePopup","inputState","changeInputState","changeDisplayState","onKeyDown","key","MainComponent","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab07a40c.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const TopbarName = styled.div`\n    top:0;\n    position: fixed;\n    width: 100%;\n    text-align: center;\n    font-size: 2rem;\n    color: white;\n    line-height: 20px;\n    background-color: grey;\n    z-index: -1;\n`","import React from 'react';\nimport { TopbarName } from \"./styles\";\n\nexport const Header: React.FC = () => {\n  return (\n    <TopbarName>\n      <h6>\n        Trello\n        </h6>\n    </TopbarName>\n  );\n}","import styled from \"styled-components\";\n\nexport const ColumnsContainer = styled.div`\n    padding: 10px 0 10px 0;\n    display: flex;\n    width: 100%;\n    justify-content: space-evenly;\n    background-color: #adadbd;\n    @media (max-width: 1100px) {\n      justify-content: start;\n    }\n`","import styled from \"styled-components\";\n\nexport const ColumnNameInput = styled.input`\n        width: 220px;\n        margin: 0 0 5px 0;\n`\n\nexport const ColumnNameDiv = styled.div`\n        margin: 0 0 5px 0;\n        text-align: start;\n        text-indent: 10px;\n        width: 230px;\n        height: 25px;\n        line-height: 25px;\n        background: #8d8d8d;\n        color: white;\n        border-radius: 2px;\n`\n\nexport const ColumnBorder = styled.div`\n        padding: 10px;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        border-radius: 5px;\n        width: 230px;\n        height: fit-content;\n        background-color: #e6e6e6;\n        margin: 10px;    \n`\n\nexport const ColumnAddCardDiv = styled.div`\n        text-align: start;\n        text-indent: 10px;\n        width: 230px;\n        height: 18px;\n        font-size: 10px;\n        line-height: 20px;\n        background: white;\n        border-radius: 2px;\n        margin: 3px 0 0 0;\n        &:hover {\n           background: #dedede;\n        }\n`\n\nexport const ButtonDiv = styled.div`\n        display: flex;\n        width: 200px;\n        justify-content: space-around;\n`","import styledComponentsTS from 'styled-components-ts'\nimport styled from \"styled-components\";\n\nexport const CardContainer = styled.div`\n    width: 100%;\n    height: 100%;\n`\n\nexport const ColCard = styled.div`\n    border-radius: 5px;\n    background: white;\n    text-align: start;\n    width: 100%;\n    margin: 5px 0 5px 0;\n    text-indent: 10px;\n    line-height: 25px;\n`\n\nexport const CardComments = styled.div`\n    margin: 0 0 0 2px;\n    font-size: 7px;\n`\n\ninterface CardContentProps {\n  empty: boolean;\n}\n\nexport const CardContent = styledComponentsTS<CardContentProps>(styled.div)`\n    text-indent: 10px;\n    padding: ${props => props.empty ? '7px 0 7px 0' : '7px 0 0 0'};\n    font-size: 15px;\n    line-height: 15px;\n`\n\nexport const EditCardButton = styledComponentsTS<CardContentProps>(styled.div)`\n    margin: ${props => props.empty ? '-28px  0 0 200px' : '-20px  0 0 200px'};\n`\n\nexport const NameInput = styled.input`\n    width: 170px;\n    margin: 3px 0 0 0;\n`","import styled from \"styled-components\";\n\nexport const PopupContent = styled.div`\n    width: 100%;\n    height: 100%; \n    padding: 30px;\n    box-sizing: border-box;\n`\n\nexport const PopupText = styled.div`\n    margin: 5px 0 0 0;\n    font-weight: bold;\n    line-height: 20px;\n`\n\nexport const PopupDesc = styled.textarea`\n    height: 60px;\n    width: 100%;\n    margin: 10px 0 10px 0px;\n    border-radius: 2px;\n    border: 0.2px solid grey;\n    overflow-wrap: break-word;\n    resize: none;\n    overflow: hidden;\n`\nexport const PopupDescDiv = styled.div`\n    height: 60px;\n    width: 100%;\n    margin: 10px 0 10px 0px;\n    border-radius: 2px;\n    border: 0.2px solid grey;\n    overflow-wrap: break-word;\n    overflow: scroll;\n`\n\nexport const ColCard = styled.div`\n    border-radius: 5px;\n    background: white;\n    text-align: start;\n    width: 100%;\n    margin: 5px 0 5px 0;\n    text-indent: 10px;\n    line-height: 25px;\n`\nexport const CardName = styled.div`\n    margin: 0 0 10px 0;\n    font-size: 22px;\n    line-height: 15px;\n`\n\nexport const NameInput = styled.input`\n    width: 190px;\n    margin: -25px 0 5px 0;\n`\n\nexport const CommentsBorder = styled.div`\n    width: 100%;\n    border: 0.2px grey solid;\n    border-radius: 2px\n`\n\nexport const CommentsInput = styled.textarea`\n    width: 95%;\n    margin: 5px;\n    border-radius: 2px;\n    border: 0;\n    overflow-wrap: break-word;\n    resize: none;\n    overflow: hidden;\n`\n\nexport const CommentsInputButton = styled.button`\n    height: 30px;\n    color: grey;\n    background-color: white;\n    border-radius: 2px;\n    width: 100px;\n    border: 0;\n`\n\nexport const CommentsArray = styled.div`\n    margin: 10px 0 0 0;\n    width: 100%;\n    font-weight: bold;\n`","import styled from \"styled-components\";\nimport styledComponentsTS from \"styled-components-ts\";\n\nexport const CardPopupBack = styled.div`\n  position: fixed;\n  left: 0;\n  top: 0;\n  height:  100%;\n  width: 100%;\n  background: rgba(0, 0, 0, 0.3);\n  overflow-x: hidden;\n`\n\ninterface PopupProps {\n  width: string;\n  height: string;\n}\n\nexport const CardPopup = styledComponentsTS<PopupProps>(styled.div)`\n  position: absolute;\n  margin: 0 auto 100px auto; \n  left: 0; \n  right: 0;\n  top: 35px;\n  height: ${props => props.height};\n  width: ${props => props.width};\n  background: white;\n  border-radius: 3px;\n  @media (max-width: ${props => props.width}) {\n    width : 90%\n  }\n`\n\ninterface ButtonProps {\n  width: number;\n}\n\nexport const ClosePopup = styledComponentsTS<ButtonProps>(styled.button)`\n  position: absolute;\n  margin: -10px 0 0 ${props => props.width}px;\n  border-radius: 50%;\n  background: #ffffff;\n  border: #767676 1px solid;\n  height: 20px;\n  width: 20px;\n  color: #999999;\n  @media (max-width: ${props => props.width + 20}px) {\n    position: fixed;\n    top: 20px;\n    right 5px;\n  }\n`\n","import React from \"react\";\nimport { CardPopupBack } from \"./styles\";\nimport { CardPopup, ClosePopup } from \"./styles\";\n\ninterface Props {\n  width: string;\n  height: string;\n  setPopupState?: (state: boolean) => void;\n}\n\nexport const Popup: React.FC<Props> = ({ width, height, setPopupState, children }) => {\n  const buttonPos: number = Number(width.slice(0, width.length - 2)) - 10;\n\n  return (\n    <CardPopupBack>\n      <CardPopup\n        height={height}\n        width={width}>\n        {setPopupState !== undefined && <ClosePopup\n          width={buttonPos}\n          onClick={() => setPopupState?.(false)}>\n          x\n        </ClosePopup>}\n        {children}\n      </CardPopup>\n    </CardPopupBack>\n  )\n}","import styled from \"styled-components\";\n\nexport const UserComment = styled.div`\n  box-sizing: border-box;\n  word-wrap: break-word;\n  line-height: 30px;\n  padding: 5px;\n  margin: 3px 0 0 0;\n  width: 100%;\n  border: grey 1px solid;\n  border-radius: 2px;\n  &:hover {\n    background: #cbcaca;\n  }\n`\n\nexport const CommentEdit = styled.div`\n  border: grey 1px solid;\n  border-radius: 2px;\n`\n\nexport const CommentInput = styled.textarea`\n  margin: 3px 0 0 3px ;\n  border: 0;\n  line-height: 30px;\n  width: 95%;\n  resize: none;\n`\n\nexport const UserCommentDelete = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: #cbcaca;\n  height: 20px;\n  width: 20px;\n  border-radius: 2px;\n  &:hover {\n    background: white;\n  }\n`","import React, { useState } from \"react\";\nimport { CommentInput, UserComment, UserCommentDelete, CommentEdit } from \"./styles\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface Props {\n  index: number;\n  author: string;\n  content: string;\n  deleteCardComment: (i: number) => void;\n  changeCardComment: (i: number, event: React.ChangeEvent<HTMLTextAreaElement>) => void;\n}\n\nexport const CardComment: React.FC<Props> = ({ index, author, content, deleteCardComment, changeCardComment }) => {\n\n  const [nameState, setNameState] = useState<boolean>(false)\n\n  return <div>\n    {!nameState && <UserComment\n      onClick={() => setNameState(ps => !ps)}\n      key={index}>\n      {author} : {content}\n    </UserComment>}\n    {nameState && <CommentEdit>\n      <CommentInput\n        value={content}\n        onChange={event => changeCardComment(index, event)}\n        onBlur={() => setNameState(ps => !ps)} />\n      <UserCommentDelete onClick={() => deleteCardComment(index)}>\n        <FontAwesomeIcon icon={faTimes} />\n      </UserCommentDelete>\n    </CommentEdit>}\n  </div>\n}","import React from \"react\";\nimport { Comments } from \"./columns-content\";\n\ninterface PopupContext {\n  name: string;\n  desc: string;\n  comments: Comments[];\n  author: string;\n}\n\nexport const PopupCardContext = React.createContext<PopupContext>({} as PopupContext);","import React, { useCallback, useEffect, useState } from \"react\";\nimport {\n  CardName, CommentsArray, CommentsBorder, PopupDescDiv,\n  CommentsInput, CommentsInputButton, NameInput, PopupContent,\n  PopupDesc, PopupText\n} from \"./styles\";\nimport { Popup } from \"../Popup\";\nimport { Comments } from \"../../utils/columns-content\";\nimport { CardComment } from \"../Comment\";\nimport { useContext } from \"react\";\nimport { PopupCardContext } from \"../../utils/popup-context\";\n\ninterface Props {\n  column: string;\n  setPopupState: (prevState: boolean) => void;\n  changeCardName: (v: string) => void;\n  changeCardDesc: (v: string) => void;\n  setCardsComments: (comms: Comments[]) => void;\n}\n\nexport const CardPopup: React.FC<Props> = ({ column, setPopupState, changeCardName, changeCardDesc, setCardsComments }) => {\n\n  const [newCommentValue, setCommentValue] = useState<string>(\"\");\n  const context = useContext(PopupCardContext);\n  const { name, desc, comments, author } = context;\n\n  const [changeNamePopup, setChangeNamePopup] = useState<boolean>(false);\n  const [addCommentState, setAddCommentState] = useState<boolean>(false);\n  const [descState, setDescState] = useState<boolean>(false);\n\n  function handleEsc(event: { keyCode: number }): void {\n    if (event.keyCode === 27) setPopupState(false);\n  }\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleEsc);\n    return () => {\n      window.removeEventListener('keydown', handleEsc);\n    };\n  });\n\n  const changeCardComment = useCallback((i: number, event: React.ChangeEvent<HTMLTextAreaElement>) =>\n    setCardsComments(comments.map((comment) =>\n      comment.id === i ? { ...comment, content: event.target.value } : comment\n    )),\n    [comments, setCardsComments]\n  );\n\n  const deleteCardComment = useCallback((i: number) =>\n    setCardsComments(comments.filter(v => v.id !== i)),\n    [comments, setCardsComments]\n  );\n\n  function changeName(ev: React.ChangeEvent<HTMLInputElement>): void {\n    const v: string = ev.target.value;\n    if (v.trim() === \"\") return\n    changeCardName(v);\n  }\n\n  function changeDesc(ev: React.ChangeEvent<HTMLTextAreaElement>): void {\n    changeCardDesc(ev.target.value);\n  }\n\n  const saveComment = useCallback(() => {\n    setAddCommentState(false);\n    if (newCommentValue.trim() === \"\") return;\n    setCommentValue(\"\");\n    setCardsComments(comments.concat({\n      id: comments.length,\n      author: author,\n      content: newCommentValue\n    }));\n  }, [author, comments, newCommentValue, setCardsComments]\n  );\n\n  return <Popup\n    height={\"fit-content\"}\n    width={\"768px\"}\n    setPopupState={setPopupState}>\n    <PopupContent>\n      {!changeNamePopup && <CardName\n        onClick={() => setChangeNamePopup(ps => !ps)}>\n        {name}\n      </CardName>}\n      {changeNamePopup && <NameInput\n        onMouseOver={e => e.currentTarget.focus()}\n        value={name}\n        onChange={changeName}\n        onBlur={() => setChangeNamePopup(ps => !ps)}\n      />}\n      <PopupText>\n        In column: {column}\n      </PopupText>\n      <PopupText>\n        Created by: {author}\n      </PopupText>\n      <PopupText>\n        Description\n      </PopupText>\n      {!descState && <PopupDescDiv\n        onClick={() => setDescState(ps => !ps)}>\n        {desc}\n      </PopupDescDiv>}\n      {descState && <PopupDesc\n        value={desc}\n        onMouseOver={e => e.currentTarget.focus()}\n        onBlur={() => setDescState(ps => !ps)}\n        onChange={changeDesc} />}\n      <PopupText>\n        Comments\n      </PopupText>\n      <CommentsBorder>\n        <CommentsInput\n          onClick={() => setAddCommentState(true)}\n          placeholder={\"Write new comment\"}\n          value={newCommentValue}\n          onChange={event => setCommentValue(event.target.value)} />\n        {addCommentState && <CommentsInputButton\n          onClick={() => saveComment()}>\n          Save\n          </CommentsInputButton>}\n      </CommentsBorder>\n      <CommentsArray>\n        {comments.map(({ id, author, content }) => <CardComment\n          index={id}\n          author={author}\n          content={content}\n          key={id}\n          changeCardComment={changeCardComment}\n          deleteCardComment={deleteCardComment}\n        />)}\n      </CommentsArray>\n    </PopupContent>\n  </Popup >\n}","import React, { useEffect, useState } from \"react\";\nimport {\n  CardComments,\n  CardContainer,\n  CardContent,\n  ColCard,\n  NameInput,\n  EditCardButton\n} from \"./styles\";\nimport { Card, Comments } from \"../../utils/columns-content\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faComment } from \"@fortawesome/free-solid-svg-icons/faComment\";\nimport { faEdit } from \"@fortawesome/free-solid-svg-icons/faEdit\";\nimport { CardPopup } from \"../Cardpopup\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { PopupCardContext } from \"../../utils/popup-context\";\ninterface Props {\n  card: Card;\n  column: string;\n  saveCardState: (card: Card, index: number) => void;\n  deleteCard: (i: number) => void;\n}\n\nexport const ColumnCard: React.FC<Props> = ({ card, column, saveCardState, deleteCard }) => {\n  const { id, name, author, desc, comments } = card;\n\n  const [cardName, setCardName] = useState<string>(name);\n  const [cardDesc, setCardDesc] = useState<string>(desc);\n  const [cardComments, setComments] = useState<Comments[]>(comments);\n\n  const [popupState, setPopupState] = useState<boolean>(false);\n  const [changeNameState, setChangeNameState] = useState<boolean>(false);\n  const [rightClickState, setRightClickState] = useState<boolean>(false);\n\n  useEffect(() => {\n    // Parent is rendering new card on saveCardState call.\n    if (name !== cardName || desc !== cardDesc || comments !== cardComments) {\n      saveCardState({ id: id, name: cardName, author: author, desc: cardDesc, comments: cardComments }, id);\n    }\n  }, [id, cardName, author, cardDesc, cardComments, saveCardState, name, desc, comments]);\n\n  return <CardContainer>\n    <ColCard onContextMenu={e => {\n      e.preventDefault();\n      setRightClickState(prevState => !prevState);\n    }}>\n      {!changeNameState && <CardContent\n        onClick={() => { setPopupState(prevState => !prevState); }}\n        empty={cardComments.length === 0}>\n        {cardName}\n      </CardContent>}\n      {changeNameState && <NameInput\n        type=\"text\"\n        value={cardName}\n        onChange={ev => {\n          const v: string = ev.target.value;\n          if (v.trim() === \"\") return;\n          setCardName(v);\n        }}\n        onBlur={() => setChangeNameState(prevState => !prevState)} />}\n      <EditCardButton\n        onClick={() => setChangeNameState(prevState => !prevState)}\n        empty={cardComments.length === 0}>\n        <FontAwesomeIcon icon={faEdit} />\n      </EditCardButton>\n      {cardComments.length !== 0 && <CardComments>\n        <FontAwesomeIcon icon={faComment} /> : {cardComments.length}\n      </CardComments>}\n      {rightClickState && <CardComments onClick={() => deleteCard(id)}>\n        <FontAwesomeIcon icon={faTimes} />\n      </CardComments>}\n    </ColCard>\n    {popupState &&\n      <PopupCardContext.Provider value={{\n        name: cardName,\n        desc: cardDesc,\n        comments: cardComments,\n        author: localStorage.getItem(\"user\") as string\n      }}>\n        <CardPopup\n          column={column}\n          setPopupState={setPopupState}\n          changeCardName={setCardName}\n          changeCardDesc={setCardDesc}\n          setCardsComments={setComments}\n        />\n      </PopupCardContext.Provider>}\n  </CardContainer >\n}","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { ColumnNameInput, ColumnBorder, ColumnNameDiv, ColumnAddCardDiv, ButtonDiv } from \"./styles\";\nimport { Card, ColumnsContent } from \"../../utils/columns-content\";\nimport { ColumnCard } from \"../Columncard\";\n\ninterface Props {\n  name: string;\n}\n\nexport const BoardColumn: React.FC<Props> = (props) => {\n  const columnName: string = props.name;\n\n  const column: ColumnsContent = JSON.parse(localStorage.getItem(columnName) as string);\n\n  const [name, setName] = useState<string>(column.name);\n  const [colCards, setCardsArray] = useState<Card[]>(column.cards);\n  const [cardInput, setCardInput] = useState<string>(\"\");\n\n  const [nameInputState, setNameInputState] = useState<boolean>(false);\n  const [newCardState, setNewCardState] = useState<boolean>(false);\n\n  const isFirstRun = useRef<boolean>(true);\n\n  useEffect(() => {\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n    } else {\n      localStorage.setItem(columnName, JSON.stringify({ name: name, cards: colCards }));\n    }\n  }, [colCards, columnName, name]);\n\n  const saveNewCard = useCallback(() => {\n    if (cardInput.trim() === \"\") return;\n    setCardInput(\"\");\n    setCardsArray(colCards.concat({\n      id: colCards.length,\n      name: cardInput,\n      author: localStorage.getItem(\"user\") as string,\n      comments: [],\n      desc: \"\"\n    }));\n    setNewCardState(prevState => !prevState);\n  },\n    [cardInput, colCards]\n  );\n\n  const saveCardChanges = useCallback((card: Card, index: number) =>\n    setCardsArray(colCards.map((cardArray): Card => cardArray.id !== index ? cardArray : card)),\n    [colCards]\n  );\n\n  const deleteCard = useCallback((index: number) =>\n    setCardsArray(colCards.filter(value => value.id !== index)),\n    [colCards]\n  );\n\n  return <ColumnBorder>\n    {!nameInputState && <ColumnNameDiv\n      onClick={() => setNameInputState(prevState => !prevState)}>\n      {name}\n    </ColumnNameDiv>}\n    {nameInputState && <ColumnNameInput\n      value={name}\n      type=\"text\"\n      onMouseOver={event => event.currentTarget.focus()}\n      onChange={event => {\n        const v: string = event.target.value;\n        if (v.trim() === \"\") return;\n        setName(v)\n      }}\n      onBlur={() => setNameInputState(prevState => !prevState)}\n    />}\n    {colCards.map((card) => <ColumnCard\n      column={name}\n      card={card}\n      key={card.id}\n      deleteCard={deleteCard}\n      saveCardState={saveCardChanges}\n    />)}\n    {!newCardState && <ColumnAddCardDiv onClick={() => setNewCardState(prevState => !prevState)}>\n      Add new card\n    </ColumnAddCardDiv>}\n    {newCardState && <ColumnNameInput\n      onMouseOver={event => event.currentTarget.focus()}\n      value={cardInput}\n      onChange={event => setCardInput(event.target.value)}\n      placeholder=\"Add new card\"\n    />}\n    {newCardState && <ButtonDiv>\n      <button className=\"btn primary\" onClick={saveNewCard}>\n        Add card\n      </button>\n      <button className=\"btn\" onClick={() => setNewCardState(prevState => !prevState)}>\n        Cancel\n      </button>\n    </ButtonDiv>}\n  </ColumnBorder>\n}","import React from 'react';\nimport { ColumnsContainer } from './styles';\nimport { BoardColumn } from \"../Boardcolumn\";\n\nexport const Board: React.FC = () => {\n  return <ColumnsContainer>\n    <BoardColumn name={\"Column0\"} />\n    <BoardColumn name={\"Column1\"} />\n    <BoardColumn name={\"Column2\"} />\n    <BoardColumn name={\"Column3\"} />\n  </ColumnsContainer>\n}","import styled from \"styled-components\";\n\nexport const MainComp = styled.div`\n  margin: 40px 0 0 0;\n`","import styled from \"styled-components\";\n\nexport const PopupContent = styled.div`\n        width: 100%;\n        height: 100%;\n        text-align: center;\n        display: flex;\n        flex-direction: column;\n        justify-content: space-around;\n    `\n\n","import React, { useState } from \"react\";\nimport { Popup } from \"../Popup\";\nimport { PopupContent } from \"./styles\";\n\ninterface Props {\n  togglePopup: (val: boolean) => void;\n}\n\nexport const LoginPopup: React.FC<Props> = ({ togglePopup }) => {\n\n  const [inputState, changeInputState] = useState(\"\");\n\n  function changeDisplayState(): void {\n    if (inputState.trim() === \"\") return;\n    togglePopup(false);\n    localStorage.setItem(\"user\", inputState);\n  }\n\n  return <Popup height={\"180px\"} width={\"350px\"}>\n    <PopupContent onKeyDown={event => {\n      if (event.key === 'Enter') changeDisplayState()\n    }}>\n      <div>\n        <h3>Hi!</h3>\n        <p>Enter your name</p>\n      </div>\n      <div className=\"modal-body\">\n        <input\n          type=\"text\"\n          placeholder=\"Name\"\n          value={inputState}\n          onChange={event => changeInputState(event.target.value)} />\n      </div>\n      <div className=\"modal-footer\">\n        <button onClick={changeDisplayState} className=\"btn primary\">\n          Done\n        </button>\n      </div>\n    </PopupContent>\n  </Popup>\n}","import React from 'react';\nimport '../Board/Board'\nimport { Board } from \"../Board\";\nimport { MainComp } from \"./styles\";\nimport { LoginPopup } from '../Loginpopup';\nimport { useState } from 'react';\n\nexport const MainComponent: React.FC = () => {\n\n  const [popupState, setPopupState] = useState<boolean>(localStorage.getItem(\"user\") === null ? true : false);\n\n  return (\n    <MainComp>\n      <Board />\n      {popupState && <LoginPopup togglePopup={setPopupState} />}\n    </MainComp>\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './css /bootstrap.css'\n\nimport { Header } from \"./components/Header\";\nimport { MainComponent } from \"./components/Mainblock\";\n\n// localStorage.clear()\n\nif (localStorage.getItem(\"Column0\") === null) {\n  localStorage.setItem(\"Column0\", \"{\\\"name\\\":\\\"TODO\\\",\\\"cards\\\":[]}\");\n  localStorage.setItem(\"Column1\", \"{\\\"name\\\":\\\"In Progress\\\",\\\"cards\\\":[]}\");\n  localStorage.setItem(\"Column2\", \"{\\\"name\\\":\\\"Testing\\\",\\\"cards\\\":[]}\");\n  localStorage.setItem(\"Column3\", \"{\\\"name\\\":\\\"Done\\\",\\\"cards\\\":[]}\");\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Header />\n    <MainComponent />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}