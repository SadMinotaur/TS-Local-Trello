{"version":3,"sources":["components/header/styles.ts","components/header/Header.tsx","components/boardcolumn/styles.ts","components/columncard/styles.ts","components/popup/styles.ts","components/popup/Popup.tsx","components/columncard/ColumnCard.tsx","components/boardcolumn/BoardColumn.tsx","components/board/styles.ts","components/board/Board.tsx","components/mainblock/styles.ts","components/mainblock/MainComponent.tsx","components/loginpopup/styles.ts","components/loginpopup/LoginPopup.tsx","index.tsx"],"names":["Topbar","styled","div","TopbarName","Header","className","ColumnsContainer","ColumnNameInput","input","ColumnNameDiv","ColumnBorder","ColumnAddCardDiv","ButtonDiv","CardContainer","ColCard","CardComments","CardContent","styledComponentsTS","props","empty","EditCardButton","PopupTitle","NameInput","PopupContent","CardPopupBack","display","CardPopup","height","width","ClosePopup","button","Popup","popupState","undefined","setPopupState","onClick","prevState","popupContent","ColumnCard","useState","card","cardInfo","setCardInfo","changeNameState","setChangeNameState","useEffect","saveCardState","index","style","color","comments","length","name","icon","faEdit","value","onChange","event","target","onBlur","placeholder","faComment","BoardColumn","column","JSON","parse","localStorage","getItem","cards","Array","forEach","i","saveCardChanges","colCards","setCards","setName","nameInputState","setNameInputState","newCardState","setNewCardState","nameInput","setNameInput","cardInput","setCardInput","setItem","stringify","type","onMouseOver","currentTarget","focus","saveName","author","desc","push","concat","saveNewCard","Board","MainComp","MainComponent","LoginPopup","initState","changeDisplayProperty","inputState","changeInputState","changeDisplayState","onKeyDown","key","clear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72fb14d2.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Topbar = styled.div`\n    text-align: center;\n`\n\nexport const TopbarName = styled.div`\n    font-size: 2rem;\n    color: white;\n    line-height: 40px;\n`","import React from 'react';\nimport {Topbar, TopbarName} from \"./styles\";\n\nexport const Header: React.FC = () => {\n  return (\n    <Topbar className='topbar'>\n      <TopbarName>\n        <h6>\n          Trello\n        </h6>\n      </TopbarName>\n    </Topbar>\n  );\n}","import styled from \"styled-components\";\n\nexport const ColumnsContainer = styled.div`\n        height: 1000px;\n        padding: 10px 0 10px 0;\n        display: flex;\n        width: 100%;\n        justify-content: space-evenly;\n        background-color: #adadbd;\n`\n\nexport const ColumnNameInput = styled.input`\n        width: 220px;\n        margin: 0 0 5px 0;\n`\n\nexport const ColumnNameDiv = styled.div`\n        margin: 0 0 5px 0;\n        text-align: start;\n        text-indent: 10px;\n        width: 230px;\n        height: 25px;\n        line-height: 25px;\n        background: #8d8d8d;\n        color: white;\n        border-radius: 2px;\n`\n\nexport const ColumnBorder = styled.div`\n        padding: 10px;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        border-radius: 5px;\n        width: 230px;\n        height: fit-content;\n        background-color: #e6e6e6;\n        margin: 10px;    \n`\n\nexport const ColumnAddCardDiv = styled.div`\n        text-align: start;\n        text-indent: 10px;\n        width: 230px;\n        height: 18px;\n        font-size: 10px;\n        line-height: 20px;\n        background: white;\n        border-radius: 2px;\n        margin: 3px 0 0 0;\n        &:hover {\n           background: #dedede;\n        }\n`\n\nexport const ButtonDiv = styled.div`\n        display: flex;\n        width: 200px;\n        justify-content: space-around;\n`","import styledComponentsTS from 'styled-components-ts'\nimport styled from \"styled-components\";\n\nexport const CardContainer = styled.div`\n    width: 100%;\n    height: 100%;\n`\n\nexport const ColCard = styled.div`\n    border-radius: 5px;\n    background: white;\n    text-align: start;\n    width: 100%;\n    margin: 5px 0 5px 0;\n    text-indent: 10px;\n    line-height: 25px;\n`\n\nexport const CardComments = styled.div`\n    margin: 0 0 0 2px;\n    font-size: 7px;\n`\n\ninterface CardContentProps {\n  empty: boolean;\n}\n\nexport const CardContent = styledComponentsTS<CardContentProps>(styled.div)`\n    text-indent: 10px;\n    padding: ${props => props.empty ? '7px 0 7px 0' : '7px 0 0 0'};\n    font-size: 15px;\n    line-height: 15px;\n`\n\nexport const EditCardButton = styledComponentsTS<CardContentProps>(styled.div)`\n    margin: ${props => props.empty ? '-28px  0 0 200px' : '-20px  0 0 200px'};\n`\n\nexport const PopupTitle = styled.div`\n    font-weight: bold;\n    text-align: center;\n    width: 220px;\n    height: 30px;\n    line-height: 30px;\n    color: white;\n    background: #999999;\n    border-radius: 2px;\n`\n\nexport const NameInput = styled.input`\n    width: 190px;\n    margin: -25px 0 5px 0;\n`\n\nexport const PopupContent = styled.div`\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`","import styled from \"styled-components\";\nimport styledComponentsTS from \"styled-components-ts\";\n\ninterface BackProps {\n  display : boolean;\n}\n\nexport const CardPopupBack = styledComponentsTS<BackProps>(styled.div)`\n    position: fixed;\n    left: 0;\n    top: 0;\n    height: 100%;\n    width: 100%;\n    background: rgba(0, 0, 0, 0.3);\n    display: ${props => props.display ? \"block\" : \"none\"};\n`\n\ninterface PopupProps {\n  width: number;\n  height: number;\n  display: boolean;\n}\n\nexport const CardPopup = styledComponentsTS<PopupProps>(styled.div)`\n    position: fixed;\n    left: 0; \n    right: 0; \n    margin-left: auto; \n    margin-right: auto;\n    top: 65px;\n    height: ${props => props.height}px;\n    width: ${props => props.width}px;\n    background: white;\n    border-radius: 3px;\n    display: ${props => props.display ? \"block\" : \"none\"};\n`\n\ninterface ButtonProps {\n  width: number;\n  display: boolean;\n}\n\nexport const ClosePopup = styledComponentsTS<ButtonProps>(styled.button)`\n    position: fixed;\n    margin: -10px 0 0 ${props => props.width - 10}px;\n    border-radius: 50%;\n    background: #ffffff;\n    border: #767676 1px solid;\n    height: 20px;\n    width: 20px;\n    color: #999999;\n    display: ${props => props.display ? \"block\" : \"none\"};\n`\n","import React from \"react\";\nimport {CardPopupBack} from \"./styles\";\nimport {CardPopup, ClosePopup} from \"./styles\";\n\ninterface Props {\n  width: number;\n  height: number;\n  popupState: boolean;\n  setPopupState?: (prevState: any) => void;\n  popupContent: object;\n}\n\nexport const Popup: React.FC<Props> = (props) => {\n  return (\n    <CardPopupBack display={props.popupState}>\n      <CardPopup height={props.height} width={props.width} display={props.popupState}>\n        {props.setPopupState !== undefined ?\n          <ClosePopup width={props.width} display={props.popupState}\n                      onClick={() => props.setPopupState?.((prevState: any) => !prevState)}>x</ClosePopup> : null}\n        {props.popupContent}\n      </CardPopup>\n    </CardPopupBack>\n  )\n}","import React, {useEffect, useState} from \"react\";\nimport {\n  CardComments,\n  CardContainer,\n  CardContent,\n  ColCard, NameInput, EditCardButton,\n  PopupTitle, PopupContent,\n} from \"./styles\";\nimport {Card} from \"../columnsContent\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faComment} from \"@fortawesome/free-solid-svg-icons/faComment\";\nimport {faEdit} from \"@fortawesome/free-solid-svg-icons/faEdit\";\nimport {Popup} from \"../popup\";\n\ninterface Props {\n  card: Card;\n  index: number;\n  saveCardState: (card: Card, index: number) => void;\n}\n\nexport const ColumnCard: React.FC<Props> = (props) => {\n\n  const [cardInfo, setCardInfo] = useState(props.card);\n  const [popupState, setPopupState] = useState(false);\n  const [changeNameState, setChangeNameState] = useState(false);\n\n  //TODO: Use another hook\n  useEffect(() => {\n    props.saveCardState(cardInfo, props.index);\n  });\n\n  return (\n    <CardContainer>\n      <ColCard>\n        <CardContent style={{color: changeNameState ? \"white\" : \"grey\"}} onClick={() => {\n          setPopupState(prevState => !prevState);\n        }} empty={cardInfo.comments.length <= 0}>\n          {cardInfo.name}\n        </CardContent>\n        <EditCardButton onClick={() => {\n          setChangeNameState(prevState => !prevState);\n        }} empty={cardInfo.comments.length <= 0}>\n          <FontAwesomeIcon icon={faEdit}/>\n        </EditCardButton>\n        <NameInput value={cardInfo.name} onChange={event => {\n          setCardInfo(prevState => (\n            {...prevState, name: event.target.value}\n          ));\n        }}\n                   onBlur={() => {\n                     setChangeNameState(prevState => !prevState);\n                   }}\n                   placeholder={\"Enter new name\"}\n                   style={{display: changeNameState ? \"block\" : \"none\"}}/>\n        <CardComments style={{display: cardInfo.comments.length > 0 ? \"block\" : \"none\"}}>\n          <FontAwesomeIcon icon={faComment}/> : {cardInfo.comments.length}\n        </CardComments>\n      </ColCard>\n      <Popup height={300} width={850} popupState={popupState} setPopupState={setPopupState} popupContent={\n        <PopupContent>\n          <PopupTitle>\n            {cardInfo.name}\n          </PopupTitle>\n        </PopupContent>\n      }/>\n    </CardContainer>\n  )\n}","import React, {useState} from \"react\";\nimport {ColumnsContainer, ColumnNameInput, ColumnBorder, ColumnNameDiv, ColumnAddCardDiv, ButtonDiv} from \"./styles\";\nimport {Card, ColumnsContent} from \"../columnsContent\";\nimport {ColumnCard} from \"../columncard\";\n\ninterface Props {\n  name: string;\n}\n\nexport const BoardColumn: React.FC<Props> = (props) => {\n\n  const column: ColumnsContent = JSON.parse(localStorage.getItem(props.name) as string);\n\n  const cards = Array(column.cards.length);\n  column.cards.forEach((value, i) => {\n    cards[i] = <ColumnCard key={i} index={i} saveCardState={saveCardChanges} card={value}/>\n  });\n\n  const [colCards, setCards] = useState(cards);\n  const [name, setName] = useState(column.name);\n  const [nameInputState, setNameInputState] = useState(false);\n  const [newCardState, setNewCardState] = useState(false);\n  const [nameInput, setNameInput] = useState(\"\");\n  const [cardInput, setCardInput] = useState(\"\");\n\n  function saveName(name: string): void {\n    column.name = name;\n    setName(column.name);\n    localStorage.setItem(props.name, JSON.stringify(column));\n  }\n\n  function saveNewCard(): void {\n    const card = {name: cardInput, author: localStorage.getItem(\"user\"), comments: [], desc: \"\"} as Card;\n    column.cards.push(card);\n    setCards(prevState => {\n      return prevState.concat(<ColumnCard index={colCards.length} saveCardState={saveCardChanges} card={card}\n                                          key={colCards.length}/>);\n    });\n    localStorage.setItem(props.name, JSON.stringify(column));\n  }\n\n  function saveCardChanges(card: Card, index: number): void {\n    column.cards[index] = card;\n    setCards(prevState => {\n      prevState[index] = <ColumnCard index={index} saveCardState={saveCardChanges} card={card} key={index}/>\n      return prevState;\n    });\n    localStorage.setItem(props.name, JSON.stringify(column));\n  }\n\n  return (<ColumnsContainer>\n      <ColumnBorder>\n        <ColumnNameDiv style={{display: nameInputState ? 'none' : 'block'}}\n                       onClick={() => {\n                         setNameInputState(prevState => !prevState);\n                       }}>{name}</ColumnNameDiv>\n        <ColumnNameInput style={{display: nameInputState ? 'block' : 'none'}} value={nameInput} type=\"text\"\n                         onMouseOver={event => {\n                           event.currentTarget.focus();\n                         }}\n                         onChange={event => {\n                           setNameInput(event.target.value);\n                           saveName(event.target.value);\n                         }}\n                         onBlur={() => {\n                           setNameInputState(prevState => !prevState);\n                           setNameInput(\"\");\n                         }}\n        />\n        {colCards}\n        <ColumnAddCardDiv style={{display: newCardState ? 'none' : 'block'}}\n                          onClick={() => {\n                            setNewCardState(prevState => !prevState);\n                          }}>\n          Add new card\n        </ColumnAddCardDiv>\n        <ColumnNameInput onMouseOver={event => {\n          event.currentTarget.focus();\n        }} style={{display: newCardState ? 'block' : 'none'}} value={cardInput} onChange={event => {\n          setCardInput(event.target.value);\n        }} placeholder=\"Add new card\"/>\n        <ButtonDiv>\n          <button style={{display: newCardState ? 'block' : 'none'}} className=\"btn primary\" onClick={() => {\n            if (cardInput === \"\") return;\n            saveNewCard();\n            setCardInput(\"\");\n            setNewCardState(prevState => !prevState);\n          }}>\n            Add card\n          </button>\n          <button style={{display: newCardState ? 'block' : 'none'}} className=\"btn\" onClick={() => {\n            setNewCardState(prevState => !prevState);\n          }}>\n            Cancel\n          </button>\n        </ButtonDiv>\n      </ColumnBorder>\n    </ColumnsContainer>\n  )\n}","import styled from \"styled-components\";\n\nexport const ColumnsContainer = styled.div`\n        height: 1000px;\n        padding: 10px 0 10px 0;\n        display: flex;\n        width: 100%;\n        justify-content: space-evenly;\n        background-color: #adadbd;\n    `\n","import React from 'react';\nimport {BoardColumn} from \"../boardcolumn\";\nimport {ColumnsContainer} from \"./styles\";\n\nexport const Board: React.FC = () => {\n  return (<ColumnsContainer>\n    <BoardColumn name={\"Column0\"}/>\n    <BoardColumn name={\"Column1\"}/>\n    <BoardColumn name={\"Column2\"}/>\n    <BoardColumn name={\"Column3\"}/>\n  </ColumnsContainer>)\n}","import styled from \"styled-components\";\n\nexport const MainComp = styled.div`\n  margin: 40px 0 0 0;\n`","import React from 'react';\nimport '../board/Board'\nimport {Board} from \"../board\";\nimport {MainComp} from \"./styles\";\n\nexport const MainComponent: React.FC = () => {\n  return (\n    <MainComp>\n      <Board/>\n    </MainComp>\n  )\n}","import styled from \"styled-components\";\n\nexport const PopupContent = styled.div`\n        width: 100%;\n        height: 100%;\n        text-align: center;\n        display: flex;\n        flex-direction: column;\n        justify-content: space-around;\n    `\n\n","import React, {useState} from \"react\";\nimport {Popup} from \"../popup\";\nimport {PopupContent} from \"./styles\";\n\ninterface Props {\n  initState?: boolean;\n}\n\nexport const LoginPopup: React.FC<Props> = (props) => {\n\n  const [display, changeDisplayProperty] = useState(props.initState ? props.initState : localStorage.getItem(\"user\") === null);\n  const [inputState, changeInputState] = useState(\"\");\n\n  function changeDisplayState(): void {\n    if (inputState === \"\") return;\n    localStorage.setItem(\"user\", inputState);\n    changeDisplayProperty(prevState => !prevState);\n  }\n\n  return (\n    <Popup height={300} width={850} popupState={display} popupContent={\n      <PopupContent onKeyDown={event => {\n        if (event.key === 'Enter') changeDisplayState()\n      }}>\n        <div>\n          <h3>Hi!</h3>\n          <p>Enter your name</p>\n        </div>\n        <div className=\"modal-body\">\n          <input type=\"text\" placeholder=\"Name\" value={inputState} onChange={event => {\n            changeInputState(event.target.value);\n          }}/>\n        </div>\n        <div className=\"modal-footer\">\n          <button onClick={changeDisplayState} className=\"btn primary\">\n            Done\n          </button>\n        </div>\n      </PopupContent>\n    }>\n    </Popup>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n//This is bad. Link not working from index.html\nimport './css /bootstrap.css'\n\nimport {Header} from \"./components/header/\";\nimport {MainComponent} from \"./components/mainblock\";\nimport {LoginPopup} from \"./components/loginpopup\";\n\n//For testing purposes\nlocalStorage.clear()\n\n// localStorage.setItem(\"user\", \"Test user\");\nlocalStorage.setItem(\"Column0\", \"{\\\"name\\\":\\\"TODO\\\",\\\"cards\\\":[]}\");\nlocalStorage.setItem(\"Column1\", \"{\\\"name\\\":\\\"In Progress\\\",\\\"cards\\\":[]}\");\nlocalStorage.setItem(\"Column2\", \"{\\\"name\\\":\\\"Testing\\\",\\\"cards\\\":[]}\");\nlocalStorage.setItem(\"Column3\", \"{\\\"name\\\":\\\"Done\\\",\\\"cards\\\":[]}\");\n\nReactDOM.render(\n  <React.StrictMode>\n    <Header/>\n    <MainComponent/>\n    <LoginPopup/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}