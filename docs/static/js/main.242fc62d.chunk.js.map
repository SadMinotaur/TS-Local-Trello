{"version":3,"sources":["components/Header/styles.ts","components/Header/Header.tsx","components/Board/styles.ts","components/Boardcolumn/styles.ts","components/Columncard/styles.ts","components/Cardpopup/styles.ts","components/Popup/styles.ts","components/Popup/Popup.tsx","components/Comment/styles.ts","components/Comment/CardComment.tsx","components/Cardpopup/CardPopup.tsx","components/Columncard/ColumnCard.tsx","components/Boardcolumn/BoardColumn.tsx","components/Board/Board.tsx","components/Mainblock/styles.ts","components/Loginpopup/styles.ts","components/Loginpopup/LoginPopup.tsx","components/Mainblock/MainComponent.tsx","index.tsx"],"names":["TopbarName","styled","div","Header","ColumnsContainer","ColumnNameInput","input","ColumnNameDiv","ColumnBorder","ColumnAddCardDiv","ButtonDiv","CardContainer","ColCard","CardComments","CardContent","styledComponentsTS","props","empty","EditCardButton","NameInput","PopupContent","PopupText","PopupDesc","textarea","PopupDescDiv","CardName","CommentsBorder","CommentsInput","CommentsInputButton","button","CommentsArray","CardPopupBack","CardPopup","height","width","ClosePopup","Popup","buttonPos","Number","slice","length","undefined","setPopupState","onClick","popupContent","UserComment","CommentEdit","CommentInput","UserCommentDelete","CardComment","content","author","index","deleteCardComment","changeCardComment","useState","nameState","setNameState","nameValue","setNameValue","ps","value","onChange","event","v","target","trim","onBlur","icon","faTimes","cardInfo","column","changeCardName","changeCardDecs","changeCardDesc","setParentCardsComments","name","setName","desc","setDesc","comments","commentsArray","setCommentsArray","changeNamePopup","setChangeNamePopup","addCommentState","setAddCommentState","descState","setDescState","newCommentValue","setCommentValue","handleEsc","keyCode","i","copy","elIndex","findIndex","id","ar","filter","useEffect","window","addEventListener","removeEventListener","onMouseOver","e","currentTarget","focus","ev","placeholder","c","localStorage","getItem","concat","map","ColumnCard","card","saveCardState","deleteCard","cardName","setCardName","cardDesc","setCardDesc","cardComments","setComments","popupState","changeNameState","setChangeNameState","hover","setHover","onContextMenu","preventDefault","prevState","type","faEdit","faComment","BoardColumn","columnName","JSON","parse","cards","colCards","setCardsArray","nameInputState","setNameInputState","newCardState","setNewCardState","cardInput","setCardInput","isFirstRun","useRef","saveCardChanges","current","setItem","stringify","className","Board","MainComp","LoginPopup","togglePopup","inputState","changeInputState","changeDisplayState","onKeyDown","key","MainComponent","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qdAEO,IAAMA,EAAaC,IAAOC,IAAV,KCCVC,EAAmB,WAC9B,OACE,cAACH,EAAD,UACE,2C,6RCJC,IAAMI,EAAmBH,IAAOC,IAAV,K,uzCCAtB,IAAMG,EAAkBJ,IAAOK,MAAV,KAKfC,EAAgBN,IAAOC,IAAV,KAYbM,EAAeP,IAAOC,IAAV,KAaZO,EAAmBR,IAAOC,IAAV,KAehBQ,EAAYT,IAAOC,IAAV,K,u0BC5Cf,IAAMS,EAAgBV,IAAOC,IAAV,KAKbU,EAAUX,IAAOC,IAAV,KAUPW,EAAeZ,IAAOC,IAAV,KASZY,EAAcC,IAAqCd,IAAOC,IAA5Ca,CAAH,KAET,SAAAC,GAAK,OAAIA,EAAMC,MAAQ,cAAgB,eAKzCC,EAAiBH,IAAqCd,IAAOC,IAA5Ca,CAAH,KACb,SAAAC,GAAK,OAAIA,EAAMC,MAAQ,mBAAqB,sBAG7CE,EAAYlB,IAAOK,MAAV,K,w/DCpCf,IAAMc,GAAenB,IAAOC,IAAV,MAOZmB,GAAYpB,IAAOC,IAAV,KAMToB,GAAYrB,IAAOsB,SAAV,KAUTC,GAAevB,IAAOC,IAAV,KAmBZuB,IATUxB,IAAOC,IAAV,KASID,IAAOC,IAAV,MAMRiB,GAAYlB,IAAOK,MAAV,KAKToB,GAAiBzB,IAAOC,IAAV,KAMdyB,GAAgB1B,IAAOsB,SAAV,KAUbK,GAAsB3B,IAAO4B,OAAV,KASnBC,GAAgB7B,IAAOC,IAAV,K,60BC7EnB,IAAM6B,GAAgB9B,IAAOC,IAAV,MAeb8B,GAAYjB,IAA+Bd,IAAOC,IAAtCa,CAAH,MAMV,SAAAC,GAAK,OAAIA,EAAMiB,UAChB,SAAAjB,GAAK,OAAIA,EAAMkB,SAGH,SAAAlB,GAAK,OAAIA,EAAMkB,SASzBC,GAAapB,IAAgCd,IAAO4B,OAAvCd,CAAH,MAED,SAAAC,GAAK,OAAIA,EAAMkB,SAOd,SAAAlB,GAAK,OAAIA,EAAMkB,SCnCzBE,GAAyB,SAACpB,GACrC,IAAMqB,EAAoBC,OAAOtB,EAAMkB,MAAMK,MAAM,EAAGvB,EAAMkB,MAAMM,OAAS,IAAM,GAEjF,OACE,cAACT,GAAD,UACE,eAAC,GAAD,CACEE,OAAQjB,EAAMiB,OACdC,MAAOlB,EAAMkB,MAFf,eAG2BO,IAAxBzB,EAAM0B,eAA+B,cAACP,GAAD,CACpCD,MAAOG,EACPM,QAAS,kCAAM3B,EAAM0B,qBAAZ,aAAM,OAAA1B,GAAsB,IAFD,eAKrCA,EAAM4B,mB,m1BCtBR,IAAMC,GAAc5C,IAAOC,IAAV,MAcX4C,GAAc7C,IAAOC,IAAV,MAKX6C,GAAe9C,IAAOsB,SAAV,MAQZyB,GAAoB/C,IAAOC,IAAV,M,SChBjB+C,GAA+B,SAAC,GAAsE,IAApEC,EAAmE,EAAnEA,QAASC,EAA0D,EAA1DA,OAAQC,EAAkD,EAAlDA,MAAOC,EAA2C,EAA3CA,kBAAmBC,EAAwB,EAAxBA,kBAAwB,EAE9EC,oBAAkB,GAF4D,mBAEzGC,EAFyG,KAE9FC,EAF8F,OAG9EF,mBAAiBL,GAH6D,mBAGzGQ,EAHyG,KAG9FC,EAH8F,KAKhH,OAAO,iCACHH,GAAa,eAACX,GAAD,CACbF,QAAS,kBAAMc,GAAa,SAAAG,GAAE,OAAKA,MADtB,UAGZT,EAHY,MAGDO,IADPN,GAGNI,GAAa,eAACV,GAAD,WACZ,cAACC,GAAD,CACEc,MAAOH,EACPI,SAAU,SAAAC,GACR,IAAMC,EAAID,EAAME,OAAOJ,MACN,KAAbG,EAAEE,QACNP,EAAaK,IAEfG,OAAQ,SAAAJ,GACNT,EAAkBF,EAAOW,GACzBN,GAAa,SAAAG,GAAE,OAAKA,QAExB,cAACZ,GAAD,CAAmBL,QAAS,kBAAMU,EAAkBD,IAApD,SACE,cAAC,IAAD,CAAiBgB,KAAMC,gBCnBlBrC,GAA6B,SAAC,GAAiH,IAA/GsC,EAA8G,EAA9GA,SAAUC,EAAoG,EAApGA,OAAQ7B,EAA4F,EAA5FA,cAAe8B,EAA6E,EAA7EA,eAAgCC,EAA6C,EAA7DC,eAAgCC,EAA6B,EAA7BA,uBAA6B,EAEjIpB,mBAAiBe,EAASM,MAFuG,mBAElJA,EAFkJ,KAE5IC,EAF4I,OAGjItB,mBAAiBe,EAASQ,MAHuG,mBAGlJA,EAHkJ,KAG5IC,EAH4I,OAI/GxB,mBAAqBe,EAASU,UAJiF,mBAIlJC,EAJkJ,KAInIC,EAJmI,OAM3G3B,oBAAkB,GANyF,mBAMlJ4B,EANkJ,KAMjIC,EANiI,OAO3G7B,oBAAkB,GAPyF,mBAOlJ8B,EAPkJ,KAOjIC,EAPiI,OAQvH/B,oBAAkB,GARqG,mBAQlJgC,EARkJ,KAQvIC,EARuI,OAS9GjC,mBAAiB,IAT6F,mBASlJkC,EATkJ,KASjIC,EATiI,KAgBzJ,SAASC,EAAU5B,GACK,KAAlBA,EAAM6B,SAAgBlD,GAAc,GAG1C,SAASY,EAAkBuC,EAAW9B,GACpC,IAAMb,EAAkBa,EAAME,OAAOJ,MAC/BiC,EAAgB,YAAOb,GACvBc,EAAkBD,EAAKE,WAAU,SAAAhC,GAAC,OAAIA,EAAEiC,KAAOJ,KACrDC,EAAKC,GAAW,CAAEE,GAAIJ,EAAG1C,OAAQ2C,EAAKC,GAAS5C,OAAQD,QAASA,GAChEgC,EAAiBY,GACjBnB,EAAuBmB,GAGzB,SAASzC,EAAkBwC,GACzB,IAAMK,EAAiBjB,EAAckB,QAAO,SAAAnC,GAAC,OAAIA,EAAEiC,KAAOJ,KAC1DX,EAAiBgB,GACjBvB,EAAuBuB,GA6BzB,OAlDAE,qBAAU,WAER,OADAC,OAAOC,iBAAiB,UAAWX,GAC5B,WAAQU,OAAOE,oBAAoB,UAAWZ,OAgDhD,cAAC,GAAD,CACL1D,OAAQ,cACRC,MAAO,QACPQ,cAAeA,EACfE,aACE,eAACxB,GAAD,YACI+D,GAAmB,cAAC1D,GAAD,CAAUkB,QAAS,kBAAMyC,GAAmB,SAAAxB,GAAE,OAAKA,MAAnD,SAClBgB,IAEFO,GAAmB,cAAC,GAAD,CAClBqB,YAAa,SAAAC,GAAC,OAAIA,EAAEC,cAAcC,SAClC9C,MAAOe,EACPd,SAtCR,SAAoB8C,GAClB,IAAM5C,EAAY4C,EAAG3C,OAAOJ,MACX,KAAbG,EAAEE,SACNW,EAAQb,GACRQ,EAAeR,KAmCTG,OAAQ,kBAAMiB,GAAmB,SAAAxB,GAAE,OAAKA,QAE1C,eAACvC,GAAD,yBACckD,KAEd,eAAClD,GAAD,0BACeiD,EAASnB,UAExB,cAAC9B,GAAD,2BAGEkE,GAAa,cAAC/D,GAAD,CAAcmB,QAAS,kBAAM6C,GAAa,SAAA5B,GAAE,OAAKA,MAAjD,SACZkB,IAEFS,GAAa,cAACjE,GAAD,CACZuC,MAAOiB,EACP0B,YAAa,SAAAC,GAAC,OAAIA,EAAEC,cAAcC,SAClCxC,OAAQ,WAAQqB,GAAa,SAAA5B,GAAE,OAAKA,MACpCE,SAlDR,SAAoB8C,GAClB,IAAM5C,EAAY4C,EAAG3C,OAAOJ,MAC5BkB,EAAQf,GACRS,EAAeT,MAgDX,cAAC3C,GAAD,uBAGA,eAACK,GAAD,WACE,cAACC,GAAD,CACEgB,QAAS,kBAAM2C,GAAmB,IAClCuB,YAAa,oBACbhD,MAAO4B,EACP3B,SAAU,SAAAC,GAAK,OAAI2B,EAAgB3B,EAAME,OAAOJ,UACjDwB,GAAmB,cAACzD,GAAD,CAAqBe,QAtDjD,WAEE,GADA2C,GAAmB,GACY,KAA3BG,EAAgBvB,OAApB,CACA,IAAM4C,EAAc,CAClBb,GAAIhB,EAAczC,OAClBW,OAAQ4D,aAAaC,QAAQ,QAC7B9D,QAASuC,GAELS,EAAiBjB,EAAcgC,OAAOH,GAC5C5B,EAAiBgB,GACjBvB,EAAuBuB,KA4CG,qBAItB,cAACpE,GAAD,UACGmD,EAAciC,KAAI,gBAAGjB,EAAH,EAAGA,GAAI9C,EAAP,EAAOA,OAAQD,EAAf,EAAeA,QAAf,OAA6B,cAAC,GAAD,CAC9CE,MAAO6C,EAEP9C,OAAQA,EACRD,QAASA,EACTI,kBAAmBA,EACnBD,kBAAmBA,GAJd4C,cCzGJkB,GAA8B,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,KAAM7C,EAAwC,EAAxCA,OAAQ8C,EAAgC,EAAhCA,cAAeC,EAAiB,EAAjBA,WACjErB,EAAqCmB,EAArCnB,GAAIrB,EAAiCwC,EAAjCxC,KAAMzB,EAA2BiE,EAA3BjE,OAAQ2B,EAAmBsC,EAAnBtC,KAAME,EAAaoC,EAAbpC,SAD0D,EAG1DzB,mBAAiBqB,GAHyC,mBAGnF2C,EAHmF,KAGzEC,EAHyE,OAI1DjE,mBAAiBuB,GAJyC,mBAInF2C,EAJmF,KAIzEC,EAJyE,OAKtDnE,mBAAqByB,GALiC,mBAKnF2C,EALmF,KAKrEC,EALqE,OAMtDrE,oBAAkB,GANoC,mBAMnFsE,EANmF,KAMvEnF,EANuE,OAO5Ca,oBAAkB,GAP0B,mBAOnFuE,EAPmF,KAOlEC,EAPkE,OAQhExE,oBAAkB,GAR8C,mBAQnFyE,EARmF,KAQ5EC,EAR4E,KAiB1F,OAPA7B,qBAAU,WAEJxB,IAAS2C,GAAYzC,IAAS2C,GAAYzC,IAAa2C,GACzDN,EAAc,CAAEpB,GAAIA,EAAIrB,KAAM2C,EAAUpE,OAAQA,EAAQ2B,KAAM2C,EAAUzC,SAAU2C,GAAgB1B,KAEnG,CAACA,EAAIsB,EAAUpE,EAAQsE,EAAUE,EAAcN,EAAezC,EAAME,EAAME,IAEtE,eAACrE,EAAD,WACL,eAACC,EAAD,CAASsH,cAAe,SAAAzB,GACtBA,EAAE0B,iBACFF,GAAS,SAAAG,GAAS,OAAKA,MAFzB,WAIIN,GAAmB,cAAChH,EAAD,CACnB6B,QAAS,WAAQD,GAAc,SAAA0F,GAAS,OAAKA,MAC7CnH,MAA+B,IAAxB0G,EAAanF,OAFD,SAGlB+E,IAEFO,GAAmB,cAAC3G,EAAD,CAClBkH,KAAK,OACLxE,MAAO0D,EACPzD,SAAU,SAAA8C,GACR,IAAM5C,EAAY4C,EAAG3C,OAAOJ,MACX,KAAbG,EAAEE,QACNsD,EAAYxD,IAEdG,OAAQ,kBAAM4D,GAAmB,SAAAK,GAAS,OAAKA,QACjD,cAAClH,EAAD,CACEyB,QAAS,kBAAMoF,GAAmB,SAAAK,GAAS,OAAKA,MAChDnH,MAA+B,IAAxB0G,EAAanF,OAFtB,SAGE,cAAC,IAAD,CAAiB4B,KAAMkE,aAEA,IAAxBX,EAAanF,QAAgB,eAAC3B,EAAD,WAC5B,cAAC,IAAD,CAAiBuD,KAAMmE,cADK,MACYZ,EAAanF,UAEtDwF,GAAS,cAACnH,EAAD,CAAc8B,QAAS,kBAAM2E,EAAWrB,IAAxC,SACR,cAAC,IAAD,CAAiB7B,KAAMC,YAG1BwD,GAAc,cAAC,GAAD,CACbnF,cAAeA,EACf4B,SAAU,CAAE2B,GAAIA,EAAIrB,KAAM2C,EAAUpE,OAAQA,EAAQ2B,KAAM2C,EAAUzC,SAAU2C,GAC9EpD,OAAQA,EACRC,eAAgBgD,EAChB9C,eAAgBgD,EAChB/C,uBAAwBiD,QCnEjBY,GAA+B,SAACxH,GAC3C,IAAMyH,EAAqBzH,EAAM4D,KAE3BL,EAAyBmE,KAAKC,MAAM5B,aAAaC,QAAQyB,IAHV,EAK7BlF,mBAAiBgB,EAAOK,MALK,mBAK9CA,EAL8C,KAKxCC,EALwC,OAMnBtB,mBAAiBgB,EAAOqE,OANL,mBAM9CC,EAN8C,KAMpCC,EANoC,OAOTvF,oBAAkB,GAPT,mBAO9CwF,EAP8C,KAO9BC,EAP8B,OAQbzF,oBAAkB,GARL,mBAQ9C0F,EAR8C,KAQhCC,EARgC,OASnB3F,mBAAiB,IATE,mBAS9C4F,EAT8C,KASnCC,EATmC,KAU/CC,EAAaC,kBAAgB,GAwBnC,SAASC,EAAgBnC,EAAYhE,GACnC0F,GAAc,SAAAlF,GAEZ,OADAA,EAAGA,EAAGoC,WAAU,SAAAhC,GAAC,OAAIA,EAAEiC,KAAO7C,MAAUgE,EACjC,YAAIxD,MAIf,SAAS0D,EAAWzB,GAClBiD,EAAcD,EAAS1C,QAAO,SAAAtC,GAAK,OAAIA,EAAMoC,KAAOJ,MAGtD,OAjCAO,qBAAU,WACJiD,EAAWG,QACbH,EAAWG,SAAU,EAErBzC,aAAa0C,QAAQhB,EAAYC,KAAKgB,UAAU,CAAE9E,KAAMA,EAAMgE,MAAOC,OAEtE,CAACA,EAAUJ,EAAY7D,IA2BnB,eAACpE,EAAD,YACHuI,GAAkB,cAACxI,EAAD,CAClBoC,QAAS,kBAAMqG,GAAkB,SAAAZ,GAAS,OAAKA,MAD7B,SAEjBxD,IAEFmE,GAAkB,cAAC1I,EAAD,CACjBwD,MAAOe,EACPyD,KAAK,OACL7B,YAAa,SAAAzC,GAAK,OAAIA,EAAM2C,cAAcC,SAC1C7C,SAAU,SAAAC,GACR,IAAMC,EAAID,EAAME,OAAOJ,MACN,KAAbG,EAAEE,QACNW,EAAQb,IAEVG,OAAQ,kBAAM6E,GAAkB,SAAAZ,GAAS,OAAKA,QAE/CS,EAAS3B,KAAI,SAACE,GAAD,OAAU,cAAC,GAAD,CACtB7C,OAAQK,EACRwC,KAAMA,EAENE,WAAYA,EACZD,cAAekC,GAFVnC,EAAKnB,QAIVgD,GAAgB,cAACxI,EAAD,CAAkBkC,QAAS,kBAAMuG,GAAgB,SAAAd,GAAS,OAAKA,MAA/D,0BAGjBa,GAAgB,cAAC5I,EAAD,CACfmG,YAAa,SAACzC,GAAD,OAAWA,EAAM2C,cAAcC,SAC5C9C,MAAOsF,EACPrF,SAAU,SAAAC,GAAK,OAAIqF,EAAarF,EAAME,OAAOJ,QAC7CgD,YAAY,iBAEboC,GAAgB,eAACvI,EAAD,WACf,wBAAQiJ,UAAU,cAAchH,QA1DpC,WACE,GAAyB,KAArBwG,EAAUjF,OAAd,CACA,IAAMkD,EAAa,CACjBnB,GAAI4C,EAASrG,OACboC,KAAMuE,EACNhG,OAAQ4D,aAAaC,QAAQ,QAC7BhC,SAAU,GACVF,KAAM,IAERsE,EAAa,IACbN,EAAcD,EAAS5B,OAAOG,IAC9B8B,GAAgB,SAAAd,GAAS,OAAKA,OA+C5B,sBAGA,wBAAQuB,UAAU,MAAMhH,QAAS,kBAAMuG,GAAgB,SAAAd,GAAS,OAAKA,MAArE,2BCtFOwB,GAAkB,WAC7B,OAAO,eAACxJ,EAAD,WACL,cAAC,GAAD,CAAawE,KAAM,YACnB,cAAC,GAAD,CAAaA,KAAM,YACnB,cAAC,GAAD,CAAaA,KAAM,YACnB,cAAC,GAAD,CAAaA,KAAM,gB,gGCPhB,IAAMiF,GAAW5J,IAAOC,IAAV,M,wPCAd,IAAMkB,GAAenB,IAAOC,IAAV,MCMZ4J,GAA8B,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAAkB,EAEvBxG,mBAAS,IAFc,mBAEvDyG,EAFuD,KAE3CC,EAF2C,KAI9D,SAASC,IACmB,KAAtBF,EAAW9F,SACf6F,GAAY,GACZhD,aAAa0C,QAAQ,OAAQO,IAG/B,OAAO,cAAC,GAAD,CAAO/H,OAAQ,QAASC,MAAO,QAASU,aAC7C,eAAC,GAAD,CAAcuH,UAAW,SAAApG,GACL,UAAdA,EAAMqG,KAAiBF,KAD7B,UAGE,gCACE,qCACA,mDAEF,qBAAKP,UAAU,aAAf,SACE,uBAAOtB,KAAK,OAAOxB,YAAY,OAAOhD,MAAOmG,EAAYlG,SAAU,SAAAC,GACjEkG,EAAiBlG,EAAME,OAAOJ,YAGlC,qBAAK8F,UAAU,eAAf,SACE,wBAAQhH,QAASuH,EAAoBP,UAAU,cAA/C,0BCzBKU,GAA0B,WAAO,IAAD,EAEP9G,mBAAmD,OAAjCwD,aAAaC,QAAQ,SAFhC,mBAEpCa,EAFoC,KAExBnF,EAFwB,KAI3C,OACE,eAACmH,GAAD,WACE,cAAC,GAAD,IACChC,GAAc,cAAC,GAAD,CAAYkC,YAAarH,QCJN,OAApCqE,aAAaC,QAAQ,aACvBD,aAAa0C,QAAQ,UAAW,8BAChC1C,aAAa0C,QAAQ,UAAW,qCAChC1C,aAAa0C,QAAQ,UAAW,iCAChC1C,aAAa0C,QAAQ,UAAW,+BAGlCa,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAAC,EAAD,IACA,cAAC,GAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.242fc62d.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const TopbarName = styled.div`\n    top:0;\n    position: fixed;\n    width: 100%;\n    text-align: center;\n    font-size: 2rem;\n    color: white;\n    line-height: 20px;\n    background-color: grey;\n    z-index: -1;\n`","import React from 'react';\nimport { TopbarName } from \"./styles\";\n\nexport const Header: React.FC = () => {\n  return (\n    <TopbarName>\n      <h6>\n        Trello\n        </h6>\n    </TopbarName>\n  );\n}","import styled from \"styled-components\";\n\nexport const ColumnsContainer = styled.div`\n    padding: 10px 0 10px 0;\n    display: flex;\n    width: 100%;\n    justify-content: space-evenly;\n    background-color: #adadbd;\n    @media (max-width: 1100px) {\n      justify-content: start;\n    }\n`","import styled from \"styled-components\";\n\nexport const ColumnNameInput = styled.input`\n        width: 220px;\n        margin: 0 0 5px 0;\n`\n\nexport const ColumnNameDiv = styled.div`\n        margin: 0 0 5px 0;\n        text-align: start;\n        text-indent: 10px;\n        width: 230px;\n        height: 25px;\n        line-height: 25px;\n        background: #8d8d8d;\n        color: white;\n        border-radius: 2px;\n`\n\nexport const ColumnBorder = styled.div`\n        padding: 10px;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        border-radius: 5px;\n        width: 230px;\n        height: fit-content;\n        background-color: #e6e6e6;\n        margin: 10px;    \n`\n\nexport const ColumnAddCardDiv = styled.div`\n        text-align: start;\n        text-indent: 10px;\n        width: 230px;\n        height: 18px;\n        font-size: 10px;\n        line-height: 20px;\n        background: white;\n        border-radius: 2px;\n        margin: 3px 0 0 0;\n        &:hover {\n           background: #dedede;\n        }\n`\n\nexport const ButtonDiv = styled.div`\n        display: flex;\n        width: 200px;\n        justify-content: space-around;\n`","import styledComponentsTS from 'styled-components-ts'\nimport styled from \"styled-components\";\n\nexport const CardContainer = styled.div`\n    width: 100%;\n    height: 100%;\n`\n\nexport const ColCard = styled.div`\n    border-radius: 5px;\n    background: white;\n    text-align: start;\n    width: 100%;\n    margin: 5px 0 5px 0;\n    text-indent: 10px;\n    line-height: 25px;\n`\n\nexport const CardComments = styled.div`\n    margin: 0 0 0 2px;\n    font-size: 7px;\n`\n\ninterface CardContentProps {\n  empty: boolean;\n}\n\nexport const CardContent = styledComponentsTS<CardContentProps>(styled.div)`\n    text-indent: 10px;\n    padding: ${props => props.empty ? '7px 0 7px 0' : '7px 0 0 0'};\n    font-size: 15px;\n    line-height: 15px;\n`\n\nexport const EditCardButton = styledComponentsTS<CardContentProps>(styled.div)`\n    margin: ${props => props.empty ? '-28px  0 0 200px' : '-20px  0 0 200px'};\n`\n\nexport const NameInput = styled.input`\n    width: 170px;\n    margin: 3px 0 0 0;\n`","import styled from \"styled-components\";\n\nexport const PopupContent = styled.div`\n    width: 100%;\n    height: 100%; \n    padding: 30px;\n    box-sizing: border-box;\n`\n\nexport const PopupText = styled.div`\n    margin: 5px 0 0 0;\n    font-weight: bold;\n    line-height: 20px;\n`\n\nexport const PopupDesc = styled.textarea`\n    height: 60px;\n    width: 100%;\n    margin: 10px 0 10px 0px;\n    border-radius: 2px;\n    border: 0.2px solid grey;\n    overflow-wrap: break-word;\n    resize: none;\n    overflow: hidden;\n`\nexport const PopupDescDiv = styled.div`\n    height: 60px;\n    width: 100%;\n    margin: 10px 0 10px 0px;\n    border-radius: 2px;\n    border: 0.2px solid grey;\n    overflow-wrap: break-word;\n    overflow: scroll;\n`\n\nexport const ColCard = styled.div`\n    border-radius: 5px;\n    background: white;\n    text-align: start;\n    width: 100%;\n    margin: 5px 0 5px 0;\n    text-indent: 10px;\n    line-height: 25px;\n`\nexport const CardName = styled.div`\n    margin: 0 0 10px 0;\n    font-size: 22px;\n    line-height: 15px;\n`\n\nexport const NameInput = styled.input`\n    width: 190px;\n    margin: -25px 0 5px 0;\n`\n\nexport const CommentsBorder = styled.div`\n    width: 100%;\n    border: 0.2px grey solid;\n    border-radius: 2px\n`\n\nexport const CommentsInput = styled.textarea`\n    width: 95%;\n    margin: 5px;\n    border-radius: 2px;\n    border: 0;\n    overflow-wrap: break-word;\n    resize: none;\n    overflow: hidden;\n`\n\nexport const CommentsInputButton = styled.button`\n    height: 30px;\n    color: grey;\n    background-color: white;\n    border-radius: 2px;\n    width: 100px;\n    border: 0;\n`\n\nexport const CommentsArray = styled.div`\n    margin: 10px 0 0 0;\n    width: 100%;\n    font-weight: bold;\n`","import styled from \"styled-components\";\nimport styledComponentsTS from \"styled-components-ts\";\n\nexport const CardPopupBack = styled.div`\n  position: fixed;\n  left: 0;\n  top: 0;\n  height:  100%;\n  width: 100%;\n  background: rgba(0, 0, 0, 0.3);\n  overflow-x: hidden;\n`\n\ninterface PopupProps {\n  width: string;\n  height: string;\n}\n\nexport const CardPopup = styledComponentsTS<PopupProps>(styled.div)`\n  position: absolute;\n  margin: 0 auto 100px auto; \n  left: 0; \n  right: 0;\n  top: 35px;\n  height: ${props => props.height};\n  width: ${props => props.width};\n  background: white;\n  border-radius: 3px;\n  @media (max-width: ${props => props.width}) {\n    width : 90%\n  }\n`\n\ninterface ButtonProps {\n  width: number;\n}\n\nexport const ClosePopup = styledComponentsTS<ButtonProps>(styled.button)`\n  position: absolute;\n  margin: -10px 0 0 ${props => props.width}px;\n  border-radius: 50%;\n  background: #ffffff;\n  border: #767676 1px solid;\n  height: 20px;\n  width: 20px;\n  color: #999999;\n  @media (max-width: ${props => props.width}px) {\n    position: fixed;\n    top: 20px;\n    right 5px;\n  }\n`\n","import React from \"react\";\nimport { CardPopupBack } from \"./styles\";\nimport { CardPopup, ClosePopup } from \"./styles\";\n\ninterface Props {\n  width: string;\n  height: string;\n  setPopupState?: (state: boolean) => void;\n  popupContent: object;\n}\n\nexport const Popup: React.FC<Props> = (props) => {\n  const buttonPos: number = Number(props.width.slice(0, props.width.length - 2)) - 10;\n\n  return (\n    <CardPopupBack>\n      <CardPopup\n        height={props.height}\n        width={props.width}>\n        {props.setPopupState !== undefined && <ClosePopup\n          width={buttonPos}\n          onClick={() => props.setPopupState?.(false)}>\n          x\n        </ClosePopup>}\n        {props.popupContent}\n      </CardPopup>\n    </CardPopupBack>\n  )\n}","import styled from \"styled-components\";\n\nexport const UserComment = styled.div`\n  box-sizing: border-box;\n  word-wrap: break-word;\n  line-height: 30px;\n  padding: 5px;\n  margin: 3px 0 0 0;\n  width: 100%;\n  border: grey 1px solid;\n  border-radius: 2px;\n  &:hover {\n    background: #cbcaca;\n  }\n`\n\nexport const CommentEdit = styled.div`\n  border: grey 1px solid;\n  border-radius: 2px;\n`\n\nexport const CommentInput = styled.textarea`\n  margin: 3px 0 0 3px ;\n  border: 0;\n  line-height: 30px;\n  width: 95%;\n  resize: none;\n`\n\nexport const UserCommentDelete = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: #cbcaca;\n  height: 20px;\n  width: 20px;\n  border-radius: 2px;\n  &:hover {\n    background: white;\n  }\n`","import React, { useState } from \"react\";\nimport { CommentInput, UserComment, UserCommentDelete, CommentEdit } from \"./styles\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface Props {\n  content: string;\n  author: string;\n  index: number;\n  deleteCardComment: (key: number) => void;\n  changeCardComment: (i: number, event: React.ChangeEvent<HTMLTextAreaElement>) => void;\n}\n\nexport const CardComment: React.FC<Props> = ({ content, author, index, deleteCardComment, changeCardComment }) => {\n\n  const [nameState, setNameState] = useState<boolean>(false);\n  const [nameValue, setNameValue] = useState<string>(content);\n\n  return <div>\n    {!nameState && <UserComment\n      onClick={() => setNameState(ps => !ps)}\n      key={index}>\n      {author} : {nameValue}\n    </UserComment>}\n    {nameState && <CommentEdit>\n      <CommentInput\n        value={nameValue}\n        onChange={event => {\n          const v = event.target.value;\n          if (v.trim() === \"\") return;\n          setNameValue(v);\n        }}\n        onBlur={event => {\n          changeCardComment(index, event);\n          setNameState(ps => !ps);\n        }} />\n      <UserCommentDelete onClick={() => deleteCardComment(index)}>\n        <FontAwesomeIcon icon={faTimes} />\n      </UserCommentDelete>\n    </CommentEdit>}\n  </div>\n}","import React, { useEffect, useState } from \"react\";\nimport {\n  CardName, CommentsArray, CommentsBorder, PopupDescDiv, CommentsInput, CommentsInputButton,\n  NameInput, PopupContent, PopupDesc, PopupText\n} from \"./styles\";\nimport { Popup } from \"../Popup\";\nimport { Card, Comments } from \"../../utils/columns-content\";\nimport { CardComment } from \"../Comment\";\n\ninterface Props {\n  cardInfo: Card;\n  column: string;\n  setPopupState: (prevState: boolean) => void;\n  changeCardName: (v: string) => void;\n  changeCardDesc: (v: string) => void;\n  setParentCardsComments: (comms: Comments[]) => void;\n}\n\nexport const CardPopup: React.FC<Props> = ({ cardInfo, column, setPopupState, changeCardName, changeCardDesc: changeCardDecs, setParentCardsComments }) => {\n\n  const [name, setName] = useState<string>(cardInfo.name);\n  const [desc, setDesc] = useState<string>(cardInfo.desc);\n  const [commentsArray, setCommentsArray] = useState<Comments[]>(cardInfo.comments);\n\n  const [changeNamePopup, setChangeNamePopup] = useState<boolean>(false);\n  const [addCommentState, setAddCommentState] = useState<boolean>(false);\n  const [descState, setDescState] = useState<boolean>(false);\n  const [newCommentValue, setCommentValue] = useState<string>(\"\");\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleEsc);\n    return () => { window.removeEventListener('keydown', handleEsc); };\n  });\n\n  function handleEsc(event: { keyCode: number }): void {\n    if (event.keyCode === 27) setPopupState(false);\n  }\n\n  function changeCardComment(i: number, event: React.ChangeEvent<HTMLTextAreaElement>): void {\n    const content: string = event.target.value;\n    const copy: Comments[] = [...commentsArray];\n    const elIndex: number = copy.findIndex(v => v.id === i);\n    copy[elIndex] = { id: i, author: copy[elIndex].author, content: content };\n    setCommentsArray(copy);\n    setParentCardsComments(copy);\n  }\n\n  function deleteCardComment(i: number): void {\n    const ar: Comments[] = commentsArray.filter(v => v.id !== i);\n    setCommentsArray(ar);\n    setParentCardsComments(ar);\n  }\n\n  function changeName(ev: React.ChangeEvent<HTMLInputElement>): void {\n    const v: string = ev.target.value;\n    if (v.trim() === \"\") return\n    setName(v);\n    changeCardName(v);\n  }\n\n  function changeDesc(ev: React.ChangeEvent<HTMLTextAreaElement>): void {\n    const v: string = ev.target.value;\n    setDesc(v);\n    changeCardDecs(v);\n  }\n\n  function saveComment(): void {\n    setAddCommentState(false);\n    if (newCommentValue.trim() === \"\") return;\n    const c: Comments = {\n      id: commentsArray.length,\n      author: localStorage.getItem(\"user\") as string,\n      content: newCommentValue\n    };\n    const ar: Comments[] = commentsArray.concat(c);\n    setCommentsArray(ar);\n    setParentCardsComments(ar);\n  }\n\n  return <Popup\n    height={\"fit-content\"}\n    width={\"768px\"}\n    setPopupState={setPopupState}\n    popupContent={\n      <PopupContent>\n        {!changeNamePopup && <CardName onClick={() => setChangeNamePopup(ps => !ps)}>\n          {name}\n        </CardName>}\n        {changeNamePopup && <NameInput\n          onMouseOver={e => e.currentTarget.focus()}\n          value={name}\n          onChange={changeName}\n          onBlur={() => setChangeNamePopup(ps => !ps)}\n        />}\n        <PopupText>\n          In column: {column}\n        </PopupText>\n        <PopupText>\n          Created by: {cardInfo.author}\n        </PopupText>\n        <PopupText>\n          Description\n        </PopupText>\n        {!descState && <PopupDescDiv onClick={() => setDescState(ps => !ps)}>\n          {desc}\n        </PopupDescDiv>}\n        {descState && <PopupDesc\n          value={desc}\n          onMouseOver={e => e.currentTarget.focus()}\n          onBlur={() => { setDescState(ps => !ps) }}\n          onChange={changeDesc} />}\n        <PopupText>\n          Comments\n        </PopupText>\n        <CommentsBorder>\n          <CommentsInput\n            onClick={() => setAddCommentState(true)}\n            placeholder={\"Write new comment\"}\n            value={newCommentValue}\n            onChange={event => setCommentValue(event.target.value)} />\n          {addCommentState && <CommentsInputButton onClick={saveComment}>\n            Save\n          </CommentsInputButton>}\n        </CommentsBorder>\n        <CommentsArray>\n          {commentsArray.map(({ id, author, content }) => <CardComment\n            index={id}\n            key={id}\n            author={author}\n            content={content}\n            changeCardComment={changeCardComment}\n            deleteCardComment={deleteCardComment} />)}\n        </CommentsArray>\n      </PopupContent>\n    } />\n}","import React, { useEffect, useState } from \"react\";\nimport {\n  CardComments,\n  CardContainer,\n  CardContent,\n  ColCard,\n  NameInput,\n  EditCardButton\n} from \"./styles\";\nimport { Card, Comments } from \"../../utils/columns-content\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faComment } from \"@fortawesome/free-solid-svg-icons/faComment\";\nimport { faEdit } from \"@fortawesome/free-solid-svg-icons/faEdit\";\nimport { CardPopup } from \"../Cardpopup\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\ninterface Props {\n  card: Card;\n  column: string;\n  saveCardState: (card: Card, index: number) => void;\n  deleteCard: (i: number) => void;\n}\n\nexport const ColumnCard: React.FC<Props> = ({ card, column, saveCardState, deleteCard }) => {\n  const { id, name, author, desc, comments } = card;\n\n  const [cardName, setCardName] = useState<string>(name);\n  const [cardDesc, setCardDesc] = useState<string>(desc);\n  const [cardComments, setComments] = useState<Comments[]>(comments);\n  const [popupState, setPopupState] = useState<boolean>(false);\n  const [changeNameState, setChangeNameState] = useState<boolean>(false);\n  const [hover, setHover] = useState<boolean>(false);\n\n  useEffect(() => {\n    // Parent is rendering new card on saveCardState call.\n    if (name !== cardName || desc !== cardDesc || comments !== cardComments) {\n      saveCardState({ id: id, name: cardName, author: author, desc: cardDesc, comments: cardComments }, id);\n    }\n  }, [id, cardName, author, cardDesc, cardComments, saveCardState, name, desc, comments]);\n\n  return <CardContainer>\n    <ColCard onContextMenu={e => {\n      e.preventDefault();\n      setHover(prevState => !prevState);\n    }}>\n      {!changeNameState && <CardContent\n        onClick={() => { setPopupState(prevState => !prevState); }}\n        empty={cardComments.length === 0}>\n        {cardName}\n      </CardContent>}\n      {changeNameState && <NameInput\n        type=\"text\"\n        value={cardName}\n        onChange={ev => {\n          const v: string = ev.target.value;\n          if (v.trim() === \"\") return;\n          setCardName(v);\n        }}\n        onBlur={() => setChangeNameState(prevState => !prevState)} />}\n      <EditCardButton\n        onClick={() => setChangeNameState(prevState => !prevState)}\n        empty={cardComments.length === 0}>\n        <FontAwesomeIcon icon={faEdit} />\n      </EditCardButton>\n      {cardComments.length !== 0 && <CardComments>\n        <FontAwesomeIcon icon={faComment} /> : {cardComments.length}\n      </CardComments>}\n      {hover && <CardComments onClick={() => deleteCard(id)}>\n        <FontAwesomeIcon icon={faTimes} />\n      </CardComments>}\n    </ColCard>\n    {popupState && <CardPopup\n      setPopupState={setPopupState}\n      cardInfo={{ id: id, name: cardName, author: author, desc: cardDesc, comments: cardComments }}\n      column={column}\n      changeCardName={setCardName}\n      changeCardDesc={setCardDesc}\n      setParentCardsComments={setComments}\n    />}\n  </CardContainer>\n}","import React, { useEffect, useRef, useState } from \"react\";\nimport { ColumnNameInput, ColumnBorder, ColumnNameDiv, ColumnAddCardDiv, ButtonDiv } from \"./styles\";\nimport { Card, ColumnsContent } from \"../../utils/columns-content\";\nimport { ColumnCard } from \"../Columncard\";\n\ninterface Props {\n  name: string;\n}\n\nexport const BoardColumn: React.FC<Props> = (props) => {\n  const columnName: string = props.name;\n\n  const column: ColumnsContent = JSON.parse(localStorage.getItem(columnName) as string);\n\n  const [name, setName] = useState<string>(column.name);\n  const [colCards, setCardsArray] = useState<Card[]>(column.cards);\n  const [nameInputState, setNameInputState] = useState<boolean>(false);\n  const [newCardState, setNewCardState] = useState<boolean>(false);\n  const [cardInput, setCardInput] = useState<string>(\"\");\n  const isFirstRun = useRef<boolean>(true);\n\n  useEffect(() => {\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n    } else {\n      localStorage.setItem(columnName, JSON.stringify({ name: name, cards: colCards }));\n    }\n  }, [colCards, columnName, name]);\n\n  function saveNewCard(): void {\n    if (cardInput.trim() === \"\") return;\n    const card: Card = {\n      id: colCards.length,\n      name: cardInput,\n      author: localStorage.getItem(\"user\") as string,\n      comments: [],\n      desc: \"\"\n    };\n    setCardInput(\"\");\n    setCardsArray(colCards.concat(card));\n    setNewCardState(prevState => !prevState);\n  }\n\n  function saveCardChanges(card: Card, index: number): void {\n    setCardsArray(ps => {\n      ps[ps.findIndex(v => v.id === index)] = card;\n      return [...ps];\n    });\n  }\n\n  function deleteCard(i: number): void {\n    setCardsArray(colCards.filter(value => value.id !== i));\n  }\n\n  return <ColumnBorder>\n    {!nameInputState && <ColumnNameDiv\n      onClick={() => setNameInputState(prevState => !prevState)}>\n      {name}\n    </ColumnNameDiv>}\n    {nameInputState && <ColumnNameInput\n      value={name}\n      type=\"text\"\n      onMouseOver={event => event.currentTarget.focus()}\n      onChange={event => {\n        const v = event.target.value;\n        if (v.trim() === \"\") return;\n        setName(v)\n      }}\n      onBlur={() => setNameInputState(prevState => !prevState)}\n    />}\n    {colCards.map((card) => <ColumnCard\n      column={name}\n      card={card}\n      key={card.id}\n      deleteCard={deleteCard}\n      saveCardState={saveCardChanges}\n    />)}\n    {!newCardState && <ColumnAddCardDiv onClick={() => setNewCardState(prevState => !prevState)}>\n      Add new card\n    </ColumnAddCardDiv>}\n    {newCardState && <ColumnNameInput\n      onMouseOver={(event) => event.currentTarget.focus()}\n      value={cardInput}\n      onChange={event => setCardInput(event.target.value)}\n      placeholder=\"Add new card\"\n    />}\n    {newCardState && <ButtonDiv>\n      <button className=\"btn primary\" onClick={saveNewCard}>\n        Add card\n      </button>\n      <button className=\"btn\" onClick={() => setNewCardState(prevState => !prevState)}>\n        Cancel\n      </button>\n    </ButtonDiv>}\n  </ColumnBorder>\n}","import React from 'react';\nimport { ColumnsContainer } from './styles';\nimport { BoardColumn } from \"../Boardcolumn\";\n\nexport const Board: React.FC = () => {\n  return <ColumnsContainer>\n    <BoardColumn name={\"Column0\"} />\n    <BoardColumn name={\"Column1\"} />\n    <BoardColumn name={\"Column2\"} />\n    <BoardColumn name={\"Column3\"} />\n  </ColumnsContainer>\n}","import styled from \"styled-components\";\n\nexport const MainComp = styled.div`\n  margin: 40px 0 0 0;\n`","import styled from \"styled-components\";\n\nexport const PopupContent = styled.div`\n        width: 100%;\n        height: 100%;\n        text-align: center;\n        display: flex;\n        flex-direction: column;\n        justify-content: space-around;\n    `\n\n","import React, { useState } from \"react\";\nimport { Popup } from \"../Popup\";\nimport { PopupContent } from \"./styles\";\n\ninterface Props {\n  togglePopup: (val: boolean) => void;\n}\n\nexport const LoginPopup: React.FC<Props> = ({ togglePopup }) => {\n\n  const [inputState, changeInputState] = useState(\"\");\n\n  function changeDisplayState(): void {\n    if (inputState.trim() === \"\") return;\n    togglePopup(false);\n    localStorage.setItem(\"user\", inputState);\n  }\n\n  return <Popup height={\"180px\"} width={\"350px\"} popupContent={\n    <PopupContent onKeyDown={event => {\n      if (event.key === 'Enter') changeDisplayState()\n    }}>\n      <div>\n        <h3>Hi!</h3>\n        <p>Enter your name</p>\n      </div>\n      <div className=\"modal-body\">\n        <input type=\"text\" placeholder=\"Name\" value={inputState} onChange={event => {\n          changeInputState(event.target.value);\n        }} />\n      </div>\n      <div className=\"modal-footer\">\n        <button onClick={changeDisplayState} className=\"btn primary\">\n          Done\n        </button>\n      </div>\n    </PopupContent>\n  }>\n  </Popup>\n}","import React from 'react';\nimport '../Board/Board'\nimport { Board } from \"../Board\";\nimport { MainComp } from \"./styles\";\nimport { LoginPopup } from '../Loginpopup';\nimport { useState } from 'react';\n\nexport const MainComponent: React.FC = () => {\n\n  const [popupState, setPopupState] = useState<boolean>(localStorage.getItem(\"user\") === null ? true : false);\n\n  return (\n    <MainComp>\n      <Board />\n      {popupState && <LoginPopup togglePopup={setPopupState} />}\n    </MainComp>\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './css /bootstrap.css'\n\nimport { Header } from \"./components/Header\";\nimport { MainComponent } from \"./components/Mainblock\";\n\n// localStorage.clear()\n\nif (localStorage.getItem(\"Column0\") === null) {\n  localStorage.setItem(\"Column0\", \"{\\\"name\\\":\\\"TODO\\\",\\\"cards\\\":[]}\");\n  localStorage.setItem(\"Column1\", \"{\\\"name\\\":\\\"In Progress\\\",\\\"cards\\\":[]}\");\n  localStorage.setItem(\"Column2\", \"{\\\"name\\\":\\\"Testing\\\",\\\"cards\\\":[]}\");\n  localStorage.setItem(\"Column3\", \"{\\\"name\\\":\\\"Done\\\",\\\"cards\\\":[]}\");\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Header />\n    <MainComponent />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}