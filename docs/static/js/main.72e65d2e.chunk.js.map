{"version":3,"sources":["components/Header/styles.ts","components/Header/Header.tsx","components/Board/styles.ts","components/Boardcolumn/styles.ts","components/Columncard/styles.ts","components/AppContext/GlobalContext.tsx","components/Columncard/ColumnCard.tsx","components/Boardcolumn/BoardColumn.tsx","components/Board/Board.tsx","components/Mainblock/styles.ts","components/Popup/styles.ts","components/Popup/Popup.tsx","components/Loginpopup/styles.ts","components/Loginpopup/LoginPopup.tsx","components/Cardpopup/styles.ts","components/Comment/styles.ts","components/Comment/CardComment.tsx","components/Cardpopup/CardPopup.tsx","components/Mainblock/MainComponent.tsx","utils/state-reducers.ts","utils/handlers.ts","index.tsx"],"names":["TopbarName","styled","div","Header","ColumnsContainer","ColumnNameInput","input","ColumnNameDiv","ColumnBorder","ColumnAddCardDiv","ButtonDiv","CardContainer","ColCard","CardComments","CardContent","styledComponentsTS","props","empty","EditCardButton","NameInput","AppContext","React","createContext","AppState","initialState","reducer","children","useReducer","state","red","useEffect","localStorage","setItem","JSON","stringify","Provider","value","useStateValue","useContext","ColumnCard","id","useState","changeNameState","setChangeNameState","rightClickState","setRightClickState","stateCard","cards","find","card","comments","filter","comment","idCard","onContextMenu","event","preventDefault","prevState","onClick","type","payload","length","name","onChange","v","target","trim","desc","author","columnId","idColumn","onBlur","icon","faEdit","faComment","faTimes","BoardColumn","initName","setName","cardInput","setCardInput","nameInputState","setNameInputState","newCardState","setNewCardState","saveNewCard","useCallback","user","onMouseOver","currentTarget","focus","map","placeholder","className","Board","context","columns","MainComp","CardPopupBack","CardPopup","height","width","ClosePopup","button","Popup","setPopupState","buttonPos","Number","slice","undefined","PopupContent","LoginPopup","togglePopup","inputState","changeInputState","changeDisplayState","onKeyDown","key","PopupText","PopupDesc","textarea","PopupDescDiv","CardName","CommentsBorder","CommentsInput","CommentsInputButton","CommentsArray","UserComment","CommentEdit","CommentInput","UserCommentBar","CommentBorders","CardComment","nameState","setNameState","commentState","content","cardId","ps","newCommentValue","setCommentValue","changeNamePopup","setChangeNamePopup","addCommentState","setAddCommentState","descState","setDescState","window","addEventListener","handleEsc","removeEventListener","res","crd","popup","setState","keyCode","e","ev","col","comm","MainComponent","popupState","AllActionCollection","action","column","display","ReactDOM","render","StrictMode","getItem","parse","handler","document","getElementById"],"mappings":"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","file":"static/js/main.72e65d2e.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const TopbarName = styled.div`\n    top:0;\n    position: fixed;\n    width: 100%;\n    text-align: center;\n    font-size: 2rem;\n    color: white;\n    line-height: 20px;\n    background-color: grey;\n    z-index: -1;\n`","import React from 'react';\nimport { TopbarName } from \"./styles\";\n\nexport const Header: React.FC = () => {\n  return (\n    <TopbarName>\n      <h6>\n        Trello\n      </h6>\n    </TopbarName>\n  );\n}","import styled from \"styled-components\";\n\nexport const ColumnsContainer = styled.div`\n    padding: 10px 0 10px 0;\n    display: flex;\n    width: 100%;\n    justify-content: space-evenly;\n    background-color: #adadbd;\n    @media (max-width: 1100px) {\n      justify-content: start;\n    }\n`","import styled from \"styled-components\";\n\nexport const ColumnNameInput = styled.input`\n        width: 220px;\n        margin: 0 0 5px 0;\n`\n\nexport const ColumnNameDiv = styled.div`\n        margin: 0 0 5px 0;\n        text-align: start;\n        text-indent: 10px;\n        width: 230px;\n        height: 25px;\n        line-height: 25px;\n        background: #8d8d8d;\n        color: white;\n        border-radius: 2px;\n`\n\nexport const ColumnBorder = styled.div`\n        padding: 10px;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        border-radius: 5px;\n        width: 230px;\n        height: fit-content;\n        background-color: #e6e6e6;\n        margin: 10px;    \n`\n\nexport const ColumnAddCardDiv = styled.div`\n        text-align: start;\n        text-indent: 10px;\n        width: 230px;\n        height: 18px;\n        font-size: 10px;\n        line-height: 20px;\n        background: white;\n        border-radius: 2px;\n        margin: 3px 0 0 0;\n        &:hover {\n           background: #dedede;\n        }\n`\n\nexport const ButtonDiv = styled.div`\n        display: flex;\n        width: 200px;\n        justify-content: space-around;\n`","import styledComponentsTS from 'styled-components-ts'\nimport styled from \"styled-components\";\n\nexport const CardContainer = styled.div`\n    width: 100%;\n    height: 100%;\n`\n\nexport const ColCard = styled.div`\n    border-radius: 5px;\n    background: white;\n    text-align: start;\n    width: 100%;\n    margin: 5px 0 5px 0;\n    text-indent: 10px;\n    line-height: 25px;\n`\n\nexport const CardComments = styled.div`\n    margin: 0 0 0 2px;\n    font-size: 7px;\n`\n\ninterface CardContentProps {\n  empty: boolean;\n}\n\nexport const CardContent = styledComponentsTS<CardContentProps>(styled.div)`\n    text-indent: 10px;\n    padding: ${props => props.empty ? '7px 0 7px 0' : '7px 0 0 0'};\n    font-size: 15px;\n    line-height: 15px;\n`\n\nexport const EditCardButton = styledComponentsTS<CardContentProps>(styled.div)`\n    margin: ${props => props.empty ? '-28px  0 0 200px' : '-20px  0 0 200px'};\n`\n\nexport const NameInput = styled.input`\n    width: 170px;\n    margin: 3px 0 0 0;\n`","import React, { Dispatch, useContext, useEffect, useReducer } from \"react\";\nimport { AState } from \"../../utils/global-context-types\";\nimport { Action } from \"../../utils/state-reducers\";\n\ninterface AppContextContent {\n  state: AState;\n  reducer: Dispatch<Action>;\n}\n\nconst AppContext = React.createContext<AppContextContent>(null!)\n\ninterface Props {\n  initialState: AState;\n  reducer: (state: AState, action: Action) => AState;\n}\n\nexport const AppState: React.FC<Props> = ({ initialState, reducer, children }) => {\n\n  const [state, red] = useReducer(reducer, initialState);\n\n  useEffect(() => {\n    localStorage.setItem(\"state\", JSON.stringify(state));\n  })\n\n  return <AppContext.Provider value={{\n    state: state,\n    reducer: red\n  }} >\n    {children}\n  </AppContext.Provider>\n}\n\nexport const useStateValue = () => useContext(AppContext);\n","import React, { useState } from \"react\";\nimport {\n  CardComments,\n  CardContainer,\n  CardContent,\n  ColCard,\n  NameInput,\n  EditCardButton\n} from \"./styles\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faComment } from \"@fortawesome/free-solid-svg-icons/faComment\";\nimport { faEdit } from \"@fortawesome/free-solid-svg-icons/faEdit\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { useStateValue } from \"../AppContext/GlobalContext\";\nimport { Card, Comm } from \"../../utils/global-context-types\";\ninterface Props {\n  id: number;\n}\n\nexport const ColumnCard: React.FC<Props> = ({ id }) => {\n\n  const { state, reducer } = useStateValue();\n\n  const [changeNameState, setChangeNameState] = useState<boolean>(false);\n  const [rightClickState, setRightClickState] = useState<boolean>(false);\n\n  const stateCard = state.cards.find((card) => id === card.id);\n  if (!stateCard) return null;\n  const card: Card = stateCard as Card;\n  const comments: Comm[] = state.comments.filter((comment) => id === comment.idCard);\n\n  function onRightClick(event: React.MouseEvent<HTMLDivElement, MouseEvent>): void {\n    event.preventDefault();\n    setRightClickState(prevState => !prevState);\n  }\n\n  function onEditBlur(event: React.ChangeEvent<HTMLInputElement>): void {\n    setChangeNameState(prevState => !prevState);\n  }\n\n  function onClick(event: React.MouseEvent<HTMLDivElement, MouseEvent>): void {\n    reducer({\n      type: \"DEL_CARD\", payload: {\n        id: id,\n        name: card.name,\n        desc: card.desc,\n        author: card.author,\n        columnId: card.idColumn\n      }\n    });\n  }\n\n  function nameInput(event: React.ChangeEvent<HTMLInputElement>): void {\n    const v: string = event.target.value;\n    if (v.trim() === \"\") return;\n    reducer({\n      type: \"CHANGE_CARD\", payload: {\n        id: id,\n        name: v,\n        desc: card.desc,\n        author: card.author,\n        columnId: card.idColumn\n      }\n    });\n  }\n\n  function togglePopup(event: React.MouseEvent<HTMLDivElement, MouseEvent>): void {\n    reducer({ type: \"CHANGE_POPUP\", payload: { idCard: id, state: true } })\n  }\n\n  return <CardContainer>\n    <ColCard onContextMenu={onRightClick}>\n      {!changeNameState && <CardContent\n        onClick={togglePopup}\n        empty={comments.length === 0}>\n        {card.name}\n      </CardContent>}\n      {changeNameState && <NameInput\n        type=\"text\"\n        value={card.name}\n        onChange={nameInput}\n        onBlur={onEditBlur} />}\n      <EditCardButton\n        onClick={() => setChangeNameState(prevState => !prevState)}\n        empty={comments.length === 0}>\n        <FontAwesomeIcon icon={faEdit} />\n      </EditCardButton>\n      {comments.length !== 0 && <CardComments>\n        <FontAwesomeIcon icon={faComment} /> : {comments.length}\n      </CardComments>}\n      {rightClickState && <CardComments\n        onClick={onClick}>\n        <FontAwesomeIcon icon={faTimes} />\n      </CardComments>}\n    </ColCard>\n  </CardContainer >\n}","import React, { useCallback, useState } from \"react\";\nimport { ColumnNameInput, ColumnBorder, ColumnNameDiv, ColumnAddCardDiv, ButtonDiv } from \"./styles\";\nimport { ColumnCard } from \"../Columncard\";\nimport { useStateValue } from \"../AppContext/GlobalContext\";\n\ninterface Props {\n  id: number;\n  initName: string;\n}\n\nexport const BoardColumn: React.FC<Props> = ({ id, initName }) => {\n\n  const { state, reducer } = useStateValue()\n\n  const [name, setName] = useState<string>(initName);\n  const [cardInput, setCardInput] = useState<string>(\"\");\n\n  const [nameInputState, setNameInputState] = useState<boolean>(false);\n  const [newCardState, setNewCardState] = useState<boolean>(false);\n\n  const saveNewCard = useCallback(() => {\n    if (cardInput.trim() === \"\") return;\n    setCardInput(\"\");\n    reducer({\n      type: \"ADD_CARD\",\n      payload: {\n        id: state.cards.length,\n        name: cardInput,\n        author: state.user,\n        desc: \"\",\n        columnId: id\n      }\n    });\n    setNewCardState(prevState => !prevState);\n  },\n    [cardInput, id, reducer, state.cards.length, state.user]\n  );\n\n  return <ColumnBorder>\n    {!nameInputState && <ColumnNameDiv\n      onClick={() => setNameInputState(prevState => !prevState)}>\n      {name}\n    </ColumnNameDiv>}\n    {nameInputState && <ColumnNameInput\n      value={name}\n      type=\"text\"\n      onMouseOver={event => event.currentTarget.focus()}\n      onChange={event => {\n        const v: string = event.target.value;\n        if (v.trim() === \"\") return;\n        setName(v)\n      }}\n      onBlur={() => {\n        reducer({ type: \"CHANGE_COL_NAME\", payload: { id: id, name: name } });\n        setNameInputState(prevState => !prevState)\n      }}\n    />}\n    {\n      state.cards.map((card) => card.idColumn === id && <ColumnCard\n        key={card.id}\n        id={card.id}\n      />)}\n    {!newCardState && <ColumnAddCardDiv\n      onClick={() => setNewCardState(prevState => !prevState)}>\n      Add new card\n    </ColumnAddCardDiv>}\n    {newCardState && <ColumnNameInput\n      onMouseOver={event => event.currentTarget.focus()}\n      value={cardInput}\n      onChange={event => setCardInput(event.target.value)}\n      placeholder=\"Add new card\"\n    />}\n    {newCardState && <ButtonDiv>\n      <button className=\"btn primary\" onClick={saveNewCard}>\n        Add card\n      </button>\n      <button className=\"btn\" onClick={() => setNewCardState(prevState => !prevState)}>\n        Cancel\n      </button>\n    </ButtonDiv>}\n  </ColumnBorder>\n}","import React from 'react';\nimport { ColumnsContainer } from './styles';\nimport { BoardColumn } from \"../Boardcolumn\";\nimport { useStateValue } from '../AppContext/GlobalContext';\n\nexport const Board: React.FC = () => {\n\n  const context = useStateValue()\n\n  return <ColumnsContainer>\n    {context.state.columns.map(({ id, name }) =>\n      <BoardColumn initName={name} key={id} id={id} />)}\n  </ColumnsContainer>\n}","import styled from \"styled-components\";\n\nexport const MainComp = styled.div`\n  margin: 40px 0 0 0;\n`","import styled from \"styled-components\";\nimport styledComponentsTS from \"styled-components-ts\";\n\nexport const CardPopupBack = styled.div`\n  position: fixed;\n  left: 0;\n  top: 0;\n  height:  100%;\n  width: 100%;\n  background: rgba(0, 0, 0, 0.3);\n  overflow-x: hidden;\n`\n\ninterface PopupProps {\n  width: string;\n  height: string;\n}\n\nexport const CardPopup = styledComponentsTS<PopupProps>(styled.div)`\n  position: absolute;\n  margin: 0 auto 100px auto; \n  left: 0; \n  right: 0;\n  top: 35px;\n  height: ${props => props.height};\n  width: ${props => props.width};\n  background: white;\n  border-radius: 3px;\n  @media (max-width: ${props => props.width}) {\n    width : 90%\n  }\n`\n\ninterface ButtonProps {\n  width: number;\n}\n\nexport const ClosePopup = styledComponentsTS<ButtonProps>(styled.button)`\n  position: absolute;\n  margin: -10px 0 0 ${props => props.width}px;\n  border-radius: 50%;\n  background: #ffffff;\n  border: #767676 1px solid;\n  height: 20px;\n  width: 20px;\n  color: #999999;\n  @media (max-width: ${props => props.width + 20}px) {\n    position: fixed;\n    top: 20px;\n    right 5px;\n  }\n`\n","import React from \"react\";\nimport { CardPopupBack } from \"./styles\";\nimport { CardPopup, ClosePopup } from \"./styles\";\n\ninterface Props {\n  width: string;\n  height: string;\n  setPopupState?: (state: boolean) => void;\n}\n\nexport const Popup: React.FC<Props> = ({ width, height, setPopupState, children }) => {\n\n  const buttonPos: number = Number(width.slice(0, width.length - 2)) - 10;\n\n  return (\n    <CardPopupBack>\n      <CardPopup\n        height={height}\n        width={width}>\n        {setPopupState !== undefined && <ClosePopup\n          width={buttonPos}\n          onClick={() => setPopupState?.(false)}>\n          x\n        </ClosePopup>}\n        {children}\n      </CardPopup>\n    </CardPopupBack>\n  )\n}","import styled from \"styled-components\";\n\nexport const PopupContent = styled.div`\n        width: 100%;\n        height: 100%;\n        text-align: center;\n        display: flex;\n        flex-direction: column;\n        justify-content: space-around;\n    `\n\n","import React, { useState } from \"react\";\nimport { useStateValue } from \"../AppContext/GlobalContext\";\nimport { Popup } from \"../Popup\";\nimport { PopupContent } from \"./styles\";\n\ninterface Props {\n  togglePopup: (val: boolean) => void;\n}\n\nexport const LoginPopup: React.FC<Props> = ({ togglePopup }) => {\n\n  const [inputState, changeInputState] = useState(\"\");\n  const context = useStateValue()\n\n  function changeDisplayState(): void {\n    if (inputState.trim() === \"\") return;\n    togglePopup(false);\n    context.reducer({ type: \"CHANGE_USER\", payload: { name: inputState } })\n  }\n\n  return <Popup height={\"180px\"} width={\"350px\"}>\n    <PopupContent onKeyDown={event => {\n      if (event.key === 'Enter') changeDisplayState()\n    }}>\n      <div>\n        <h3>Hi!</h3>\n        <p>Enter your name</p>\n      </div>\n      <div className=\"modal-body\">\n        <input\n          type=\"text\"\n          placeholder=\"Name\"\n          value={inputState}\n          onChange={event => changeInputState(event.target.value)} />\n      </div>\n      <div className=\"modal-footer\">\n        <button onClick={changeDisplayState} className=\"btn primary\">\n          Done\n        </button>\n      </div>\n    </PopupContent>\n  </Popup>\n}","import styled from \"styled-components\";\n\nexport const PopupContent = styled.div`\n    width: 100%;\n    height: 100%; \n    padding: 30px;\n    box-sizing: border-box;\n`\n\nexport const PopupText = styled.div`\n    margin: 5px 0 0 0;\n    font-weight: bold;\n    line-height: 20px;\n`\n\nexport const PopupDesc = styled.textarea`\n    height: 60px;\n    width: 100%;\n    margin: 10px 0 10px 0px;\n    border-radius: 2px;\n    border: 0.2px solid grey;\n    overflow-wrap: break-word;\n    resize: none;\n`\nexport const PopupDescDiv = styled.div`\n    min-height: 60px;\n    width: 100%;\n    margin: 10px 0 10px 0px;\n    border-radius: 2px;\n    border: 0.2px solid grey;\n    overflow-wrap: break-word;\n`\n\nexport const ColCard = styled.div`\n    border-radius: 5px;\n    background: white;\n    text-align: start;\n    width: 100%;\n    margin: 5px 0 5px 0;\n    text-indent: 10px;\n    line-height: 25px;\n`\nexport const CardName = styled.div`\n    margin: 0 0 10px 0;\n    font-size: 22px;\n    line-height: 15px;\n`\n\nexport const NameInput = styled.input`\n    width: 190px;\n    margin: -25px 0 5px 0;\n`\n\nexport const CommentsBorder = styled.div`\n    width: 100%;\n    border: 0.2px grey solid;\n    border-radius: 2px\n`\n\nexport const CommentsInput = styled.textarea`\n    width: 95%;\n    margin: 5px;\n    border-radius: 2px;\n    border: 0;\n    overflow-wrap: break-word;\n    resize: none;\n`\n\nexport const CommentsInputButton = styled.button`\n    height: 30px;\n    color: grey;\n    background-color: white;\n    border-radius: 2px;\n    width: 100px;\n    border: 0;\n`\n\nexport const CommentsArray = styled.div`\n    margin: 10px 0 0 0;\n    width: 100%;\n    font-weight: bold;\n`","import styled from \"styled-components\";\n\nexport const UserComment = styled.div`\n  box-sizing: border-box;\n  word-wrap: break-word;\n  line-height: 30px;\n  padding: 5px;\n  margin: 3px 0 0 0;\n  width: 100%;\n  border: grey 1px solid;\n  border-radius: 2px;\n`\n\nexport const CommentEdit = styled.div`\n  border: grey 1px solid;\n  border-radius: 2px;\n`\n\nexport const CommentInput = styled.textarea`\n  margin: 3px 0 0 3px ;\n  border: 0;\n  line-height: 30px;\n  width: 95%;\n  resize: none;\n`\n\nexport const UserCommentBar = styled.div`\n  display: flex;\n  font-size: 10px;\n`\n\nexport const CommentBorders = styled.div`\n  text-indent: 5px;\n  margin: 5px;\n`","import React, { useState } from \"react\";\nimport { CommentInput, UserComment, CommentEdit, CommentBorders, UserCommentBar } from \"./styles\";\nimport { useStateValue } from \"../AppContext/GlobalContext\";\nimport { Comm } from \"../../utils/global-context-types\";\n\ninterface Props {\n  id: number;\n}\n\nexport const CardComment: React.FC<Props> = ({ id }) => {\n\n  const { state, reducer } = useStateValue();\n  const [nameState, setNameState] = useState<boolean>(false);\n\n  const commentState = state.comments.find((comment) => comment.id === id);\n  if (!commentState) return null;\n  const comment: Comm = commentState;\n\n  function onChange(event: React.ChangeEvent<HTMLTextAreaElement>): void {\n    const { id, author, idCard } = comment;\n    const v = event.target.value;\n    if (v === \"\") return;\n    reducer({\n      type: \"CHANGE_COMM_CONTENT\",\n      payload: { id, author, content: v, cardId: idCard }\n    });\n  }\n\n  function deleteCard(event: React.MouseEvent<HTMLDivElement, MouseEvent>): void {\n    const { id, author, content, idCard } = comment;\n    reducer({\n      type: \"DEL_COMM\",\n      payload: { id, author, content, cardId: idCard }\n    });\n  }\n\n  return <div>\n    {!nameState && <CommentBorders>\n      {comment.author}\n      <UserComment>\n        {comment.content}\n      </UserComment>\n      <UserCommentBar>\n        <div onClick={deleteCard}>\n          Delete\n        </div>\n        <div onClick={() => setNameState(ps => !ps)}>\n          Change\n        </div>\n      </UserCommentBar>\n    </CommentBorders>}\n    {nameState && <CommentEdit>\n      <CommentInput\n        value={comment.content}\n        onChange={onChange}\n        onBlur={() => setNameState(ps => !ps)} />\n    </CommentEdit>}\n  </div>\n}","import React, { useEffect, useState } from \"react\";\nimport {\n  CardName, CommentsArray, CommentsBorder, PopupDescDiv,\n  CommentsInput, CommentsInputButton, NameInput, PopupContent,\n  PopupDesc, PopupText\n} from \"./styles\";\nimport { Popup } from \"../Popup\";\nimport { useStateValue } from \"../AppContext/GlobalContext\";\nimport { Card } from \"../../utils/global-context-types\";\nimport { CardComment } from \"../Comment\";\n\nexport const CardPopup: React.FC = () => {\n\n  const { state, reducer } = useStateValue();\n  const [newCommentValue, setCommentValue] = useState<string>(\"\");\n\n  const [changeNamePopup, setChangeNamePopup] = useState<boolean>(false);\n  const [addCommentState, setAddCommentState] = useState<boolean>(false);\n  const [descState, setDescState] = useState<boolean>(false);\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleEsc);\n    return () => {\n      window.removeEventListener('keydown', handleEsc);\n    };\n  });\n\n  const res = state.cards.find((crd) => crd.id === state.popup.idCard);\n  if (!res) return null;\n  const card: Card = res as Card;\n\n  function setPopupState(setState: boolean): void {\n    reducer({ type: \"CHANGE_POPUP\", payload: { state: setState, idCard: -1 } })\n  }\n\n  function handleEsc(event: { keyCode: number }): void {\n    if (event.keyCode === 27) { setPopupState(false) };\n  }\n\n  function changeName(ev: React.ChangeEvent<HTMLInputElement>): void {\n    const { id, author, desc, idColumn } = card;\n    const v: string = ev.target.value;\n    if (v.trim() === \"\") return;\n    reducer({\n      type: \"CHANGE_CARD\", payload:\n        { id: id, name: ev.target.value, author: author, columnId: idColumn, desc: desc }\n    });\n  }\n\n  function changeDesc(ev: React.ChangeEvent<HTMLTextAreaElement>): void {\n    const { id, name, author, idColumn } = card;\n    const v: string = ev.target.value;\n    if (v.trim() === \"\") return;\n    reducer({\n      type: \"CHANGE_CARD\", payload:\n        { id: id, name: name, author: author, columnId: idColumn, desc: ev.target.value }\n    });\n  }\n\n  function changeNameOnBlur(ev: React.ChangeEvent<HTMLInputElement>): void {\n    setChangeNamePopup(ps => !ps);\n  }\n\n  function saveComment(): void {\n    if (newCommentValue.trim() === \"\") return;\n    setCommentValue(\"\");\n    reducer({\n      type: \"ADD_COMM\", payload: {\n        id: state.comments.length, author: state.user,\n        content: newCommentValue, cardId: card.id,\n      }\n    });\n  }\n\n  return <Popup\n    height={\"fit-content\"}\n    width={\"768px\"}\n    setPopupState={setPopupState}>\n    <PopupContent>\n      {!changeNamePopup && <CardName\n        onClick={() => setChangeNamePopup(ps => !ps)}>\n        {card.name}\n      </CardName>}\n      {changeNamePopup && <NameInput\n        onMouseOver={e => e.currentTarget.focus()}\n        value={card.name}\n        onChange={changeName}\n        onBlur={changeNameOnBlur}\n      />}\n      <PopupText>\n        In column: {state.columns.find((col) => col.id === card.idColumn)?.name}\n      </PopupText>\n      <PopupText>\n        Created by: {card.author}\n      </PopupText>\n      <PopupText>\n        Description\n      </PopupText>\n      {!descState && <PopupDescDiv\n        onClick={() => setDescState(ps => !ps)}>\n        {card.desc}\n      </PopupDescDiv>}\n      {descState && <PopupDesc\n        value={card.desc}\n        onMouseOver={e => e.currentTarget.focus()}\n        onBlur={() => setDescState(ps => !ps)}\n        onChange={changeDesc} />}\n      <PopupText>\n        Comments\n      </PopupText>\n      <CommentsBorder>\n        <CommentsInput\n          onClick={() => setAddCommentState(true)}\n          placeholder={\"Write new comment\"}\n          value={newCommentValue}\n          onChange={event => setCommentValue(event.target.value)} />\n        {addCommentState && <CommentsInputButton\n          onClick={saveComment}>\n          Save\n          </CommentsInputButton>}\n      </CommentsBorder>\n      <CommentsArray>\n        {state.comments.map((comm) => comm.idCard === card.id &&\n          <CardComment key={comm.id} id={comm.id} />)}\n      </CommentsArray>\n    </PopupContent>\n  </Popup >\n}","import React, { useState } from 'react';\nimport '../Board/Board'\nimport { Board } from \"../Board\";\nimport { MainComp } from \"./styles\";\nimport { LoginPopup } from '../Loginpopup/LoginPopup';\nimport { useStateValue } from '../AppContext/GlobalContext';\nimport { CardPopup } from '../Cardpopup/CardPopup';\n\nexport const MainComponent: React.FC = () => {\n\n  const { state } = useStateValue();\n  const [popupState, setPopupState] = useState<boolean>(state.user === \"\" ? true : false);\n\n  return (\n    <MainComp>\n      <Board />\n      {popupState && <LoginPopup togglePopup={setPopupState} />}\n      {state.popup.state && <CardPopup />}\n    </MainComp>\n  )\n}","import { AState } from \"./global-context-types\";\nimport { changeUser, changeColName, addCard, changeCard, delCard, addComm, changeCommContent, delComm, popupChange } from \"./handlers\";\n\nexport const mainReducer = (state: AState, action: Action) => {\n  // TODO: Fix any type.\n  const handler: (state: AState, action: any) => AState = AllActionCollection[action.type];\n  return handler ? handler(state, action) : state;\n}\n\nexport const AllActionCollection = {\n  'CHANGE_USER': changeUser,\n  'CHANGE_COL_NAME': changeColName,\n  'ADD_CARD': addCard,\n  'CHANGE_CARD': changeCard,\n  'DEL_CARD': delCard,\n  'ADD_COMM': addComm,\n  'CHANGE_COMM_CONTENT': changeCommContent,\n  'DEL_COMM': delComm,\n  'CHANGE_POPUP': popupChange\n}\n\nexport type Action =\n  | UserActions\n  | ColumnAction\n  | CardAction\n  | PopupAction\n  | СommAction;\n\nexport type UserActions =\n  | { type: 'CHANGE_USER', payload: IUserPayload };\n\nexport type ColumnAction =\n  | { type: 'CHANGE_COL_NAME', payload: IColumnPayload };\n\nexport type CardAction =\n  | { type: 'ADD_CARD', payload: ICardPayload }\n  | { type: 'CHANGE_CARD', payload: ICardPayload }\n  | { type: 'DEL_CARD', payload: ICardPayload };\n\nexport type СommAction =\n  | { type: 'ADD_COMM', payload: ICommPayload }\n  | { type: 'CHANGE_COMM_CONTENT', payload: ICommPayload }\n  | { type: 'DEL_COMM', payload: ICommPayload };\n\nexport type PopupAction =\n  | { type: 'CHANGE_POPUP', payload: IPopupPayload };\n\ninterface IUserPayload {\n  name: string;\n}\n\ninterface IColumnPayload {\n  id: number, name: string\n}\n\ninterface ICardPayload {\n  id: number, name: string, desc: string, author: string, columnId: number\n}\n\ninterface ICommPayload {\n  id: number, content: string, author: string, cardId: number\n}\n\ninterface IPopupPayload {\n  state: boolean,\n  idCard: number\n}","import { AState } from \"./global-context-types\";\nimport { CardAction, ColumnAction, PopupAction, UserActions, СommAction } from \"./state-reducers\";\n\nexport const changeUser = function (state: AState, action: UserActions): AState {\n  return {\n    ...state,\n    user: action.payload.name\n  };\n};\n\nexport const changeColName = function (state: AState, action: ColumnAction): AState {\n  const { id, name } = action.payload;\n  return {\n    ...state,\n    columns: state.columns.map((column) =>\n      column.id === id ? { id: id, name: name } : column)\n  };\n};\n\nexport const addCard = function (state: AState, action: CardAction): AState {\n  const { id, name, desc, columnId, author } = action.payload;\n  return {\n    ...state,\n    cards: [...state.cards, { id: id, name: name, desc: desc, author: author, idColumn: columnId }]\n  };\n};\n\nexport const changeCard = function (state: AState, action: CardAction): AState {\n  const { id, name, desc } = action.payload;\n  return {\n    ...state,\n    cards: state.cards.map((card) =>\n      card.id === id ? {\n        id: id, name: name, desc: desc,\n        author: card.author, idColumn: card.idColumn\n      } : card)\n  };\n};\n\nexport const delCard = function (state: AState, action: CardAction): AState {\n  const { id } = action.payload;\n  return {\n    ...state,\n    cards: state.cards.filter(card => card.id !== id),\n    comments: state.comments.filter((comm) => comm.idCard !== id)\n  };\n};\n\nexport const addComm = function (state: AState, action: СommAction): AState {\n  const { id, author, content, cardId } = action.payload;\n  return {\n    ...state,\n    comments: [...state.comments, { id: id, author: author, content: content, idCard: cardId }]\n  };\n};\n\nexport const changeCommContent = function (state: AState, action: СommAction): AState {\n  const { id, content } = action.payload;\n  return {\n    ...state,\n    comments: state.comments.map((comm) =>\n      comm.id === id ? {\n        id, content: content, author: comm.author, idCard: comm.idCard\n      } : comm)\n  };\n};\n\nexport const delComm = function (state: AState, action: СommAction): AState {\n  const { id } = action.payload;\n  return {\n    ...state,\n    comments: state.comments.filter((comm) => comm.id !== id)\n  };\n};\n\nexport const popupChange = function (state: AState, action: PopupAction): AState {\n  const { state: display, idCard } = action.payload;\n  return {\n    ...state,\n    popup: {\n      state: display,\n      idCard: idCard\n    }\n  };\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './css /bootstrap.css'\n\nimport { Header } from \"./components/Header\";\nimport { MainComponent } from \"./components/Mainblock\";\nimport { AppState } from './components/AppContext/GlobalContext';\nimport { AState } from './utils/global-context-types';\nimport { mainReducer } from './utils/state-reducers';\n\nconst initialState: AState = {\n  user: \"\",\n  columns: [{ id: 0, name: \"TODO\" }, { id: 1, name: \"In Progress\" }, { id: 2, name: \"Testing\" }, { id: 3, name: \"Done\" }],\n  cards: [],\n  comments: [],\n  popup: { idCard: -1, state: false }\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppState\n      initialState={localStorage.getItem(\"state\") === null ?\n        initialState :\n        JSON.parse(localStorage.getItem(\"state\") as string)}\n      reducer={mainReducer}>\n      <Header />\n      <MainComponent />\n    </AppState>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}