{"version":3,"sources":["components/header/styles.ts","components/header/Header.tsx","components/boardcolumn/styles.ts","components/columncard/styles.ts","components/cardpopup/styles.ts","components/popup/styles.ts","components/popup/Popup.tsx","components/comment/styles.ts","components/comment/CardComment.tsx","components/cardpopup/CardPopup.tsx","components/columncard/ColumnCard.tsx","components/boardcolumn/BoardColumn.tsx","components/board/styles.ts","components/board/Board.tsx","components/mainblock/styles.ts","components/mainblock/MainComponent.tsx","components/loginpopup/styles.ts","components/loginpopup/LoginPopup.tsx","index.tsx"],"names":["Topbar","styled","div","TopbarName","Header","className","ColumnsContainer","ColumnNameInput","input","ColumnNameDiv","ColumnBorder","ColumnAddCardDiv","ButtonDiv","CardContainer","ColCard","CardComments","CardContent","styledComponentsTS","props","empty","EditCardButton","NameInput","PopupContent","PopupTitle","PopupDesc","CommentsArray","CommentsInputContainer","CommentsInput","CardPopupBack","CardPopup","height","width","ClosePopup","button","Popup","style","display","popupState","undefined","setPopupState","onClick","prevState","popupContent","UserComment","CommentInput","UserCommentDelete","CardComment","useState","nameState","setNameState","comment","content","nameValue","setNameValue","event","author","id","value","onChange","target","onBlur","changeCardComment","setCommentsArray","deleteCardComment","filter","key","toString","icon","faTimes","cardComments","Array","cardInfo","comments","length","cardCount","commentsArray","changeNamePopup","setChangeNamePopup","newCommentValue","setCommentValue","forEach","i","color","name","changeCardName","placeholder","desc","changeCardDecs","addCardComment","localStorage","getItem","concat","ColumnCard","card","setCardInfo","changeNameState","setChangeNameState","hover","setHover","pS","useEffect","saveCardState","index","onContextMenu","faEdit","faComment","deleteCard","BoardColumn","column","JSON","parse","cards","colCards","setCards","setName","nameInputState","setNameInputState","newCardState","setNewCardState","nameInput","setNameInput","cardInput","setCardInput","saveCardChanges","setItem","stringify","splice","type","onMouseOver","currentTarget","focus","saveName","push","saveNewCard","Board","MainComp","MainComponent","LoginPopup","initState","changeDisplayProperty","inputState","changeInputState","changeDisplayState","onKeyDown","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d9cd02d1.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Topbar = styled.div`\n    text-align: center;\n`\n\nexport const TopbarName = styled.div`\n    font-size: 2rem;\n    color: white;\n    line-height: 40px;\n`","import React from 'react';\nimport {Topbar, TopbarName} from \"./styles\";\n\nexport const Header: React.FC = () => {\n  return (\n    <Topbar className='topbar'>\n      <TopbarName>\n        <h6>\n          Trello\n        </h6>\n      </TopbarName>\n    </Topbar>\n  );\n}","import styled from \"styled-components\";\n\nexport const ColumnsContainer = styled.div`\n        height: 1000px;\n        padding: 10px 0 10px 0;\n        display: flex;\n        width: 100%;\n        justify-content: space-evenly;\n        background-color: #adadbd;\n`\n\nexport const ColumnNameInput = styled.input`\n        width: 220px;\n        margin: 0 0 5px 0;\n`\n\nexport const ColumnNameDiv = styled.div`\n        margin: 0 0 5px 0;\n        text-align: start;\n        text-indent: 10px;\n        width: 230px;\n        height: 25px;\n        line-height: 25px;\n        background: #8d8d8d;\n        color: white;\n        border-radius: 2px;\n`\n\nexport const ColumnBorder = styled.div`\n        padding: 10px;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        border-radius: 5px;\n        width: 230px;\n        height: fit-content;\n        background-color: #e6e6e6;\n        margin: 10px;    \n`\n\nexport const ColumnAddCardDiv = styled.div`\n        text-align: start;\n        text-indent: 10px;\n        width: 230px;\n        height: 18px;\n        font-size: 10px;\n        line-height: 20px;\n        background: white;\n        border-radius: 2px;\n        margin: 3px 0 0 0;\n        &:hover {\n           background: #dedede;\n        }\n`\n\nexport const ButtonDiv = styled.div`\n        display: flex;\n        width: 200px;\n        justify-content: space-around;\n`","import styledComponentsTS from 'styled-components-ts'\nimport styled from \"styled-components\";\n\nexport const CardContainer = styled.div`\n    width: 100%;\n    height: 100%;\n`\n\nexport const ColCard = styled.div`\n    border-radius: 5px;\n    background: white;\n    text-align: start;\n    width: 100%;\n    margin: 5px 0 5px 0;\n    text-indent: 10px;\n    line-height: 25px;\n`\n\nexport const CardComments = styled.div`\n    margin: 0 0 0 2px;\n    font-size: 7px;\n`\n\ninterface CardContentProps {\n  empty: boolean;\n}\n\nexport const CardContent = styledComponentsTS<CardContentProps>(styled.div)`\n    text-indent: 10px;\n    padding: ${props => props.empty ? '7px 0 7px 0' : '7px 0 0 0'};\n    font-size: 15px;\n    line-height: 15px;\n`\n\nexport const EditCardButton = styledComponentsTS<CardContentProps>(styled.div)`\n    margin: ${props => props.empty ? '-28px  0 0 200px' : '-20px  0 0 200px'};\n`\n\nexport const NameInput = styled.input`\n    width: 190px;\n    margin: -25px 0 5px 0;\n`\n\nexport const Comments = styled.div`\n    margin: 10px 0 0 0;\n    font-weight: bold;\n    line-height: 30px;\n`\n\nexport const CommentsInput = styled.input`\n    width: 220px;\n`\n\nexport const UserComment = styled.div`\n    width: 220px;\n    border: grey 1px solid;\n`","import styled from \"styled-components\";\nimport styledComponentsTS from \"styled-components-ts\";\n\nexport const PopupContent = styled.div`\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    text-align: center;\n`\n\nexport const PopupTitle = styled.div`\n    margin: 5px 0 0 0;\n    font-weight: bold;\n    line-height: 20px;\n`\n\nexport const PopupDesc = styled.input`\n    height: 50px;\n    width: 200px;\n    margin: 10px 0 10px 0;\n`\n\nexport const ColCard = styled.div`\n    border-radius: 5px;\n    background: white;\n    text-align: start;\n    width: 100%;\n    margin: 5px 0 5px 0;\n    text-indent: 10px;\n    line-height: 25px;\n`\n\ninterface CardContentProps {\n  empty: boolean;\n}\n\nexport const CardContent = styledComponentsTS<CardContentProps>(styled.div)`\n    text-indent: 10px;\n    padding: ${props => props.empty ? '7px 0 7px 0' : '7px 0 0 0'};\n    font-size: 15px;\n    line-height: 15px;\n`\n\nexport const NameInput = styled.input`\n    width: 190px;\n    margin: -25px 0 5px 0;\n`\n\nexport const CommentsArray = styled.div`\n    margin: 10px 0 0 0;\n    font-weight: bold;\n    line-height: 30px;\n`\n\nexport const CommentsInputContainer = styled.div`\n    display: flex;\n`\n\nexport const CommentsInput = styled.input`\n    width: 220px;\n`","import styled from \"styled-components\";\nimport styledComponentsTS from \"styled-components-ts\";\n\nexport const CardPopupBack = styled.div`\n    position: fixed;\n    left: 0;\n    top: 0;\n    height: 100%;\n    width: 100%;\n    background: rgba(0, 0, 0, 0.3);\n`\n\ninterface PopupProps {\n  width: number;\n  height: number;\n}\n\nexport const CardPopup = styledComponentsTS<PopupProps>(styled.div)`\n    position: fixed;\n    left: 0; \n    right: 0; \n    margin-left: auto; \n    margin-right: auto;\n    top: 65px;\n    height: ${props => props.height}px;\n    width: ${props => props.width}px;\n    background: white;\n    border-radius: 3px;\n`\n\ninterface ButtonProps {\n  width: number;\n}\n\nexport const ClosePopup = styledComponentsTS<ButtonProps>(styled.button)`\n    position: fixed;\n    margin: -10px 0 0 ${props => props.width - 10}px;\n    border-radius: 50%;\n    background: #ffffff;\n    border: #767676 1px solid;\n    height: 20px;\n    width: 20px;\n    color: #999999;\n`\n","import React from \"react\";\nimport {CardPopupBack} from \"./styles\";\nimport {CardPopup, ClosePopup} from \"./styles\";\n\ninterface Props {\n  width: number;\n  height: number;\n  popupState: boolean;\n  setPopupState?: (prevState: any) => void;\n  popupContent: object;\n}\n\nexport const Popup: React.FC<Props> = (props) => {\n  return (\n    <CardPopupBack style={{display: props.popupState ? \"block\" : \"none\"}}>\n      <CardPopup height={props.height} width={props.width}\n                 display={props.popupState}>{props.setPopupState !== undefined ?\n        <ClosePopup width={props.width} style={{display: props.popupState ? \"block\" : \"none\"}}\n                    onClick={() => props.setPopupState?.((prevState: any) => !prevState)}>x</ClosePopup> : null}{props.popupContent}\n      </CardPopup>\n    </CardPopupBack>\n  )\n}","import styled from \"styled-components\";\n\nexport const UserComment = styled.div`\n    margin: 3px;\n    width: 220px;\n    border: grey 1px solid;\n    border-radius: 2px;\n    &:hover {\n      background: #cbcaca;\n    }\n`\n\nexport const CommentInput = styled.input`\n    height: 30px;\n    width: 210px;\n`\n\nexport const UserCommentDelete = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: absolute;\n    margin: -30px 0 0 200px;\n    background: #cbcaca;\n    height: 20px;\n    width: 20px;\n    border-radius: 2px;\n    &:hover {\n      background: white;\n    }\n`","import React, {useState} from \"react\";\nimport {CommentInput, UserComment, UserCommentDelete} from \"./styles\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faTimes} from \"@fortawesome/free-solid-svg-icons\";\nimport {Comments} from \"../columnsContent\";\n\ninterface Props {\n  comment: Comments;\n  deleteCardComment: (key: number) => void;\n  setCommentsArray: (prevState: any) => void;\n  changeCardComment: (i: number, event: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nexport const CardComment: React.FC<Props> = (props) => {\n\n  const [nameState, setNameState] = useState(false);\n  const [nameValue, setNameValue] = useState(props.comment.content);\n\n  return (<div>\n    {nameState ? null : <UserComment onClick={event => setNameState(prevState => !prevState)}\n                                     key={props.comment.id}> {props.comment.author} : {nameValue}</UserComment>}\n    {nameState ?\n      <CommentInput value={nameValue} onChange={event => setNameValue(event.target.value)} onBlur={event => {\n        props.changeCardComment(props.comment.id, event);\n        setNameState(prevState => !prevState)\n      }}/> : null}\n    {nameState ? null : <UserCommentDelete onClick={() => {\n      props.setCommentsArray((prevState: any[]) => {\n        props.deleteCardComment(props.comment.id);\n        return prevState.filter(value => value.key !== props.comment.id.toString());\n      });\n    }}>\n      <FontAwesomeIcon icon={faTimes}/>\n    </UserCommentDelete>}\n  </div>);\n}","import React, {useState} from \"react\";\nimport {\n  CardContent,\n  CommentsArray,\n  CommentsInput, CommentsInputContainer,\n  NameInput,\n  PopupContent,\n  PopupDesc,\n  PopupTitle\n} from \"./styles\";\nimport {Popup} from \"../popup\";\nimport {Card, Comments} from \"../columnsContent\";\nimport {CardComment} from \"../comment\";\n\ninterface Props {\n  cardInfo: Card;\n  popupState: boolean;\n  // TODO : Figure out types\n  setPopupState: (prevState: any) => void;\n  changeCardName: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  changeCardDecs: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  changeCardComment: (i: number, event: React.ChangeEvent<HTMLInputElement>) => void;\n  addCardComment: (comment: Comments) => void;\n  deleteCardComment: (id: number) => void;\n}\n\nexport const CardPopup: React.FC<Props> = (props) => {\n\n  const cardComments: object[] = Array(props.cardInfo.comments.length);\n  let cardCount: number = cardComments.length - 1;\n\n  const [commentsArray, setCommentsArray] = useState(cardComments);\n  const [changeNamePopup, setChangeNamePopup] = useState(false);\n  const [newCommentValue, setCommentValue] = useState(\"\");\n\n  props.cardInfo.comments.forEach((value, i) => {\n    cardComments[i] = <CardComment setCommentsArray={setCommentsArray} changeCardComment={props.changeCardComment}\n                                   deleteCardComment={props.deleteCardComment} key={i} comment={value}/>;\n  });\n\n  return (\n    <Popup height={300} width={350} popupState={props.popupState} setPopupState={props.setPopupState} popupContent={\n      <PopupContent>\n        <CardContent onClick={() => {\n          setChangeNamePopup(prevState => !prevState);\n        }} empty={props.cardInfo.comments.length <= 0} style={{color: changeNamePopup ? \"white\" : \"grey\"}}>\n          {props.cardInfo.name}\n        </CardContent>\n        {changeNamePopup ? <NameInput value={props.cardInfo.name} onChange={props.changeCardName} onBlur={() => {\n          setChangeNamePopup(prevState => !prevState);\n        }} placeholder={\"Enter new name\"} style={{display: changeNamePopup ? \"block\" : \"none\"}}/> : null}\n        <PopupTitle>\n          Description\n        </PopupTitle>\n        <PopupDesc value={props.cardInfo.desc} onChange={props.changeCardDecs}/>\n        <PopupTitle>\n          Comments\n        </PopupTitle>\n        <CommentsInputContainer>\n          <CommentsInput value={newCommentValue} onChange={event => setCommentValue(event.target.value)}/>\n          <button onClick={() => {\n            cardCount++;\n            props.addCardComment({\n              id: cardCount,\n              author: localStorage.getItem(\"user\") as string,\n              content: newCommentValue\n            });\n            setCommentsArray(prevState => {\n              return prevState.concat(\n                <CardComment changeCardComment={props.changeCardComment} setCommentsArray={setCommentsArray}\n                             deleteCardComment={props.deleteCardComment} comment={{\n                  id: cardCount,\n                  author: localStorage.getItem(\"user\") as string,\n                  content: newCommentValue\n                }} key={cardCount}/>);\n            });\n          }} className={\"btn primary\"}>Send\n          </button>\n        </CommentsInputContainer>\n        <CommentsArray>\n          {commentsArray}\n        </CommentsArray>\n      </PopupContent>\n    }/>\n  )\n}","import React, {useEffect, useState} from \"react\";\nimport {\n  CardComments,\n  CardContainer,\n  CardContent,\n  ColCard,\n  NameInput,\n  EditCardButton\n} from \"./styles\";\nimport {Card, Comments} from \"../columnsContent\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faComment} from \"@fortawesome/free-solid-svg-icons/faComment\";\nimport {faEdit} from \"@fortawesome/free-solid-svg-icons/faEdit\";\nimport {CardPopup} from \"../cardpopup\";\nimport {faTimes} from \"@fortawesome/free-solid-svg-icons\";\n\ninterface Props {\n  card: Card;\n  index: number;\n  saveCardState: (card: Card, index: number) => void;\n  deleteCard: (i: number) => void;\n}\n\nexport const ColumnCard: React.FC<Props> = (props) => {\n\n  const [cardInfo, setCardInfo] = useState(props.card);\n  const [popupState, setPopupState] = useState(false);\n  const [changeNameState, setChangeNameState] = useState(false);\n  const [hover, setHover] = useState(false);\n\n  //TODO: Use another hook\n  useEffect(() => {\n    props.saveCardState(cardInfo, props.index);\n  });\n\n  function changeCardName(event: React.ChangeEvent<HTMLInputElement>) {\n    setCardInfo(pS => ({...pS, name: event.target.value}));\n  }\n\n  function changeCardComment(i: number, event: React.ChangeEvent<HTMLInputElement>) {\n    setCardInfo(pS => {\n      pS.comments.forEach(value => {\n        if (value.id === i) {\n          pS.comments[i].content = event.target.value;\n          return {...pS}\n        }\n      })\n      return {...pS}\n    });\n  }\n\n  function changeCardDecs(event: React.ChangeEvent<HTMLInputElement>) {\n    setCardInfo(pS => ({...pS, desc: event.target.value}));\n  }\n\n  function addCardComment(comment: Comments) {\n    setCardInfo(pS => ({...pS, comments: pS.comments.concat(comment)}));\n  }\n\n  function deleteCardComment(id: number) {\n    setCardInfo(pS => {\n      pS.comments = pS.comments.filter(value => value.id !== id);\n      return {...pS};\n    });\n  }\n\n  return (\n    <CardContainer>\n      <ColCard onContextMenu={event => {\n        setHover(prevState => !prevState)\n      }}>\n        <CardContent style={{color: changeNameState ? \"white\" : \"grey\"}} onClick={() => {\n          setPopupState(prevState => !prevState);\n        }} empty={cardInfo.comments.length === 0}>\n          {cardInfo.name}\n        </CardContent>\n        <EditCardButton onClick={() => {\n          setChangeNameState(prevState => !prevState);\n        }} empty={cardInfo.comments.length === 0}>\n          <FontAwesomeIcon icon={faEdit}/>\n        </EditCardButton>\n        {changeNameState ? <NameInput value={cardInfo.name} onChange={changeCardName} onBlur={() => {\n          setChangeNameState(prevState => !prevState);\n        }} placeholder={\"Enter new name\"} style={{display: changeNameState ? \"block\" : \"none\"}}/> : null}\n        {cardInfo.comments.length !== 0 ?\n          <CardComments>\n            <FontAwesomeIcon icon={faComment}/> : {cardInfo.comments.length}\n          </CardComments> : null}\n        {hover ? <CardComments onClick={() => props.deleteCard(props.index)}>\n          <FontAwesomeIcon icon={faTimes}/>\n        </CardComments> : null}\n      </ColCard>\n      <CardPopup popupState={popupState} setPopupState={setPopupState} cardInfo={cardInfo}\n                 changeCardName={changeCardName} changeCardComment={changeCardComment} changeCardDecs={changeCardDecs}\n                 deleteCardComment={deleteCardComment}\n                 addCardComment={addCardComment}/>\n    </CardContainer>\n  )\n}","import React, {useState} from \"react\";\nimport {ColumnsContainer, ColumnNameInput, ColumnBorder, ColumnNameDiv, ColumnAddCardDiv, ButtonDiv} from \"./styles\";\nimport {Card, ColumnsContent} from \"../columnsContent\";\nimport {ColumnCard} from \"../columncard\";\n\ninterface Props {\n  name: string;\n}\n\nexport const BoardColumn: React.FC<Props> = (props) => {\n\n  const column: ColumnsContent = JSON.parse(localStorage.getItem(props.name) as string);\n  const cards = Array(column.cards.length);\n\n  const [colCards, setCards] = useState(cards);\n  const [name, setName] = useState(column.name);\n  const [nameInputState, setNameInputState] = useState(false);\n  const [newCardState, setNewCardState] = useState(false);\n  const [nameInput, setNameInput] = useState(\"\");\n  const [cardInput, setCardInput] = useState(\"\");\n\n  column.cards.forEach((value, i) => {\n    cards[i] = <ColumnCard deleteCard={deleteCard} key={i} index={i} saveCardState={saveCardChanges} card={value}/>\n  });\n\n  function saveName(name: string): void {\n    column.name = name;\n    setName(column.name);\n    localStorage.setItem(props.name, JSON.stringify(column));\n  }\n\n  function saveNewCard(): void {\n    const card = {name: cardInput, author: localStorage.getItem(\"user\"), comments: [], desc: \"\"} as Card;\n    column.cards.push(card);\n    setCards(prevState => {\n      return prevState.concat(<ColumnCard deleteCard={deleteCard} index={colCards.length} saveCardState={saveCardChanges} card={card}\n                                          key={colCards.length}/>);\n    });\n    localStorage.setItem(props.name, JSON.stringify(column));\n  }\n\n  function saveCardChanges(card: Card, index: number): void {\n    column.cards[index] = card;\n    setCards(prevState => {\n      prevState[index] = <ColumnCard deleteCard={deleteCard} index={index} saveCardState={saveCardChanges} card={card} key={index}/>\n      return prevState;\n    });\n    localStorage.setItem(props.name, JSON.stringify(column));\n  }\n\n  function deleteCard(i: number) {\n    //add normal removal\n    setCards(prevState => {\n      prevState.splice(i, 1, null);\n      return [...prevState];\n    })\n    localStorage.setItem(props.name, JSON.stringify(column));\n  }\n\n  return (<ColumnsContainer>\n      <ColumnBorder>\n        {nameInputState ? null : <ColumnNameDiv\n          onClick={() => {\n            setNameInputState(prevState => !prevState);\n          }}>{name}</ColumnNameDiv>}\n        {nameInputState ? <ColumnNameInput value={nameInput} type=\"text\" onMouseOver={event => {\n          event.currentTarget.focus();\n        }} onChange={event => {\n          setNameInput(event.target.value);\n          saveName(event.target.value);\n        }} onBlur={() => {\n          setNameInputState(prevState => !prevState);\n          setNameInput(\"\");\n        }}/> : null}\n        {colCards}\n        {newCardState ? null : <ColumnAddCardDiv\n          onClick={() => {\n            setNewCardState(prevState => !prevState);\n          }}>\n          Add new card </ColumnAddCardDiv>}\n        {newCardState ? <ColumnNameInput onMouseOver={event => {\n          event.currentTarget.focus();\n        }} value={cardInput} onChange={event => {\n          setCardInput(event.target.value);\n        }} placeholder=\"Add new card\"/> : null}\n        {newCardState ? <ButtonDiv>\n          <button className=\"btn primary\" onClick={() => {\n            if (cardInput === \"\") return;\n            saveNewCard();\n            setCardInput(\"\");\n            setNewCardState(prevState => !prevState);\n          }}>\n            Add card\n          </button>\n          <button className=\"btn\" onClick={() => {\n            setNewCardState(prevState => !prevState);\n          }}>\n            Cancel\n          </button>\n        </ButtonDiv> : null}\n      </ColumnBorder>\n    </ColumnsContainer>\n  )\n}","import styled from \"styled-components\";\n\nexport const ColumnsContainer = styled.div`\n        height: 1000px;\n        padding: 10px 0 10px 0;\n        display: flex;\n        width: 100%;\n        justify-content: space-evenly;\n        background-color: #adadbd;\n    `\n","import React from 'react';\nimport {BoardColumn} from \"../boardcolumn\";\nimport {ColumnsContainer} from \"./styles\";\n\nexport const Board: React.FC = () => {\n  return (<ColumnsContainer>\n    <BoardColumn name={\"Column0\"}/>\n    <BoardColumn name={\"Column1\"}/>\n    <BoardColumn name={\"Column2\"}/>\n    <BoardColumn name={\"Column3\"}/>\n  </ColumnsContainer>)\n}","import styled from \"styled-components\";\n\nexport const MainComp = styled.div`\n  margin: 40px 0 0 0;\n`","import React from 'react';\nimport '../board/Board'\nimport {Board} from \"../board\";\nimport {MainComp} from \"./styles\";\n\nexport const MainComponent: React.FC = () => {\n  return (\n    <MainComp>\n      <Board/>\n    </MainComp>\n  )\n}","import styled from \"styled-components\";\n\nexport const PopupContent = styled.div`\n        width: 100%;\n        height: 100%;\n        text-align: center;\n        display: flex;\n        flex-direction: column;\n        justify-content: space-around;\n    `\n\n","import React, {useState} from \"react\";\nimport {Popup} from \"../popup\";\nimport {PopupContent} from \"./styles\";\n\ninterface Props {\n  initState?: boolean;\n}\n\nexport const LoginPopup: React.FC<Props> = (props) => {\n\n  const [display, changeDisplayProperty] = useState(props.initState ? props.initState : localStorage.getItem(\"user\") === null);\n  const [inputState, changeInputState] = useState(\"\");\n\n  function changeDisplayState(): void {\n    if (inputState === \"\") return;\n    localStorage.setItem(\"user\", inputState);\n    changeDisplayProperty(prevState => !prevState);\n  }\n\n  return (\n    <Popup height={300} width={850} popupState={display} popupContent={\n      <PopupContent onKeyDown={event => {\n        if (event.key === 'Enter') changeDisplayState()\n      }}>\n        <div>\n          <h3>Hi!</h3>\n          <p>Enter your name</p>\n        </div>\n        <div className=\"modal-body\">\n          <input type=\"text\" placeholder=\"Name\" value={inputState} onChange={event => {\n            changeInputState(event.target.value);\n          }}/>\n        </div>\n        <div className=\"modal-footer\">\n          <button onClick={changeDisplayState} className=\"btn primary\">\n            Done\n          </button>\n        </div>\n      </PopupContent>\n    }>\n    </Popup>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './css /bootstrap.css'\n\nimport {Header} from \"./components/header/\";\nimport {MainComponent} from \"./components/mainblock\";\nimport {LoginPopup} from \"./components/loginpopup\";\n\n// localStorage.clear()\n\nif (localStorage.getItem(\"Column0\") === null) {\n  localStorage.setItem(\"Column0\", \"{\\\"name\\\":\\\"TODO\\\",\\\"cards\\\":[]}\");\n  localStorage.setItem(\"Column1\", \"{\\\"name\\\":\\\"In Progress\\\",\\\"cards\\\":[]}\");\n  localStorage.setItem(\"Column2\", \"{\\\"name\\\":\\\"Testing\\\",\\\"cards\\\":[]}\");\n  localStorage.setItem(\"Column3\", \"{\\\"name\\\":\\\"Done\\\",\\\"cards\\\":[]}\");\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Header/>\n    <MainComponent/>\n    <LoginPopup/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}