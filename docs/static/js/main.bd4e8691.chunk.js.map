{"version":3,"sources":["components/Header/styles.ts","components/Header/Header.tsx","components/Board/styles.ts","components/Boardcolumn/styles.ts","components/Columncard/styles.ts","components/Cardpopup/styles.ts","components/Popup/styles.ts","components/Popup/Popup.tsx","components/Comment/styles.ts","components/Comment/CardComment.tsx","components/Cardpopup/CardPopup.tsx","components/Columncard/ColumnCard.tsx","components/Boardcolumn/BoardColumn.tsx","components/Board/Board.tsx","components/Mainblock/styles.ts","components/Loginpopup/styles.ts","components/Loginpopup/LoginPopup.tsx","components/Mainblock/MainComponent.tsx","index.tsx"],"names":["TopbarName","styled","div","Header","ColumnsContainer","ColumnNameInput","input","ColumnNameDiv","ColumnBorder","ColumnAddCardDiv","ButtonDiv","CardContainer","ColCard","CardComments","CardContent","styledComponentsTS","props","empty","EditCardButton","NameInput","PopupContent","PopupText","PopupDesc","textarea","PopupDescDiv","CardName","CommentsInput","CommentsBorder","CommentsInputButton","button","CommentsArray","CardPopupBack","CardPopup","height","width","ClosePopup","Popup","buttonPos","Number","slice","length","undefined","setPopupState","onClick","popupContent","UserComment","CommentInput","UserCommentDelete","CardComment","content","author","index","deleteCardComment","changeCardComment","useState","nameState","setNameState","nameValue","setNameValue","ps","value","onChange","event","target","onBlur","icon","faTimes","cardInfo","column","changeCardName","changeCardDecs","setCardsComments","name","setName","desc","decs","setDesc","comments","commentsArray","setCommentsArray","changeNamePopup","setChangeNamePopup","addCommentState","setAddCommentState","descState","setDescState","newCommentValue","setCommentValue","i","copy","elIndex","findIndex","v","id","ar","filter","handleEsc","keyCode","useEffect","window","addEventListener","removeEventListener","ev","trim","placeholder","c","localStorage","getItem","concat","map","ColumnCard","card","saveCardState","deleteCard","cardName","setCardName","cardDesc","setCardDesc","cardComments","setComments","popupState","changeNameState","setChangeNameState","hover","setHover","onContextMenu","e","preventDefault","prevState","faEdit","faComment","BoardColumn","columnName","JSON","parse","cards","colCards","setCards","nameInputState","setNameInputState","newCardState","setNewCardState","cardInput","setCardInput","store","setItem","stringify","saveCardChanges","type","onMouseOver","currentTarget","focus","className","Board","MainComp","LoginPopup","togglePopup","inputState","changeInputState","changeDisplayState","onKeyDown","key","MainComponent","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qdAEO,IAAMA,EAAaC,IAAOC,IAAV,KCCVC,EAAmB,WAC9B,OACE,cAACH,EAAD,UACE,2C,mSCJC,IAAMI,EAAmBH,IAAOC,IAAV,K,+yCCAtB,IAAMG,EAAkBJ,IAAOK,MAAV,KAKfC,EAAgBN,IAAOC,IAAV,KAYbM,EAAeP,IAAOC,IAAV,KAaZO,EAAmBR,IAAOC,IAAV,KAehBQ,EAAYT,IAAOC,IAAV,K,u0BC5Cf,IAAMS,EAAgBV,IAAOC,IAAV,KAKbU,EAAUX,IAAOC,IAAV,KAUPW,EAAeZ,IAAOC,IAAV,KASZY,EAAcC,IAAqCd,IAAOC,IAA5Ca,CAAH,KAET,SAAAC,GAAK,OAAIA,EAAMC,MAAQ,cAAgB,eAKzCC,EAAiBH,IAAqCd,IAAOC,IAA5Ca,CAAH,KACb,SAAAC,GAAK,OAAIA,EAAMC,MAAQ,mBAAqB,sBAG7CE,EAAYlB,IAAOK,MAAV,K,q/DCpCf,IAAMc,GAAenB,IAAOC,IAAV,MAMZmB,GAAYpB,IAAOC,IAAV,KAMToB,GAAYrB,IAAOsB,SAAV,KAUTC,GAAevB,IAAOsB,SAAV,KAoBZE,IATUxB,IAAOC,IAAV,KASID,IAAOC,IAAV,MAMRiB,GAAYlB,IAAOK,MAAV,KAKToB,GAAgBzB,IAAOsB,SAAV,KAUbI,GAAiB1B,IAAOC,IAAV,KAMd0B,GAAsB3B,IAAO4B,OAAV,KASnBC,GAAgB7B,IAAOC,IAAV,K,61BC7EnB,IAAM6B,GAAgB9B,IAAOC,IAAV,MAeb8B,GAAYjB,IAA+Bd,IAAOC,IAAtCa,CAAH,MAOV,SAAAC,GAAK,OAAIA,EAAMiB,UAChB,SAAAjB,GAAK,OAAIA,EAAMkB,SAGH,SAAAlB,GAAK,OAAIA,EAAMkB,SASzBC,GAAapB,IAAgCd,IAAO4B,OAAvCd,CAAH,MAED,SAAAC,GAAK,OAAIA,EAAMkB,SAOd,SAAAlB,GAAK,OAAIA,EAAMkB,SCpCzBE,GAAyB,SAACpB,GACrC,IAAMqB,EAAoBC,OAAOtB,EAAMkB,MAAMK,MAAM,EAAGvB,EAAMkB,MAAMM,OAAS,IAAM,GAEjF,OACE,cAACT,GAAD,UACE,eAAC,GAAD,CACEE,OAAQjB,EAAMiB,OACdC,MAAOlB,EAAMkB,MAFf,eAG2BO,IAAxBzB,EAAM0B,eAA+B,cAACP,GAAD,CACpCD,MAAOG,EACPM,QAAS,kCAAM3B,EAAM0B,qBAAZ,aAAM,OAAA1B,GAAsB,IAFD,eAKrCA,EAAM4B,mB,qyBCtBR,IAAMC,GAAc5C,IAAOC,IAAV,MAcX4C,GAAe7C,IAAOsB,SAAV,MASZwB,GAAoB9C,IAAOC,IAAV,M,SCZjB8C,GAA+B,SAAC,GAAsE,IAApEC,EAAmE,EAAnEA,QAASC,EAA0D,EAA1DA,OAAQC,EAAkD,EAAlDA,MAAOC,EAA2C,EAA3CA,kBAAmBC,EAAwB,EAAxBA,kBAAwB,EAE9EC,oBAAkB,GAF4D,mBAEzGC,EAFyG,KAE9FC,EAF8F,OAG9EF,mBAAiBL,GAH6D,mBAGzGQ,EAHyG,KAG9FC,EAH8F,KAKhH,OAAO,iCACHH,GAAa,eAACV,GAAD,CACbF,QAAS,kBAAMa,GAAa,SAAAG,GAAE,OAAKA,MADtB,UAGZT,EAHY,MAGDO,IADPN,GAGNI,GACC,gCACE,cAACT,GAAD,CACEc,MAAOH,EACPI,SAAU,SAAAC,GAAK,OAAIJ,EAAaI,EAAMC,OAAOH,QAC7CI,OAAQ,SAAAF,GACNT,EAAkBF,EAAOW,GACzBN,GAAa,SAAAG,GAAE,OAAKA,QAExB,cAACZ,GAAD,CAAmBJ,QAAS,WAC1BS,EAAkBD,IADpB,SAGE,cAAC,IAAD,CAAiBc,KAAMC,gBCrBpBlC,GAA6B,SAAC,GAA2F,IAAzFmC,EAAwF,EAAxFA,SAAUC,EAA8E,EAA9EA,OAAQ1B,EAAsE,EAAtEA,cAAe2B,EAAuD,EAAvDA,eAAgBC,EAAuC,EAAvCA,eAAgBC,EAAuB,EAAvBA,iBAAuB,EAE3GjB,mBAAiBa,EAASK,MAFiF,mBAE5HA,EAF4H,KAEtHC,EAFsH,OAG3GnB,mBAAiBa,EAASO,MAHiF,mBAG5HC,EAH4H,KAGtHC,EAHsH,OAIzFtB,mBAAqBa,EAASU,UAJ2D,mBAI5HC,EAJ4H,KAI7GC,EAJ6G,OAKrFzB,oBAAkB,GALmE,mBAK5H0B,EAL4H,KAK3GC,EAL2G,OAMrF3B,oBAAkB,GANmE,mBAM5H4B,EAN4H,KAM3GC,EAN2G,OAOjG7B,oBAAkB,GAP+E,mBAO5H8B,EAP4H,KAOjHC,EAPiH,OAQxF/B,mBAAiB,IARuE,mBAQ5HgC,EAR4H,KAQ3GC,EAR2G,KAUnI,SAASlC,EAAkBmC,EAAW1B,GACpC,IAAMb,EAAkBa,EAAMC,OAAOH,MAC/B6B,EAAgB,YAAOX,GACvBY,EAAkBD,EAAKE,WAAU,SAAAC,GAAC,OAAIA,EAAEC,KAAOL,KACrDC,EAAKC,GAAW,CAAEG,GAAIL,EAAGtC,OAAQuC,EAAKC,GAASxC,OAAQD,QAASA,GAChE8B,EAAiBU,GACjBlB,EAAiBkB,GAGnB,SAASrC,EAAkBoC,GACzB,IAAMM,EAAiBhB,EAAciB,QAAO,SAAAH,GAAC,OAAIA,EAAEC,KAAOL,KAC1DT,EAAiBe,GACjBvB,EAAiBuB,GAuBnB,SAASE,EAAUlC,GACK,KAAlBA,EAAMmC,SAAgBvD,GAAc,GAQ1C,OALAwD,qBAAU,WAER,OADAC,OAAOC,iBAAiB,UAAWJ,GAC5B,WAAQG,OAAOE,oBAAoB,UAAWL,OAGhD,cAAC,GAAD,CAAO/D,OAAQ,cAAeC,MAAO,QAASQ,cAAeA,EAClEE,aACE,eAACxB,GAAD,YACI4D,GAAmB,cAACvD,GAAD,CACnBkB,QAAS,kBAAMsC,GAAmB,SAAAtB,GAAE,OAAKA,MADtB,SAElBa,IAEFQ,GAAmB,cAAC,GAAD,CAClBpB,MAAOY,EACPX,SAtCR,SAAoByC,GAClB,IAAMV,EAAYU,EAAGvC,OAAOH,MACX,KAAbgC,EAAEW,SACNlC,EAAeuB,GACfnB,EAAQmB,KAmCF5B,OAAQ,kBAAMiB,GAAmB,SAAAtB,GAAE,OAAKA,QAE1C,eAACtC,GAAD,yBACc+C,KAEd,eAAC/C,GAAD,sBACW8C,EAASjB,UAEpB,cAAC7B,GAAD,2BAGE+D,GAAa,cAAC5D,GAAD,CAAcmB,QAAS,kBAAM0C,GAAa,SAAA1B,GAAE,OAAKA,MAAjD,SACZgB,IAEFS,GAAa,cAAC9D,GAAD,CACZsC,MAAOe,EACPX,OAAQ,WAAQqB,GAAa,SAAA1B,GAAE,OAAKA,MACpCE,SAAU,SAAAyC,GACR,IAAMV,EAAYU,EAAGvC,OAAOH,MAC5BgB,EAAQgB,GACRtB,EAAesB,MAEnB,cAACvE,GAAD,uBAGA,eAACM,GAAD,WACE,cAACD,GAAD,CACEiB,QAAS,kBAAMwC,GAAmB,IAClCqB,YAAa,oBACb5C,MAAO0B,EACPzB,SAAU,SAAAC,GAAK,OAAIyB,EAAgBzB,EAAMC,OAAOH,UAEjDsB,GAAmB,cAACtD,GAAD,CAAqBe,QAhEjD,WAEE,GADAwC,GAAmB,GACY,KAA3BG,EAAgBiB,OAApB,CACA,IAAME,EAAc,CAClBZ,GAAIf,EAActC,OAClBU,OAAQwD,aAAaC,QAAQ,QAC7B1D,QAASqC,GAELQ,EAAiBhB,EAAc8B,OAAOH,GAC5C1B,EAAiBe,GACjBvB,EAAiBuB,KAsDS,qBAItB,cAAChE,GAAD,UACGgD,EAAc+B,KAAI,gBAAGhB,EAAH,EAAGA,GAAI3C,EAAP,EAAOA,OAAQD,EAAf,EAAeA,QAAf,OAA6B,cAAC,GAAD,CAC9CE,MAAO0C,EAEP3C,OAAQA,EACRD,QAASA,EACTI,kBAAmBA,EACnBD,kBAAmBA,GAJdyC,cC/FJiB,GAA8B,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,KAAM3C,EAAwC,EAAxCA,OAAQ4C,EAAgC,EAAhCA,cAAeC,EAAiB,EAAjBA,WACjEpB,EAAqCkB,EAArClB,GAAIrB,EAAiCuC,EAAjCvC,KAAMtB,EAA2B6D,EAA3B7D,OAAQwB,EAAmBqC,EAAnBrC,KAAMG,EAAakC,EAAblC,SAD0D,EAG1DvB,mBAAiBkB,GAHyC,mBAGnF0C,EAHmF,KAGzEC,EAHyE,OAI1D7D,mBAAiBoB,GAJyC,mBAInF0C,EAJmF,KAIzEC,EAJyE,OAKtD/D,mBAAqBuB,GALiC,mBAKnFyC,EALmF,KAKrEC,EALqE,OAMtDjE,oBAAkB,GANoC,mBAMnFkE,EANmF,KAMvE9E,EANuE,OAO5CY,oBAAkB,GAP0B,mBAOnFmE,EAPmF,KAOlEC,EAPkE,OAQhEpE,oBAAkB,GAR8C,mBAQnFqE,EARmF,KAQ5EC,EAR4E,KAgB1F,OANA1B,qBAAU,WAER,OADAc,EAAc,CAAEnB,GAAIA,EAAIrB,KAAM0C,EAAUhE,OAAQA,EAAQwB,KAAM0C,EAAUvC,SAAUyC,GAAgBzB,GAC3F,eAEN,CAACA,EAAIqB,EAAUhE,EAAQkE,EAAUE,EAAcN,IAE3C,eAACrG,EAAD,WACL,eAACC,EAAD,CAASiH,cAAe,SAAAC,GACtBA,EAAEC,iBACFH,GAAS,SAAAI,GAAS,OAAKA,MAFzB,WAIIP,GAAmB,cAAC3G,EAAD,CACnB6B,QAAS,WAAQD,GAAc,SAAAsF,GAAS,OAAKA,MAC7C/G,MAA+B,IAAxBqG,EAAa9E,OAFD,SAGlB0E,IAEFO,GAAmB,cAACtG,EAAD,CAClByC,MAAOsD,EACPrD,SAAU,SAAAyC,GACR,IAAMV,EAAYU,EAAGvC,OAAOH,MACX,KAAbgC,EAAEW,QACNY,EAAYvB,IAEd5B,OAAQ,kBAAM0D,GAAmB,SAAAM,GAAS,OAAKA,QACjD,cAAC9G,EAAD,CACEyB,QAAS,kBAAM+E,GAAmB,SAAAM,GAAS,OAAKA,MAChD/G,MAA+B,IAAxBqG,EAAa9E,OAFtB,SAGE,cAAC,IAAD,CAAiByB,KAAMgE,aAEA,IAAxBX,EAAa9E,QAAgB,eAAC3B,EAAD,WAC5B,cAAC,IAAD,CAAiBoD,KAAMiE,cADK,MACYZ,EAAa9E,UAEtDmF,GAAS,cAAC9G,EAAD,CAAc8B,QAAS,kBAAMsE,EAAWpB,IAAxC,SACR,cAAC,IAAD,CAAiB5B,KAAMC,YAG1BsD,GAAc,cAAC,GAAD,CACb9E,cAAeA,EACfyB,SAAU,CAAE0B,GAAIA,EAAIrB,KAAM0C,EAAUhE,OAAQA,EAAQwB,KAAM0C,EAAUvC,SAAUyC,GAC9ElD,OAAQA,EACRC,eAAgB8C,EAChB7C,eAAgB+C,EAChB9C,iBAAkBgD,QClEXY,GAA+B,SAACnH,GAC3C,IAAMoH,EAAqBpH,EAAMwD,KAE3BJ,EAAyBiE,KAAKC,MAAM5B,aAAaC,QAAQyB,IAHV,EAKxB9E,mBAAiBc,EAAOmE,OALA,mBAK9CC,EAL8C,KAKpCC,EALoC,OAM7BnF,mBAAiBc,EAAOI,MANK,mBAM9CA,EAN8C,KAMxCC,EANwC,OAOTnB,oBAAkB,GAPT,mBAO9CoF,EAP8C,KAO9BC,EAP8B,OAQbrF,oBAAkB,GARL,mBAQ9CsF,EAR8C,KAQhCC,EARgC,OASnBvF,mBAAiB,IATE,mBAS9CwF,EAT8C,KASnCC,EATmC,KAWrD,SAASC,EAAMxE,EAAcgE,GAC3B9B,aAAauC,QAAQb,EAAYC,KAAKa,UAAU,CAAE1E,KAAMA,EAAM+D,MAAOC,KAyBvE,SAASW,EAAgBpC,EAAY5D,GACnCsF,GAAS,SAAA9E,GAGP,OAFAA,EAAGA,EAAGgC,WAAU,SAAAC,GAAC,OAAIA,EAAEC,KAAO1C,MAAU4D,EACxCiC,EAAMxE,EAAMb,GACLA,KAIX,SAASsD,EAAWzB,GAClB,IAAM+C,EAAgBC,EAASzC,QAAO,SAAAnC,GAAK,OAAIA,EAAMiC,KAAOL,KAC5DiD,EAASF,GACTS,EAAMxE,EAAM+D,GAGd,OAAO,eAAC/H,EAAD,YACHkI,GAAkB,cAACnI,EAAD,CAClBoC,QAAS,kBAAMgG,GAAkB,SAAAX,GAAS,OAAKA,MAD7B,SAEjBxD,IAEFkE,GAAkB,cAACrI,EAAD,CACjBuD,MAAOY,EACP4E,KAAK,OACLC,YAAa,SAAAvF,GACXA,EAAMwF,cAAcC,SAEtB1F,SA/CJ,SAAkBC,GAChB,IAAM8B,EAAI9B,EAAMC,OAAOH,MACvBa,EAAQmB,GACRoD,EAAMpD,EAAG4C,IA6CPxE,OAAQ,WACN2E,GAAkB,SAAAX,GAAS,OAAKA,QAGnCQ,EAAS3B,KAAI,SAACE,GAAD,OAAU,cAAC,GAAD,CACtB3C,OAAQI,EACRuC,KAAMA,EAENE,WAAYA,EACZD,cAAemC,GAFVpC,EAAKlB,QAIV+C,GAAgB,cAACnI,EAAD,CAAkBkC,QAAS,kBAAMkG,GAAgB,SAAAb,GAAS,OAAKA,MAA/D,0BAGjBY,GAAgB,cAACvI,EAAD,CACfgJ,YAAa,SAACvF,GAAD,OAAWA,EAAMwF,cAAcC,SAC5C3F,MAAOkF,EACPjF,SAAU,SAAAC,GACRiF,EAAajF,EAAMC,OAAOH,QACzB4C,YAAY,iBAChBoC,GAAgB,eAAClI,EAAD,WACf,wBAAQ8I,UAAU,cAAc7G,QA/DpC,WACE,GAAyB,KAArBmG,EAAUvC,OAAd,CACA,IAAMQ,EAAa,CACjBlB,GAAI2C,EAAShG,OACbgC,KAAMsE,EACN5F,OAAQwD,aAAaC,QAAQ,QAC7B9B,SAAU,GACVH,KAAM,IAERqE,EAAa,IACb,IAAMR,EAAgBC,EAAS5B,OAAOG,GACtC0B,EAASF,GACTM,GAAgB,SAAAb,GAAS,OAAKA,KAC9BgB,EAAMxE,EAAM+D,KAkDV,sBAGA,wBAAQiB,UAAU,MAAM7G,QAAS,WAC/BkG,GAAgB,SAAAb,GAAS,OAAKA,MADhC,2BC5FOyB,GAAkB,WAC7B,OAAO,eAACrJ,EAAD,WACL,cAAC,GAAD,CAAaoE,KAAM,YACnB,cAAC,GAAD,CAAaA,KAAM,YACnB,cAAC,GAAD,CAAaA,KAAM,YACnB,cAAC,GAAD,CAAaA,KAAM,gB,gGCPhB,IAAMkF,GAAWzJ,IAAOC,IAAV,M,wPCAd,IAAMkB,GAAenB,IAAOC,IAAV,MCMZyJ,GAA8B,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAAkB,EAEvBtG,mBAAS,IAFc,mBAEvDuG,EAFuD,KAE3CC,EAF2C,KAI9D,SAASC,IACmB,KAAtBF,EAAWtD,SACfqD,GAAY,GACZlD,aAAauC,QAAQ,OAAQY,IAG/B,OAAO,cAAC,GAAD,CAAO5H,OAAQ,QAASC,MAAO,QAASU,aAC7C,eAAC,GAAD,CAAcoH,UAAW,SAAAlG,GACL,UAAdA,EAAMmG,KAAiBF,KAD7B,UAGE,gCACE,qCACA,mDAEF,qBAAKP,UAAU,aAAf,SACE,uBAAOJ,KAAK,OAAO5C,YAAY,OAAO5C,MAAOiG,EAAYhG,SAAU,SAAAC,GACjEgG,EAAiBhG,EAAMC,OAAOH,YAGlC,qBAAK4F,UAAU,eAAf,SACE,wBAAQ7G,QAASoH,EAAoBP,UAAU,cAA/C,0BCzBKU,GAA0B,WAAO,IAAD,EAEP5G,mBAAmD,OAAjCoD,aAAaC,QAAQ,SAFhC,mBAEpCa,EAFoC,KAExB9E,EAFwB,KAI3C,OACE,eAACgH,GAAD,WACE,cAAC,GAAD,IACClC,GAAc,cAAC,GAAD,CAAYoC,YAAalH,QCJN,OAApCgE,aAAaC,QAAQ,aACvBD,aAAauC,QAAQ,UAAW,8BAChCvC,aAAauC,QAAQ,UAAW,qCAChCvC,aAAauC,QAAQ,UAAW,iCAChCvC,aAAauC,QAAQ,UAAW,+BAGlCkB,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAAC,EAAD,IACA,cAAC,GAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.bd4e8691.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const TopbarName = styled.div`\n    top:0;\n    position: fixed;\n    width: 100%;\n    text-align: center;\n    font-size: 2rem;\n    color: white;\n    line-height: 20px;\n    background-color: grey;\n    z-index: -1;\n`","import React from 'react';\nimport { TopbarName } from \"./styles\";\n\nexport const Header: React.FC = () => {\n  return (\n    <TopbarName>\n      <h6>\n        Trello\n        </h6>\n    </TopbarName>\n  );\n}","import styled from \"styled-components\";\n\nexport const ColumnsContainer = styled.div`\n    padding: 10px 0 10px 0;\n    display: flex;\n    width: 100%;\n    justify-content: space-evenly;\n    background-color: #adadbd;\n    @media (max-width: 1100px) {\n            justify-content: start;\n    }\n`","import styled from \"styled-components\";\n\nexport const ColumnNameInput = styled.input`\n        width: 220px;\n        margin: 0 0 5px 0;\n`\n\nexport const ColumnNameDiv = styled.div`\n        margin: 0 0 5px 0;\n        text-align: start;\n        text-indent: 10px;\n        width: 230px;\n        height: 25px;\n        line-height: 25px;\n        background: #8d8d8d;\n        color: white;\n        border-radius: 2px;\n`\n\nexport const ColumnBorder = styled.div`\n        padding: 10px;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        border-radius: 5px;\n        width: 230px;\n        height: fit-content;\n        background-color: #e6e6e6;\n        margin: 10px;    \n`\n\nexport const ColumnAddCardDiv = styled.div`\n        text-align: start;\n        text-indent: 10px;\n        width: 230px;\n        height: 18px;\n        font-size: 10px;\n        line-height: 20px;\n        background: white;\n        border-radius: 2px;\n        margin: 3px 0 0 0;\n        &:hover {\n           background: #dedede;\n        }\n`\n\nexport const ButtonDiv = styled.div`\n        display: flex;\n        width: 200px;\n        justify-content: space-around;\n`","import styledComponentsTS from 'styled-components-ts'\nimport styled from \"styled-components\";\n\nexport const CardContainer = styled.div`\n    width: 100%;\n    height: 100%;\n`\n\nexport const ColCard = styled.div`\n    border-radius: 5px;\n    background: white;\n    text-align: start;\n    width: 100%;\n    margin: 5px 0 5px 0;\n    text-indent: 10px;\n    line-height: 25px;\n`\n\nexport const CardComments = styled.div`\n    margin: 0 0 0 2px;\n    font-size: 7px;\n`\n\ninterface CardContentProps {\n  empty: boolean;\n}\n\nexport const CardContent = styledComponentsTS<CardContentProps>(styled.div)`\n    text-indent: 10px;\n    padding: ${props => props.empty ? '7px 0 7px 0' : '7px 0 0 0'};\n    font-size: 15px;\n    line-height: 15px;\n`\n\nexport const EditCardButton = styledComponentsTS<CardContentProps>(styled.div)`\n    margin: ${props => props.empty ? '-28px  0 0 200px' : '-20px  0 0 200px'};\n`\n\nexport const NameInput = styled.input`\n    width: 170px;\n    margin: 3px 0 0 0;\n`","import styled from \"styled-components\";\n\nexport const PopupContent = styled.div`\n    width: 100%;\n    height: 100%; \n    padding: 30px\n`\n\nexport const PopupText = styled.div`\n    margin: 5px 0 0 0;\n    font-weight: bold;\n    line-height: 20px;\n`\n\nexport const PopupDesc = styled.textarea`\n    height: 50px;\n    width: 85.5%;\n    margin: 10px 0 10px 0px;\n    border-radius: 2px;\n    border: 0.2px solid grey;\n    overflow-wrap: break-word;\n    resize: none;\n    overflow: hidden;\n`\nexport const PopupDescDiv = styled.textarea`\n    height: 50px;\n    width: 85.5%;\n    margin: 10px 0 10px 0px;\n    border-radius: 2px;\n    border: 0.2px solid grey;\n    overflow-wrap: break-word;\n    resize: none;\n    overflow: hidden;\n`\n\nexport const ColCard = styled.div`\n    border-radius: 5px;\n    background: white;\n    text-align: start;\n    width: 100%;\n    margin: 5px 0 5px 0;\n    text-indent: 10px;\n    line-height: 25px;\n`\nexport const CardName = styled.div`\n    margin: 0 0 10px 0;\n    font-size: 22px;\n    line-height: 15px;\n`\n\nexport const NameInput = styled.input`\n    width: 190px;\n    margin: -25px 0 5px 0;\n`\n\nexport const CommentsInput = styled.textarea`\n    width: 90%;\n    margin: 5px;\n    border-radius: 2px;\n    border: 0;\n    overflow-wrap: break-word;\n    resize: none;\n    overflow: hidden;\n`\n\nexport const CommentsBorder = styled.div`\n    width: 86%;\n    border: 0.2px grey solid;\n    border-radius: 2px\n`\n\nexport const CommentsInputButton = styled.button`\n    height: 30px;\n    color: grey;\n    background-color: white;\n    border-radius: 2px;\n    width: 100px;\n    border: 0;\n`\n\nexport const CommentsArray = styled.div`\n    margin: 10px 0 0 0;\n    width: 85%;\n    font-weight: bold;\n`","import styled from \"styled-components\";\nimport styledComponentsTS from \"styled-components-ts\";\n\nexport const CardPopupBack = styled.div`\n  position: fixed;\n  left: 0;\n  top: 0;\n  height:  100%;\n  width: 100%;\n  background: rgba(0, 0, 0, 0.3);\n  overflow-x: hidden;\n`\n\ninterface PopupProps {\n  width: string;\n  height: string;\n}\n\nexport const CardPopup = styledComponentsTS<PopupProps>(styled.div)`\n  position: absolute;\n  left: 0; \n  right: 0; \n  margin-left: auto; \n  margin-right: auto;\n  top: 35px;\n  height: ${props => props.height};\n  width: ${props => props.width};\n  background: white;\n  border-radius: 3px;\n  @media (max-width: ${props => props.width}) {\n    width : 90%\n  }\n`\n\ninterface ButtonProps {\n  width: number;\n}\n\nexport const ClosePopup = styledComponentsTS<ButtonProps>(styled.button)`\n  position: absolute;\n  margin: -10px 0 0 ${props => props.width}px;\n  border-radius: 50%;\n  background: #ffffff;\n  border: #767676 1px solid;\n  height: 20px;\n  width: 20px;\n  color: #999999;\n  @media (max-width: ${props => props.width}px) {\n    position: fixed;\n    top: 20px;\n    right 5px;\n  }\n`\n","import React from \"react\";\nimport { CardPopupBack } from \"./styles\";\nimport { CardPopup, ClosePopup } from \"./styles\";\n\ninterface Props {\n  width: string;\n  height: string;\n  setPopupState?: (state: boolean) => void;\n  popupContent: object;\n}\n\nexport const Popup: React.FC<Props> = (props) => {\n  const buttonPos: number = Number(props.width.slice(0, props.width.length - 2)) - 10;\n\n  return (\n    <CardPopupBack>\n      <CardPopup\n        height={props.height}\n        width={props.width}>\n        {props.setPopupState !== undefined && <ClosePopup\n          width={buttonPos}\n          onClick={() => props.setPopupState?.(false)}>\n          x\n        </ClosePopup>}\n        {props.popupContent}\n      </CardPopup>\n    </CardPopupBack>\n  )\n}","import styled from \"styled-components\";\n\nexport const UserComment = styled.div`\n  padding: 2%;\n  word-wrap: break-word;\n  text-indent: 10px;\n  margin: 3px 0 0 0;\n  line-height: 30px;\n  width: 97%;\n  border: grey 1px solid;\n  border-radius: 2px;\n  &:hover {\n    background: #cbcaca;\n  }\n`\n\nexport const CommentInput = styled.textarea`\n  margin: 3px 0 0 0 ;\n  border: grey 1px solid;\n  border-radius: 2px;\n  line-height: 30px;\n  width: 100%;\n  resize: none;\n`\n\nexport const UserCommentDelete = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  margin: -28px 0 0 79%;\n  background: #cbcaca;\n  height: 20px;\n  width: 20px;\n  border-radius: 2px;\n  &:hover {\n    background: white;\n  }\n`","import React, { useState } from \"react\";\nimport { CommentInput, UserComment, UserCommentDelete } from \"./styles\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface Props {\n  content: string;\n  author: string;\n  index: number;\n  deleteCardComment: (key: number) => void;\n  changeCardComment: (i: number, event: React.ChangeEvent<HTMLTextAreaElement>) => void;\n}\n\nexport const CardComment: React.FC<Props> = ({ content, author, index, deleteCardComment, changeCardComment }) => {\n\n  const [nameState, setNameState] = useState<boolean>(false);\n  const [nameValue, setNameValue] = useState<string>(content);\n\n  return <div>\n    {!nameState && <UserComment\n      onClick={() => setNameState(ps => !ps)}\n      key={index}>\n      {author} : {nameValue}\n    </UserComment>}\n    {nameState &&\n      <div>\n        <CommentInput\n          value={nameValue}\n          onChange={event => setNameValue(event.target.value)}\n          onBlur={event => {\n            changeCardComment(index, event);\n            setNameState(ps => !ps)\n          }} />\n        <UserCommentDelete onClick={() => {\n          deleteCardComment(index);\n        }}>\n          <FontAwesomeIcon icon={faTimes} />\n        </UserCommentDelete>\n      </div>}\n  </div>\n}","import React, { useEffect, useState } from \"react\";\nimport { CardName, CommentsArray, CommentsBorder, PopupDescDiv, CommentsInput, CommentsInputButton, NameInput, PopupContent, PopupDesc, PopupText } from \"./styles\";\nimport { Popup } from \"../Popup\";\nimport { Card, Comments } from \"../../utils/ColumnsContent\";\nimport { CardComment } from \"../Comment\";\n\ninterface Props {\n  cardInfo: Card;\n  column: string;\n  setPopupState: (prevState: boolean) => void;\n  changeCardName: (v: string) => void;\n  changeCardDecs: (v: string) => void;\n  setCardsComments: (comms: Comments[]) => void;\n}\n\nexport const CardPopup: React.FC<Props> = ({ cardInfo, column, setPopupState, changeCardName, changeCardDecs, setCardsComments }) => {\n\n  const [name, setName] = useState<string>(cardInfo.name);\n  const [decs, setDesc] = useState<string>(cardInfo.desc);\n  const [commentsArray, setCommentsArray] = useState<Comments[]>(cardInfo.comments);\n  const [changeNamePopup, setChangeNamePopup] = useState<boolean>(false);\n  const [addCommentState, setAddCommentState] = useState<boolean>(false);\n  const [descState, setDescState] = useState<boolean>(false);\n  const [newCommentValue, setCommentValue] = useState<string>(\"\");\n\n  function changeCardComment(i: number, event: React.ChangeEvent<HTMLTextAreaElement>) {\n    const content: string = event.target.value;\n    const copy: Comments[] = [...commentsArray];\n    const elIndex: number = copy.findIndex(v => v.id === i);\n    copy[elIndex] = { id: i, author: copy[elIndex].author, content: content };\n    setCommentsArray(copy);\n    setCardsComments(copy);\n  }\n\n  function deleteCardComment(i: number) {\n    const ar: Comments[] = commentsArray.filter(v => v.id !== i);\n    setCommentsArray(ar);\n    setCardsComments(ar);\n  }\n\n  function changeName(ev: React.ChangeEvent<HTMLInputElement>) {\n    const v: string = ev.target.value;\n    if (v.trim() === \"\") return\n    changeCardName(v);\n    setName(v);\n  }\n\n  function saveComment() {\n    setAddCommentState(false);\n    if (newCommentValue.trim() === \"\") return;\n    const c: Comments = {\n      id: commentsArray.length,\n      author: localStorage.getItem(\"user\") as string,\n      content: newCommentValue\n    };\n    const ar: Comments[] = commentsArray.concat(c);\n    setCommentsArray(ar);\n    setCardsComments(ar);\n  }\n\n  function handleEsc(event: { keyCode: number; }): void {\n    if (event.keyCode === 27) setPopupState(false);\n  }\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleEsc);\n    return () => { window.removeEventListener('keydown', handleEsc); };\n  });\n\n  return <Popup height={\"fit-content\"} width={\"768px\"} setPopupState={setPopupState}\n    popupContent={\n      <PopupContent>\n        {!changeNamePopup && <CardName\n          onClick={() => setChangeNamePopup(ps => !ps)}>\n          {name}\n        </CardName>}\n        {changeNamePopup && <NameInput\n          value={name}\n          onChange={changeName}\n          onBlur={() => setChangeNamePopup(ps => !ps)}\n        />}\n        <PopupText>\n          In column: {column}\n        </PopupText>\n        <PopupText>\n          Author: {cardInfo.author}\n        </PopupText>\n        <PopupText>\n          Description\n        </PopupText>\n        {!descState && <PopupDescDiv onClick={() => setDescState(ps => !ps)}>\n          {decs}\n        </PopupDescDiv>}\n        {descState && <PopupDesc\n          value={decs}\n          onBlur={() => { setDescState(ps => !ps) }}\n          onChange={ev => {\n            const v: string = ev.target.value;\n            setDesc(v);\n            changeCardDecs(v);\n          }} />}\n        <PopupText>\n          Comments\n        </PopupText>\n        <CommentsBorder>\n          <CommentsInput\n            onClick={() => setAddCommentState(true)}\n            placeholder={\"Write new comment\"}\n            value={newCommentValue}\n            onChange={event => setCommentValue(event.target.value)}\n          />\n          {addCommentState && <CommentsInputButton onClick={saveComment}>\n            Save\n          </CommentsInputButton>}\n        </CommentsBorder>\n        <CommentsArray>\n          {commentsArray.map(({ id, author, content }) => <CardComment\n            index={id}\n            key={id}\n            author={author}\n            content={content}\n            changeCardComment={changeCardComment}\n            deleteCardComment={deleteCardComment} />)}\n        </CommentsArray>\n      </PopupContent>\n    } />\n}","import React, { useEffect, useState } from \"react\";\nimport {\n  CardComments,\n  CardContainer,\n  CardContent,\n  ColCard,\n  NameInput,\n  EditCardButton\n} from \"./styles\";\nimport { Card, Comments } from \"../../utils/ColumnsContent\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faComment } from \"@fortawesome/free-solid-svg-icons/faComment\";\nimport { faEdit } from \"@fortawesome/free-solid-svg-icons/faEdit\";\nimport { CardPopup } from \"../Cardpopup\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface Props {\n  card: Card;\n  column: string;\n  saveCardState: (card: Card, index: number) => void;\n  deleteCard: (i: number) => void;\n}\n\nexport const ColumnCard: React.FC<Props> = ({ card, column, saveCardState, deleteCard }) => {\n  const { id, name, author, desc, comments } = card;\n\n  const [cardName, setCardName] = useState<string>(name);\n  const [cardDesc, setCardDesc] = useState<string>(desc);\n  const [cardComments, setComments] = useState<Comments[]>(comments);\n  const [popupState, setPopupState] = useState<boolean>(false);\n  const [changeNameState, setChangeNameState] = useState<boolean>(false);\n  const [hover, setHover] = useState<boolean>(false);\n\n  useEffect(() => {\n    saveCardState({ id: id, name: cardName, author: author, desc: cardDesc, comments: cardComments }, id);\n    return () => {\n    }\n  }, [id, cardName, author, cardDesc, cardComments, saveCardState]);\n\n  return <CardContainer>\n    <ColCard onContextMenu={e => {\n      e.preventDefault();\n      setHover(prevState => !prevState);\n    }}>\n      {!changeNameState && <CardContent\n        onClick={() => { setPopupState(prevState => !prevState); }}\n        empty={cardComments.length === 0}>\n        {cardName}\n      </CardContent>}\n      {changeNameState && <NameInput\n        value={cardName}\n        onChange={ev => {\n          const v: string = ev.target.value;\n          if (v.trim() === \"\") return;\n          setCardName(v);\n        }}\n        onBlur={() => setChangeNameState(prevState => !prevState)} />}\n      <EditCardButton\n        onClick={() => setChangeNameState(prevState => !prevState)}\n        empty={cardComments.length === 0}>\n        <FontAwesomeIcon icon={faEdit} />\n      </EditCardButton>\n      {cardComments.length !== 0 && <CardComments>\n        <FontAwesomeIcon icon={faComment} /> : {cardComments.length}\n      </CardComments>}\n      {hover && <CardComments onClick={() => deleteCard(id)}>\n        <FontAwesomeIcon icon={faTimes} />\n      </CardComments>}\n    </ColCard>\n    {popupState && <CardPopup\n      setPopupState={setPopupState}\n      cardInfo={{ id: id, name: cardName, author: author, desc: cardDesc, comments: cardComments }}\n      column={column}\n      changeCardName={setCardName}\n      changeCardDecs={setCardDesc}\n      setCardsComments={setComments}\n    />}\n  </CardContainer>\n}","import React, { useState } from \"react\";\nimport { ColumnNameInput, ColumnBorder, ColumnNameDiv, ColumnAddCardDiv, ButtonDiv } from \"./styles\";\nimport { Card, ColumnsContent } from \"../../utils/ColumnsContent\";\nimport { ColumnCard } from \"../Columncard\";\n\ninterface Props {\n  name: string;\n}\n\nexport const BoardColumn: React.FC<Props> = (props) => {\n  const columnName: string = props.name;\n\n  const column: ColumnsContent = JSON.parse(localStorage.getItem(columnName) as string);\n\n  const [colCards, setCards] = useState<Card[]>(column.cards);\n  const [name, setName] = useState<string>(column.name);\n  const [nameInputState, setNameInputState] = useState<boolean>(false);\n  const [newCardState, setNewCardState] = useState<boolean>(false);\n  const [cardInput, setCardInput] = useState<string>(\"\");\n\n  function store(name: string, colCards: Card[]): void {\n    localStorage.setItem(columnName, JSON.stringify({ name: name, cards: colCards }));\n  }\n\n  function saveName(event: React.ChangeEvent<HTMLInputElement>): void {\n    const v = event.target.value;\n    setName(v);\n    store(v, colCards);\n  }\n\n  function saveNewCard(): void {\n    if (cardInput.trim() === \"\") return;\n    const card: Card = {\n      id: colCards.length,\n      name: cardInput,\n      author: localStorage.getItem(\"user\") as string,\n      comments: [],\n      desc: \"\"\n    };\n    setCardInput(\"\");\n    const cards: Card[] = colCards.concat(card);\n    setCards(cards);\n    setNewCardState(prevState => !prevState);\n    store(name, cards);\n  }\n\n  function saveCardChanges(card: Card, index: number): void {\n    setCards(ps => {\n      ps[ps.findIndex(v => v.id === index)] = card;\n      store(name, ps);\n      return ps;\n    });\n  }\n\n  function deleteCard(i: number): void {\n    const cards: Card[] = colCards.filter(value => value.id !== i);\n    setCards(cards);\n    store(name, cards);\n  }\n\n  return <ColumnBorder>\n    {!nameInputState && <ColumnNameDiv\n      onClick={() => setNameInputState(prevState => !prevState)}>\n      {name}\n    </ColumnNameDiv>}\n    {nameInputState && <ColumnNameInput\n      value={name}\n      type=\"text\"\n      onMouseOver={event => {\n        event.currentTarget.focus();\n      }}\n      onChange={saveName}\n      onBlur={() => {\n        setNameInputState(prevState => !prevState);\n      }}\n    />}\n    {colCards.map((card) => <ColumnCard\n      column={name}\n      card={card}\n      key={card.id}\n      deleteCard={deleteCard}\n      saveCardState={saveCardChanges}\n    />)}\n    {!newCardState && <ColumnAddCardDiv onClick={() => setNewCardState(prevState => !prevState)}>\n      Add new card\n    </ColumnAddCardDiv>}\n    {newCardState && <ColumnNameInput\n      onMouseOver={(event) => event.currentTarget.focus()}\n      value={cardInput}\n      onChange={event => {\n        setCardInput(event.target.value);\n      }} placeholder=\"Add new card\" />}\n    {newCardState && <ButtonDiv>\n      <button className=\"btn primary\" onClick={saveNewCard}>\n        Add card\n      </button>\n      <button className=\"btn\" onClick={() => {\n        setNewCardState(prevState => !prevState);\n      }}>\n        Cancel\n      </button>\n    </ButtonDiv>}\n  </ColumnBorder>\n}","import React from 'react';\nimport { ColumnsContainer } from './styles';\nimport { BoardColumn } from \"../Boardcolumn\";\n\nexport const Board: React.FC = () => {\n  return <ColumnsContainer>\n    <BoardColumn name={\"Column0\"} />\n    <BoardColumn name={\"Column1\"} />\n    <BoardColumn name={\"Column2\"} />\n    <BoardColumn name={\"Column3\"} />\n  </ColumnsContainer>\n}","import styled from \"styled-components\";\n\nexport const MainComp = styled.div`\n  margin: 40px 0 0 0;\n`","import styled from \"styled-components\";\n\nexport const PopupContent = styled.div`\n        width: 100%;\n        height: 100%;\n        text-align: center;\n        display: flex;\n        flex-direction: column;\n        justify-content: space-around;\n    `\n\n","import React, { useState } from \"react\";\nimport { Popup } from \"../Popup\";\nimport { PopupContent } from \"./styles\";\n\ninterface Props {\n  togglePopup: (val: boolean) => void;\n}\n\nexport const LoginPopup: React.FC<Props> = ({ togglePopup }) => {\n\n  const [inputState, changeInputState] = useState(\"\");\n\n  function changeDisplayState(): void {\n    if (inputState.trim() === \"\") return;\n    togglePopup(false);\n    localStorage.setItem(\"user\", inputState);\n  }\n\n  return <Popup height={\"180px\"} width={\"350px\"} popupContent={\n    <PopupContent onKeyDown={event => {\n      if (event.key === 'Enter') changeDisplayState()\n    }}>\n      <div>\n        <h3>Hi!</h3>\n        <p>Enter your name</p>\n      </div>\n      <div className=\"modal-body\">\n        <input type=\"text\" placeholder=\"Name\" value={inputState} onChange={event => {\n          changeInputState(event.target.value);\n        }} />\n      </div>\n      <div className=\"modal-footer\">\n        <button onClick={changeDisplayState} className=\"btn primary\">\n          Done\n        </button>\n      </div>\n    </PopupContent>\n  }>\n  </Popup>\n}","import React from 'react';\nimport '../Board/Board'\nimport { Board } from \"../Board\";\nimport { MainComp } from \"./styles\";\nimport { LoginPopup } from '../Loginpopup';\nimport { useState } from 'react';\n\nexport const MainComponent: React.FC = () => {\n\n  const [popupState, setPopupState] = useState<boolean>(localStorage.getItem(\"user\") === null ? true : false);\n\n  return (\n    <MainComp>\n      <Board />\n      {popupState && <LoginPopup togglePopup={setPopupState} />}\n    </MainComp>\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './css /bootstrap.css'\n\nimport { Header } from \"./components/Header\";\nimport { MainComponent } from \"./components/Mainblock\";\n\n// localStorage.clear()\n\nif (localStorage.getItem(\"Column0\") === null) {\n  localStorage.setItem(\"Column0\", \"{\\\"name\\\":\\\"TODO\\\",\\\"cards\\\":[]}\");\n  localStorage.setItem(\"Column1\", \"{\\\"name\\\":\\\"In Progress\\\",\\\"cards\\\":[]}\");\n  localStorage.setItem(\"Column2\", \"{\\\"name\\\":\\\"Testing\\\",\\\"cards\\\":[]}\");\n  localStorage.setItem(\"Column3\", \"{\\\"name\\\":\\\"Done\\\",\\\"cards\\\":[]}\");\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Header />\n    <MainComponent />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}